/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/users/{userId}/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all accounts
         * @description List all accounts belonging to a user
         */
        get: operations["getAccounts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/accounts/{accountId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve an account
         * @description Retrieve a specific account belonging to a user
         */
        get: operations["getAccount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all transactions
         * @description List all transactions belonging to a specified user
         */
        get: operations["getTransactions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a transaction
         * @description Retrieve an existing transaction
         */
        get: operations["getTransaction"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/connections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List all connections
         * @description Returns a list of connections belonging to this user. Each entry in the array is a separate object. If no data is returned, the resulting array will be empty.
         */
        get: operations["getConnections"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/connections/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh all connections
         * @description Use this to refresh all connections belonging to the specified user.
         */
        post: operations["refreshConnections"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/connections/{connectionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a connection
         * @description Use this to retrieve details of a specific connection. Note that due to security the loginId, password, securityCode are never returned.
         */
        get: operations["getConnection"];
        put?: never;
        post?: never;
        /**
         * Delete a connection
         * @description Permanently deletes a connection. This does not include the existing account and transaction data associated with it. This can not be undone.
         */
        delete: operations["deleteConnection"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/connections/{connectionId}/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh a connection
         * @description Use this to refresh an existing connection. This will not return a new connection. Instead will return a job resource which is resonsible for refreshing the connection and fetching data asynchronously. Use this job resource to track the connections progress.
         */
        post: operations["refreshConnection"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/connections/{connectionId}/purge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Purge connection data
         * @description Use this endpoint to remove all user data related to a specific institution. Purging is only applicable for active user connections.
         *
         *     When Enrich data is updated, the Enrich results under transactions wonâ€™t automatically reflect these updates. To ensure the latest Enrich results are available, partners should first purge and then refresh connections. Without this step, any new insight reports generated will not include the latest enriched data.
         *
         *     > ðŸ“˜ **Note:** Remember to purge and refresh connections to keep Enrich insights current.
         */
        post: operations["purgeConnectionData"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/statements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a statement
         * @description Create a new statement by uploading an official PDF bank statement or CSV file. The server will create a job that processes the following steps:
         *     1. **verify-credentials**: Verify the file, validate the layout, and attempt to parse the statement.
         *     2. **retrieve-accounts**: Retrieve the list of accounts and their details (account number, name, balances).
         *     3. **retrieve-transactions**: Fetch the transactions for each account.
         *
         *     The status of each step can be checked by querying the Retrieve a job.
         *
         *     > Note that this function is not supported in sandbox environments (AU00000).
         *
         *     For CSV file format specifications, please contact our support team.
         *
         *     > ðŸš§
         *     >
         *     > Note that the time it takes to complete the processes above will vary depending on the volume of data along with the complexity of the bank statement. As a rough guide this entire process could take anywhere between 10 - 30 secs. Upload multiple statements in parallel to provide the best user experience
         */
        post: operations["createStatement"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/connectors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve connectors
         * @description NOTE: This end point requires authentication.
         */
        get: operations["getConnectors"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/connectors/{connectorId}/{method}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve a connector
         * @description NOTE: This end point requires authentication.
         */
        get: operations["getConnector"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        termDepositMetadata: {
            /** @description The lodgement date of the original deposit. */
            lodgementDate: string;
            /** @description Maturity date for the term deposit. */
            maturityDate: string;
            /** @description Amount to be paid upon maturity. If absent, it implies the amount to paid is variable and cannot currently be calculated. */
            maturityAmount?: string;
            /** @description If absent assumes AUD. */
            maturityCurrency?: string;
            /**
             * @description Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments.
             * @example PAID_OUT_AT_MATURITY
             * @enum {string}
             */
            maturityInstructions: "HOLD_ON_MATURITY" | "PAID_OUT_AT_MATURITY" | "ROLLED_OVER";
        };
        AccountClass: {
            /**
             * @description Account type
             * @example mortgage
             */
            type: string;
            /**
             * @description Product name.
             * @example Hooli Home Loan
             */
            product: string;
        };
        featureClass: {
            /**
             * @description The type of feature described.
             * @enum {string}
             */
            featureType: "ADDITIONAL_CARDS" | "BALANCE_TRANSFERS" | "BILL_PAYMENT" | "BONUS_REWARDS" | "CARD_ACCESS" | "CASHBACK_OFFER" | "COMPLEMENTARY_PRODUCT_DISCOUNTS" | "DIGITAL_BANKING" | "DIGITAL_WALLET" | "DONATE_INTEREST" | "EXTRA_REPAYMENTS" | "FRAUD_PROTECTION" | "FREE_TXNS" | "FREE_TXNS_ALLOWANCE" | "GUARANTOR" | "INSURANCE" | "INSTALMENT_PLAN" | "INTEREST_FREE" | "INTEREST_FREE_TRANSFERS" | "LOYALTY_PROGRAM" | "NOTIFICATIONS" | "NPP_ENABLED" | "NPP_PAYID" | "OFFSET" | "OTHER" | "OVERDRAFT" | "REDRAW" | "RELATIONSHIP_MANAGEMENT" | "UNLIMITED_TXNS";
            /** @description Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of the featureType. */
            additionalValue?: string;
            /** @description Display text providing more information on the feature. Mandatory if the feature type is set to OTHER. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this feature. */
            additionalInfoUri?: string;
            /**
             * @description true if the feature is already activated and false if the feature is available for activation. Defaults to true if absent.
             *     > Note: this is an additional field appended to the feature object defined in the Product Reference payload.
             *
             * @example true
             */
            isActivated?: boolean;
        };
        pursesClass: {
            /** @description The balance available for this additional currency purse. */
            amount: string;
            /** @description The currency for the purse. */
            currency?: string;
        };
        /**
         * ConnectionsGetResponseResource
         * @description Object containing details for connections.
         */
        ConnectionsGetResponseResource: {
            /**
             * @description Type, always "list".
             * @example list
             */
            type: string;
            data?: {
                /**
                 * @description Type, always "connection".
                 * @example connection
                 */
                type: string;
                /**
                 * @description Connection identification.
                 * @example 61723
                 */
                id: string;
                /**
                 * @description method identification.
                 * @example openbanking
                 */
                method: string;
                /**
                 * @description Connection status, available only for SERVER_SCOPE.
                 * @example active
                 * @enum {string}
                 */
                status?: "active" | "pending" | "invalid" | "pre-init";
                /**
                 * @description Created date of the connection, available only for SERVER_SCOPE.
                 * @example 2019-07-29T07:34:09Z
                 */
                createdDate: string;
                /**
                 * @description Expiry date of the connection.This date is only set for open-banking connections.
                 *
                 *     For web connections, the expiry date field will be empty.
                 *
                 * @example 2020-07-29T07:34:09Z
                 */
                expiryDate: string;
                /**
                 * @description Connection last used date, available only for SERVER_SCOPE.
                 * @example 2020-06-22T11:15:09Z
                 */
                lastUsed?: string;
                /**
                 * ConnectionInstitution
                 * @description Institution details.
                 */
                institution: {
                    /**
                     * @description Institution id
                     * @example AU00000
                     */
                    id: string;
                    /**
                     * ResourceLink
                     * @description Link object containing a link to the resource, self reference.
                     */
                    links: {
                        /**
                         * @description URL of the resource.
                         * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                         */
                        self: string;
                    };
                    /**
                     * @description Always "institution".
                     * @example institution
                     */
                    type: string;
                };
                /**
                 * GetConnectionsLinks
                 * @description Object containing links to resources.
                 */
                links: {
                    /**
                     * @description Accounts reference url.
                     * @example https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
                     */
                    accounts?: string;
                    /**
                     * @description Institution details.
                     * @example https://au-api.basiq.io/institutions/AU00000
                     */
                    institution: string;
                    /**
                     * @description Connection self reference url.
                     * @example https://au-api.basiq.io/users/cd6fbd92/connections/29523951
                     */
                    self: string;
                    /**
                     * @description Transactions reference url.
                     * @example https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
                     */
                    transactions?: string;
                };
            }[];
            /**
             * ResourceLink
             * @description Link object containing a link to the resource, self reference.
             */
            links?: {
                /**
                 * @description URL of the resource.
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                 */
                self: string;
            };
        };
        /**
         * ConnectionsRefreshResource
         * @description Object containing details for connections refresh.
         */
        ConnectionsRefreshResource: {
            /**
             * @description Type, always "list".
             * @example list
             */
            type: string;
            /** @description Job details data. */
            data: {
                /**
                 * @description Type, always "job".
                 * @example job
                 */
                type: string;
                /**
                 * @description Job identification.
                 * @example 29523951
                 */
                id: string;
                /**
                 * ResourceLink
                 * @description Link object containing a link to the resource, self reference.
                 */
                links: {
                    /**
                     * @description URL of the resource.
                     * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                     */
                    self: string;
                };
            }[];
        };
        AccountsContainer: {
            /**
             * @description Type always "list".
             * @example list
             */
            type: string;
            /** @description Accounts details */
            data: {
                /**
                 * @description Type always "account".
                 * @example account
                 */
                type: string;
                /**
                 * @description Account identification.
                 * @example 319ae910
                 */
                id: string;
                /**
                 * @description Account name.
                 * @example Business account
                 */
                name: string;
                /**
                 * @description Currency
                 * @example AUD
                 */
                currency: string;
                class: {
                    /**
                     * @description Account type
                     * @example mortgage
                     */
                    type: string;
                    /**
                     * @description Product name.
                     * @example Hooli Home Loan
                     */
                    product: string;
                };
                /**
                 * @description Account number
                 * @example 105148119695
                 */
                accountNo: string;
                /**
                 * @description Account available funds, nullable.
                 * @example 200.54
                 */
                availableFunds: string | null;
                /**
                 * @description Account balance, nullable.
                 * @example 100.12
                 */
                balance: string | null;
                /**
                 * @description Account last updated date and time.
                 * @example 2017-09-28T11:15:09.756Z
                 */
                lastUpdated: string;
                /**
                 * @description Account status.
                 * @example available
                 * @enum {string}
                 */
                status: "available" | "unavailable";
                links: {
                    /**
                     * @description transactions link to the transactions associated with this account
                     * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
                     */
                    transactions: string;
                    /**
                     * @description self link to the requested account
                     * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                     */
                    self: string;
                };
            }[];
        };
        AccountsData: {
            /**
             * @description Type always "account".
             * @example account
             */
            type: string;
            /**
             * @description Account identification.
             * @example 319ae910
             */
            id: string;
            /**
             * @description Account name.
             * @example Business account
             */
            name: string;
            /**
             * @description Currency
             * @example AUD
             */
            currency: string;
            class: {
                /**
                 * @description Account type
                 * @example mortgage
                 */
                type: string;
                /**
                 * @description Product name.
                 * @example Hooli Home Loan
                 */
                product: string;
            };
            /**
             * @description Account number
             * @example 105148119695
             */
            accountNo: string;
            /**
             * @description Account available funds, nullable.
             * @example 200.54
             */
            availableFunds: string | null;
            /**
             * @description Account balance, nullable.
             * @example 100.12
             */
            balance: string | null;
            /**
             * @description Account last updated date and time.
             * @example 2017-09-28T11:15:09.756Z
             */
            lastUpdated: string;
            /**
             * @description Account status.
             * @example available
             * @enum {string}
             */
            status: "available" | "unavailable";
            links: {
                /**
                 * @description transactions link to the transactions associated with this account
                 * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
                 */
                transactions: string;
                /**
                 * @description self link to the requested account
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                 */
                self: string;
            };
        };
        /**
         * @description Type identifies response data format
         * @example list
         */
        ResponseFormat: string;
        /** @description Colors contains institution colors type */
        Colors: {
            /** @description Primary primary institution color */
            primary?: string;
        };
        /** @description institution logo resource links */
        LogoResourceLinks: {
            /**
             * @description URL to full size logo
             * @example https://example.com/AU00000-full.svg
             */
            full: string;
            /**
             * @description Square formatted logo URL
             * @example https://example.com/AU00000.svg
             */
            square: string;
        };
        /** @description Institution logo resource type */
        InstitutionLogoResource: {
            /** @description Colors contains institution colors type */
            colors?: {
                /** @description Primary primary institution color */
                primary?: string;
            };
            /** @description institution logo resource links */
            links: {
                /**
                 * @description URL to full size logo
                 * @example https://example.com/AU00000-full.svg
                 */
                full: string;
                /**
                 * @description Square formatted logo URL
                 * @example https://example.com/AU00000.svg
                 */
                square: string;
            };
            /**
             * @description Resource type identifier.
             *     image ImageResourceType
             * @example image
             * @enum {string}
             */
            type: "image";
        };
        ConnectionAccountLinks: {
            /**
             * @description transactions link to the transactions associated with this account
             * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
             */
            transactions: string;
            /**
             * @description self link to the requested account
             * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
             */
            self: string;
        };
        /**
         * PhysicalAddresses
         * @description User physical addresses holding the connection.
         */
        PhysicalAddresses: {
            /**
             * @description User address.
             * @example 13/91 Fisher Rd
             */
            addressLine1: string;
            /** @description Always "null" */
            addressLine2: string | null;
            /** @description Always "null" */
            addressLine3: string | null;
            /**
             * @description City
             * @example Sydney
             */
            city: string;
            country?: string;
            /**
             * @description Country code
             * @example AU
             */
            countryCode: string;
            /**
             * @description Address formatted.
             * @example 13/91 Fisher Rd, Dee Why NSW 2099, Australia
             */
            formattedAddress: string;
            /**
             * @description Post code
             * @example 2099
             */
            postcode: string;
            /**
             * @description State
             * @example NSW
             */
            state: string;
        };
        /** @description ConnectorsList contains list of connectors data. */
        ConnectorsList: {
            /**
             * @description Type identifies response data format
             * @example list
             */
            type: string;
            /**
             * Format: int64
             * @description TotalCount contains total count of connectors
             * @example 328
             */
            totalCount: number;
            /** @description Data contains list of connectors */
            data: {
                /**
                 * @description Resource type identifier. It is always "connector" for this model.
                 *     connector ConnectorEntityType
                 * @example connector
                 * @enum {string}
                 */
                type: "connector";
                /**
                 * @description Institution ID
                 * @example AU00000
                 */
                id: string;
                /**
                 * @description Current Connector method
                 * @example web
                 * @enum {string}
                 */
                method: "web" | "openbanking" | "csv" | "pdf";
                /**
                 * @description Current Connector stage
                 * @example beta
                 */
                stage: string;
                /** @description FeatureCondition type that describes an feature status for institution */
                status: string;
                /** @description ConnectorInstitutionResource connector Institution  resource type */
                institution: {
                    /**
                     * @description Institution type identifier
                     *     Bank BankInstitutionType  BankInstitutionType institution type identifier for Banks
                     *     Bank (Foreign) BankForeignInstitutionType BankForeignInstitutionType institution type identifier for Foreign banks
                     *     Test Bank TestBankInstitutionType  TestBankInstitutionType institution type identifier for Test banks
                     *     Credit Union CreditUnionInstitutionType  CreditUnionInstitutionType institution type identifier for Credit union institutions
                     *     Financial Services FinancialServicesInstitutionType FinancialServicesInstitutionType institution type identifier for Financial service institutions
                     *     Superannuation SuperannuationInstitutionType SuperannuationInstitutionType institution type identifier for Superannuation institutions
                     *     Building Society BuildingSociety  BuildingSociety institution type identifier for Building Society institutions
                     *     Government Government  Government institution type identifier for Government institutions
                     * @example Bank
                     * @enum {string}
                     */
                    type: "Bank" | "Bank (Foreign)" | "Test Bank" | "Credit Union" | "Financial Services" | "Superannuation" | "Building Society" | "Government";
                    /**
                     * @description Institution name
                     * @example Hooli Bank
                     */
                    name: string;
                    /**
                     * @description Institution short name
                     * @example Hooli
                     */
                    shortName: string;
                    /**
                     * @description Institution tier identifier
                     *     1 TierOne  TierOne tier identifier for tier1 institution
                     *     2 TierTwo  TierTwo tier identifier for tier2 institution
                     *     3 TierThree  TierThree tier identifier for tier3 institution
                     *     4 TierFour  TierFour tier identifier for tier4 institution
                     * @example 1
                     * @enum {string}
                     */
                    tier: "1" | "2" | "3" | "4";
                    /**
                     * @description Institution country name
                     * @example Australia
                     */
                    country: string;
                    /**
                     * @description A link for Data Holder (where available) to a page explaining CDR data sharing process.
                     *
                     * @example https://example.com/banking/help-support/open-banking.html
                     */
                    cdrFAQ?: string;
                    /**
                     * @description The email address for CDR-related inquiries.
                     * @example openbanking.dataholdersupport@example.com.au
                     */
                    cdrEmail?: string;
                    /**
                     * @description The URL to the CDR policy document detailing the institution's data practices and consumer rights.
                     * @example https://www.example.com.au/CDRpolicy
                     */
                    cdrPolicy?: string;
                    /**
                     * @description A unique identifier assigned to the CDR institution by the CDR program.
                     * @example DHBNK000111
                     */
                    cdrProviderNumber?: string;
                    /**
                     * @description ABN for the Data Holder ( only available in openbanking ).
                     * @example 87087651111
                     */
                    abn?: string;
                    /**
                     * @description ACN for the Data Holder ( only available in openbanking ).
                     * @example 087651111
                     */
                    acn?: string;
                    /** @description Institution logo resource type */
                    logo: {
                        /** @description Colors contains institution colors type */
                        colors?: {
                            /** @description Primary primary institution color */
                            primary?: string;
                        };
                        /** @description institution logo resource links */
                        links: {
                            /**
                             * @description URL to full size logo
                             * @example https://example.com/AU00000-full.svg
                             */
                            full: string;
                            /**
                             * @description Square formatted logo URL
                             * @example https://example.com/AU00000.svg
                             */
                            square: string;
                        };
                        /**
                         * @description Resource type identifier.
                         *     image ImageResourceType
                         * @example image
                         * @enum {string}
                         */
                        type: "image";
                    };
                };
                /** @description Connector scopes array */
                scopes: string[];
                authorization: {
                    /**
                     * @description Authorization type identifier
                     *     user AuthorizationUser  AuthorizationUser "User" authorization type identifier
                     *     token AuthorizationToken AuthorizationToken "Token" authorization type identifier
                     *     other AuthorizationOther  AuthorizationOther "Other" authorization type identifier
                     *     user-mfa AuthorizationUserMfa  AuthorizationUserMfa "UserMfa" authorization type identifier
                     *     user-mfa-intermittent AuthorizationUserMfaIntermittent AuthorizationUserMfaIntermittent "UserMfaIntermittent" authorization type identifier
                     * @example user
                     * @enum {string}
                     */
                    type: "user" | "token" | "other" | "user-mfa" | "user-mfa-intermittent";
                    meta?: {
                        /**
                         * @description URL to institution forgotten password page
                         * @example https://example.com/forgotten-password
                         */
                        forgotten_password_url?: string;
                        /**
                         * @description Login ID field caption that should be shown on UI
                         * @example User name
                         */
                        login_id_caption?: string;
                        /**
                         * @description Password field caption that should be shown on UI
                         * @example Password
                         */
                        password_caption?: string;
                        /**
                         * @description Secondary loginID caption that should be shown on UI
                         * @example Secondary login id
                         */
                        secondary_login_id_caption?: string;
                        /**
                         * @description Security code caption that should be shown on UI
                         * @example Security code
                         */
                        security_code_caption?: string;
                    };
                };
                /** @description InstitutionPerformanceStats response type for institution performance stats */
                stats: {
                    /** @description AverageDurationMs average connector duration in milliseconds per segments.
                     *     When durations are not known for institution this field will be `null`. */
                    averageDurationMs?: {
                        /**
                         * Format: int64
                         * @description Connector average duration in milliseconds of <b>fetch accounts</b> step for institution
                         */
                        retrieveAccounts?: number;
                        /**
                         * Format: int64
                         * @description Connector average duration in milliseconds of <b>fetch metadata</b> step for institution
                         */
                        retrieveMeta?: number;
                        /**
                         * Format: int64
                         * @description Connector average duration in milliseconds of <b>fetch transactions</b> step for institution
                         */
                        retrieveTransactions?: number;
                        /**
                         * Format: int64
                         * @description Total connector average duration in milliseconds
                         */
                        total?: number;
                        /**
                         * Format: int64
                         * @description Connector average duration in milliseconds of <b>verifiy credentials</b> step for institution
                         */
                        verifyCredentials?: number;
                    };
                };
                /** @description ResourceLinks contains resource links */
                links?: {
                    /** @description URL to resource itself */
                    self: string;
                };
            }[];
            /** @description ResourceLinks contains resource links */
            links: {
                /** @description URL to resource itself */
                self: string;
            };
        };
        /** @description ResourceLinks contains resource links */
        ResourceLinks: {
            /** @description URL to resource itself */
            self: string;
        };
        /** @description Connector contains connector data. */
        Connector: {
            /**
             * @description Resource type identifier. It is always "connector" for this model.
             *     connector ConnectorEntityType
             * @example connector
             * @enum {string}
             */
            type: "connector";
            /**
             * @description Institution ID
             * @example AU00000
             */
            id: string;
            /**
             * @description Current Connector method
             * @example web
             * @enum {string}
             */
            method: "web" | "openbanking" | "csv" | "pdf";
            /**
             * @description Current Connector stage
             * @example beta
             */
            stage: string;
            /** @description FeatureCondition type that describes an feature status for institution */
            status: string;
            /** @description ConnectorInstitutionResource connector Institution  resource type */
            institution: {
                /**
                 * @description Institution type identifier
                 *     Bank BankInstitutionType  BankInstitutionType institution type identifier for Banks
                 *     Bank (Foreign) BankForeignInstitutionType BankForeignInstitutionType institution type identifier for Foreign banks
                 *     Test Bank TestBankInstitutionType  TestBankInstitutionType institution type identifier for Test banks
                 *     Credit Union CreditUnionInstitutionType  CreditUnionInstitutionType institution type identifier for Credit union institutions
                 *     Financial Services FinancialServicesInstitutionType FinancialServicesInstitutionType institution type identifier for Financial service institutions
                 *     Superannuation SuperannuationInstitutionType SuperannuationInstitutionType institution type identifier for Superannuation institutions
                 *     Building Society BuildingSociety  BuildingSociety institution type identifier for Building Society institutions
                 *     Government Government  Government institution type identifier for Government institutions
                 * @example Bank
                 * @enum {string}
                 */
                type: "Bank" | "Bank (Foreign)" | "Test Bank" | "Credit Union" | "Financial Services" | "Superannuation" | "Building Society" | "Government";
                /**
                 * @description Institution name
                 * @example Hooli Bank
                 */
                name: string;
                /**
                 * @description Institution short name
                 * @example Hooli
                 */
                shortName: string;
                /**
                 * @description Institution tier identifier
                 *     1 TierOne  TierOne tier identifier for tier1 institution
                 *     2 TierTwo  TierTwo tier identifier for tier2 institution
                 *     3 TierThree  TierThree tier identifier for tier3 institution
                 *     4 TierFour  TierFour tier identifier for tier4 institution
                 * @example 1
                 * @enum {string}
                 */
                tier: "1" | "2" | "3" | "4";
                /**
                 * @description Institution country name
                 * @example Australia
                 */
                country: string;
                /**
                 * @description A link for Data Holder (where available) to a page explaining CDR data sharing process.
                 *
                 * @example https://example.com/banking/help-support/open-banking.html
                 */
                cdrFAQ?: string;
                /**
                 * @description The email address for CDR-related inquiries.
                 * @example openbanking.dataholdersupport@example.com.au
                 */
                cdrEmail?: string;
                /**
                 * @description The URL to the CDR policy document detailing the institution's data practices and consumer rights.
                 * @example https://www.example.com.au/CDRpolicy
                 */
                cdrPolicy?: string;
                /**
                 * @description A unique identifier assigned to the CDR institution by the CDR program.
                 * @example DHBNK000111
                 */
                cdrProviderNumber?: string;
                /**
                 * @description ABN for the Data Holder ( only available in openbanking ).
                 * @example 87087651111
                 */
                abn?: string;
                /**
                 * @description ACN for the Data Holder ( only available in openbanking ).
                 * @example 087651111
                 */
                acn?: string;
                /** @description Institution logo resource type */
                logo: {
                    /** @description Colors contains institution colors type */
                    colors?: {
                        /** @description Primary primary institution color */
                        primary?: string;
                    };
                    /** @description institution logo resource links */
                    links: {
                        /**
                         * @description URL to full size logo
                         * @example https://example.com/AU00000-full.svg
                         */
                        full: string;
                        /**
                         * @description Square formatted logo URL
                         * @example https://example.com/AU00000.svg
                         */
                        square: string;
                    };
                    /**
                     * @description Resource type identifier.
                     *     image ImageResourceType
                     * @example image
                     * @enum {string}
                     */
                    type: "image";
                };
            };
            /** @description Connector scopes array */
            scopes: string[];
            authorization: {
                /**
                 * @description Authorization type identifier
                 *     user AuthorizationUser  AuthorizationUser "User" authorization type identifier
                 *     token AuthorizationToken AuthorizationToken "Token" authorization type identifier
                 *     other AuthorizationOther  AuthorizationOther "Other" authorization type identifier
                 *     user-mfa AuthorizationUserMfa  AuthorizationUserMfa "UserMfa" authorization type identifier
                 *     user-mfa-intermittent AuthorizationUserMfaIntermittent AuthorizationUserMfaIntermittent "UserMfaIntermittent" authorization type identifier
                 * @example user
                 * @enum {string}
                 */
                type: "user" | "token" | "other" | "user-mfa" | "user-mfa-intermittent";
                meta?: {
                    /**
                     * @description URL to institution forgotten password page
                     * @example https://example.com/forgotten-password
                     */
                    forgotten_password_url?: string;
                    /**
                     * @description Login ID field caption that should be shown on UI
                     * @example User name
                     */
                    login_id_caption?: string;
                    /**
                     * @description Password field caption that should be shown on UI
                     * @example Password
                     */
                    password_caption?: string;
                    /**
                     * @description Secondary loginID caption that should be shown on UI
                     * @example Secondary login id
                     */
                    secondary_login_id_caption?: string;
                    /**
                     * @description Security code caption that should be shown on UI
                     * @example Security code
                     */
                    security_code_caption?: string;
                };
            };
            /** @description InstitutionPerformanceStats response type for institution performance stats */
            stats: {
                /** @description AverageDurationMs average connector duration in milliseconds per segments.
                 *     When durations are not known for institution this field will be `null`. */
                averageDurationMs?: {
                    /**
                     * Format: int64
                     * @description Connector average duration in milliseconds of <b>fetch accounts</b> step for institution
                     */
                    retrieveAccounts?: number;
                    /**
                     * Format: int64
                     * @description Connector average duration in milliseconds of <b>fetch metadata</b> step for institution
                     */
                    retrieveMeta?: number;
                    /**
                     * Format: int64
                     * @description Connector average duration in milliseconds of <b>fetch transactions</b> step for institution
                     */
                    retrieveTransactions?: number;
                    /**
                     * Format: int64
                     * @description Total connector average duration in milliseconds
                     */
                    total?: number;
                    /**
                     * Format: int64
                     * @description Connector average duration in milliseconds of <b>verifiy credentials</b> step for institution
                     */
                    verifyCredentials?: number;
                };
            };
            /** @description ResourceLinks contains resource links */
            links?: {
                /** @description URL to resource itself */
                self: string;
            };
        };
        ConnectorAuthorization: {
            /**
             * @description Authorization type identifier
             *     user AuthorizationUser  AuthorizationUser "User" authorization type identifier
             *     token AuthorizationToken AuthorizationToken "Token" authorization type identifier
             *     other AuthorizationOther  AuthorizationOther "Other" authorization type identifier
             *     user-mfa AuthorizationUserMfa  AuthorizationUserMfa "UserMfa" authorization type identifier
             *     user-mfa-intermittent AuthorizationUserMfaIntermittent AuthorizationUserMfaIntermittent "UserMfaIntermittent" authorization type identifier
             * @example user
             * @enum {string}
             */
            type: "user" | "token" | "other" | "user-mfa" | "user-mfa-intermittent";
            meta?: {
                /**
                 * @description URL to institution forgotten password page
                 * @example https://example.com/forgotten-password
                 */
                forgotten_password_url?: string;
                /**
                 * @description Login ID field caption that should be shown on UI
                 * @example User name
                 */
                login_id_caption?: string;
                /**
                 * @description Password field caption that should be shown on UI
                 * @example Password
                 */
                password_caption?: string;
                /**
                 * @description Secondary loginID caption that should be shown on UI
                 * @example Secondary login id
                 */
                secondary_login_id_caption?: string;
                /**
                 * @description Security code caption that should be shown on UI
                 * @example Security code
                 */
                security_code_caption?: string;
            };
        };
        /** @description FeatureCondition type that describes an feature status for institution */
        FeatureCondition: string;
        /** @description InstitutionPerformanceStats response type for institution performance stats */
        InstitutionPerformanceStats: {
            /** @description AverageDurationMs average connector duration in milliseconds per segments.
             *     When durations are not known for institution this field will be `null`. */
            averageDurationMs?: {
                /**
                 * Format: int64
                 * @description Connector average duration in milliseconds of <b>fetch accounts</b> step for institution
                 */
                retrieveAccounts?: number;
                /**
                 * Format: int64
                 * @description Connector average duration in milliseconds of <b>fetch metadata</b> step for institution
                 */
                retrieveMeta?: number;
                /**
                 * Format: int64
                 * @description Connector average duration in milliseconds of <b>fetch transactions</b> step for institution
                 */
                retrieveTransactions?: number;
                /**
                 * Format: int64
                 * @description Total connector average duration in milliseconds
                 */
                total?: number;
                /**
                 * Format: int64
                 * @description Connector average duration in milliseconds of <b>verifiy credentials</b> step for institution
                 */
                verifyCredentials?: number;
            };
        };
        ConnectorAuthorizationMeta: {
            /**
             * @description URL to institution forgotten password page
             * @example https://example.com/forgotten-password
             */
            forgotten_password_url?: string;
            /**
             * @description Login ID field caption that should be shown on UI
             * @example User name
             */
            login_id_caption?: string;
            /**
             * @description Password field caption that should be shown on UI
             * @example Password
             */
            password_caption?: string;
            /**
             * @description Secondary loginID caption that should be shown on UI
             * @example Secondary login id
             */
            secondary_login_id_caption?: string;
            /**
             * @description Security code caption that should be shown on UI
             * @example Security code
             */
            security_code_caption?: string;
        };
        /** @description ConnectorInstitutionResource connector Institution  resource type */
        ConnectorInstitutionResource: {
            /**
             * @description Institution type identifier
             *     Bank BankInstitutionType  BankInstitutionType institution type identifier for Banks
             *     Bank (Foreign) BankForeignInstitutionType BankForeignInstitutionType institution type identifier for Foreign banks
             *     Test Bank TestBankInstitutionType  TestBankInstitutionType institution type identifier for Test banks
             *     Credit Union CreditUnionInstitutionType  CreditUnionInstitutionType institution type identifier for Credit union institutions
             *     Financial Services FinancialServicesInstitutionType FinancialServicesInstitutionType institution type identifier for Financial service institutions
             *     Superannuation SuperannuationInstitutionType SuperannuationInstitutionType institution type identifier for Superannuation institutions
             *     Building Society BuildingSociety  BuildingSociety institution type identifier for Building Society institutions
             *     Government Government  Government institution type identifier for Government institutions
             * @example Bank
             * @enum {string}
             */
            type: "Bank" | "Bank (Foreign)" | "Test Bank" | "Credit Union" | "Financial Services" | "Superannuation" | "Building Society" | "Government";
            /**
             * @description Institution name
             * @example Hooli Bank
             */
            name: string;
            /**
             * @description Institution short name
             * @example Hooli
             */
            shortName: string;
            /**
             * @description Institution tier identifier
             *     1 TierOne  TierOne tier identifier for tier1 institution
             *     2 TierTwo  TierTwo tier identifier for tier2 institution
             *     3 TierThree  TierThree tier identifier for tier3 institution
             *     4 TierFour  TierFour tier identifier for tier4 institution
             * @example 1
             * @enum {string}
             */
            tier: "1" | "2" | "3" | "4";
            /**
             * @description Institution country name
             * @example Australia
             */
            country: string;
            /**
             * @description A link for Data Holder (where available) to a page explaining CDR data sharing process.
             *
             * @example https://example.com/banking/help-support/open-banking.html
             */
            cdrFAQ?: string;
            /**
             * @description The email address for CDR-related inquiries.
             * @example openbanking.dataholdersupport@example.com.au
             */
            cdrEmail?: string;
            /**
             * @description The URL to the CDR policy document detailing the institution's data practices and consumer rights.
             * @example https://www.example.com.au/CDRpolicy
             */
            cdrPolicy?: string;
            /**
             * @description A unique identifier assigned to the CDR institution by the CDR program.
             * @example DHBNK000111
             */
            cdrProviderNumber?: string;
            /**
             * @description ABN for the Data Holder ( only available in openbanking ).
             * @example 87087651111
             */
            abn?: string;
            /**
             * @description ACN for the Data Holder ( only available in openbanking ).
             * @example 087651111
             */
            acn?: string;
            /** @description Institution logo resource type */
            logo: {
                /** @description Colors contains institution colors type */
                colors?: {
                    /** @description Primary primary institution color */
                    primary?: string;
                };
                /** @description institution logo resource links */
                links: {
                    /**
                     * @description URL to full size logo
                     * @example https://example.com/AU00000-full.svg
                     */
                    full: string;
                    /**
                     * @description Square formatted logo URL
                     * @example https://example.com/AU00000.svg
                     */
                    square: string;
                };
                /**
                 * @description Resource type identifier.
                 *     image ImageResourceType
                 * @example image
                 * @enum {string}
                 */
                type: "image";
            };
        };
        UnauthorizedError: {
            /**
             * @description Unique identifier for this particular occurrence of the problem.
             * @example ac5ah5i
             */
            correlationId: string;
            /** @description Error data. */
            data: {
                /**
                 * @description Application-specific error code, expressed as a string value.
                 * @example unauthorized-access
                 * @enum {string}
                 */
                code: "unauthorized-access" | "invalid-authorization-token";
                /**
                 * @description Human-readable explanation specific to this occurrence of the problem.
                 * @example You are not authorized to access this resource
                 */
                detail?: string;
                /**
                 * @description Title of the error
                 * @example Unauthorized Access
                 */
                title?: string;
                /**
                 * @description Type of the response, always "error"
                 * @example error
                 */
                type: string;
            }[];
            /**
             * @description Always "list".
             * @example list
             */
            type: string;
        };
        ConnectionProfile: {
            /**
             * @description User email address
             * @example [
             *       "gavin@hooli.com"
             *     ]
             */
            emailAddresses: string[];
            /**
             * @description User first name
             * @example Gavin
             */
            firstName: string;
            /**
             * @description User full name
             * @example Gavin Belson
             */
            fullName: string;
            /**
             * @description User last name
             * @example Belson
             */
            lastName: string;
            /** @description User middle name */
            middleName: string;
            /**
             * @description User phone number
             * @example [
             *       "XXXX 888 991"
             *     ]
             */
            phoneNumbers: string[];
            /** @description Physical user addresses */
            physicalAddresses: {
                /**
                 * @description User address.
                 * @example 13/91 Fisher Rd
                 */
                addressLine1: string;
                /** @description Always "null" */
                addressLine2: string | null;
                /** @description Always "null" */
                addressLine3: string | null;
                /**
                 * @description City
                 * @example Sydney
                 */
                city: string;
                country?: string;
                /**
                 * @description Country code
                 * @example AU
                 */
                countryCode: string;
                /**
                 * @description Address formatted.
                 * @example 13/91 Fisher Rd, Dee Why NSW 2099, Australia
                 */
                formattedAddress: string;
                /**
                 * @description Post code
                 * @example 2099
                 */
                postcode: string;
                /**
                 * @description State
                 * @example NSW
                 */
                state: string;
            }[];
        };
        /**
         * ConnectionGetResponseResource
         * @description Object containing details for connection post.
         */
        ConnectionGetResponseResource: {
            /**
             * @description Type, always "connection".
             * @example connection
             */
            type: string;
            /**
             * @description A string that uniquely identifies the user connection.
             * @example 61723
             */
            id: string;
            /**
             * @description A string that uniquely identifies the user connections either it is web or openbanking
             * @example open-banking
             */
            method: string;
            /**
             * @description Created date of the connection, available only for SERVER_SCOPE.
             * @example 2019-07-29T07:34:09Z
             */
            createdDate: string;
            /**
             * @description Expiry date of the connection.This date is only set for open-banking connections.
             *
             *     For web connections, the expiry date field will be empty.
             *
             * @example 2020-07-29T07:34:09Z
             */
            expiryDate: string;
            /**
             * @description UTC Date and Time of when the connection was last used, in RFC 3339 format, available only for SERVER_SCOPE.
             * @example 2020-06-22T11:15:09Z
             */
            lastUsed?: string;
            accounts?: {
                /**
                 * @description Type always "list".
                 * @example list
                 */
                type: string;
                /** @description Accounts details */
                data: {
                    /**
                     * @description Type always "account".
                     * @example account
                     */
                    type: string;
                    /**
                     * @description Account identification.
                     * @example 319ae910
                     */
                    id: string;
                    /**
                     * @description Account name.
                     * @example Business account
                     */
                    name: string;
                    /**
                     * @description Currency
                     * @example AUD
                     */
                    currency: string;
                    class: {
                        /**
                         * @description Account type
                         * @example mortgage
                         */
                        type: string;
                        /**
                         * @description Product name.
                         * @example Hooli Home Loan
                         */
                        product: string;
                    };
                    /**
                     * @description Account number
                     * @example 105148119695
                     */
                    accountNo: string;
                    /**
                     * @description Account available funds, nullable.
                     * @example 200.54
                     */
                    availableFunds: string | null;
                    /**
                     * @description Account balance, nullable.
                     * @example 100.12
                     */
                    balance: string | null;
                    /**
                     * @description Account last updated date and time.
                     * @example 2017-09-28T11:15:09.756Z
                     */
                    lastUpdated: string;
                    /**
                     * @description Account status.
                     * @example available
                     * @enum {string}
                     */
                    status: "available" | "unavailable";
                    links: {
                        /**
                         * @description transactions link to the transactions associated with this account
                         * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
                         */
                        transactions: string;
                        /**
                         * @description self link to the requested account
                         * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                         */
                        self: string;
                    };
                }[];
            };
            /**
             * ConnectionInstitution
             * @description Institution details.
             */
            institution: {
                /**
                 * @description Institution id
                 * @example AU00000
                 */
                id: string;
                /**
                 * ResourceLink
                 * @description Link object containing a link to the resource, self reference.
                 */
                links: {
                    /**
                     * @description URL of the resource.
                     * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                     */
                    self: string;
                };
                /**
                 * @description Always "institution".
                 * @example institution
                 */
                type: string;
            };
            profile?: {
                /**
                 * @description User email address
                 * @example [
                 *       "gavin@hooli.com"
                 *     ]
                 */
                emailAddresses: string[];
                /**
                 * @description User first name
                 * @example Gavin
                 */
                firstName: string;
                /**
                 * @description User full name
                 * @example Gavin Belson
                 */
                fullName: string;
                /**
                 * @description User last name
                 * @example Belson
                 */
                lastName: string;
                /** @description User middle name */
                middleName: string;
                /**
                 * @description User phone number
                 * @example [
                 *       "XXXX 888 991"
                 *     ]
                 */
                phoneNumbers: string[];
                /** @description Physical user addresses */
                physicalAddresses: {
                    /**
                     * @description User address.
                     * @example 13/91 Fisher Rd
                     */
                    addressLine1: string;
                    /** @description Always "null" */
                    addressLine2: string | null;
                    /** @description Always "null" */
                    addressLine3: string | null;
                    /**
                     * @description City
                     * @example Sydney
                     */
                    city: string;
                    country?: string;
                    /**
                     * @description Country code
                     * @example AU
                     */
                    countryCode: string;
                    /**
                     * @description Address formatted.
                     * @example 13/91 Fisher Rd, Dee Why NSW 2099, Australia
                     */
                    formattedAddress: string;
                    /**
                     * @description Post code
                     * @example 2099
                     */
                    postcode: string;
                    /**
                     * @description State
                     * @example NSW
                     */
                    state: string;
                }[];
            };
            /**
             * @description Indicates the connection status, available only for SERVER_SCOPE.
             * @example active
             * @enum {string}
             */
            status?: "active" | "pending" | "invalid" | "pre-init";
            /**
             * GetConnectionLinks
             * @description Object containing links to resources.
             */
            links: {
                /**
                 * @description Accounts reference url.
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
                 */
                accounts?: string;
                /**
                 * @description Connection self reference url.
                 * @example https://au-api.basiq.io/users/cd6fbd92-0b12-43ba-a3c1-286dd5f4f396/connections/29523951
                 */
                self: string;
                /**
                 * @description Transactions reference url.
                 * @example https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
                 */
                transactions?: string;
                /**
                 * @description User reference url.
                 * @example https://au-api.basiq.io/users/cd6fbd92
                 */
                user: string;
            };
        };
        /**
         * ConnectionResponseResource
         * @description Object containing details for connection post.
         */
        ConnectionResponseResource: {
            /**
             * @description Type, always "job".
             * @example job
             */
            type: string;
            /**
             * @description Job identification.
             * @example 29523951
             */
            id: string;
            /**
             * ResourceLink
             * @description Link object containing a link to the resource, self reference.
             */
            links: {
                /**
                 * @description URL of the resource.
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                 */
                self: string;
            };
        };
        /**
         * GetConnectionLinks
         * @description Object containing links to resources.
         */
        GetConnectionLinks: {
            /**
             * @description Accounts reference url.
             * @example https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
             */
            accounts?: string;
            /**
             * @description Connection self reference url.
             * @example https://au-api.basiq.io/users/cd6fbd92-0b12-43ba-a3c1-286dd5f4f396/connections/29523951
             */
            self: string;
            /**
             * @description Transactions reference url.
             * @example https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
             */
            transactions?: string;
            /**
             * @description User reference url.
             * @example https://au-api.basiq.io/users/cd6fbd92
             */
            user: string;
        };
        /**
         * GetConnectionsLinks
         * @description Object containing links to resources.
         */
        GetConnectionsLinks: {
            /**
             * @description Accounts reference url.
             * @example https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
             */
            accounts?: string;
            /**
             * @description Institution details.
             * @example https://au-api.basiq.io/institutions/AU00000
             */
            institution: string;
            /**
             * @description Connection self reference url.
             * @example https://au-api.basiq.io/users/cd6fbd92/connections/29523951
             */
            self: string;
            /**
             * @description Transactions reference url.
             * @example https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
             */
            transactions?: string;
        };
        /**
         * ConnectionInstitution
         * @description Institution details.
         */
        ConnectionInstitution: {
            /**
             * @description Institution id
             * @example AU00000
             */
            id: string;
            /**
             * ResourceLink
             * @description Link object containing a link to the resource, self reference.
             */
            links: {
                /**
                 * @description URL of the resource.
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                 */
                self: string;
            };
            /**
             * @description Always "institution".
             * @example institution
             */
            type: string;
        };
        ConnectionsData: {
            /**
             * @description Type, always "connection".
             * @example connection
             */
            type: string;
            /**
             * @description Connection identification.
             * @example 61723
             */
            id: string;
            /**
             * @description method identification.
             * @example openbanking
             */
            method: string;
            /**
             * @description Connection status, available only for SERVER_SCOPE.
             * @example active
             * @enum {string}
             */
            status?: "active" | "pending" | "invalid" | "pre-init";
            /**
             * @description Created date of the connection, available only for SERVER_SCOPE.
             * @example 2019-07-29T07:34:09Z
             */
            createdDate: string;
            /**
             * @description Expiry date of the connection.This date is only set for open-banking connections.
             *
             *     For web connections, the expiry date field will be empty.
             *
             * @example 2020-07-29T07:34:09Z
             */
            expiryDate: string;
            /**
             * @description Connection last used date, available only for SERVER_SCOPE.
             * @example 2020-06-22T11:15:09Z
             */
            lastUsed?: string;
            /**
             * ConnectionInstitution
             * @description Institution details.
             */
            institution: {
                /**
                 * @description Institution id
                 * @example AU00000
                 */
                id: string;
                /**
                 * ResourceLink
                 * @description Link object containing a link to the resource, self reference.
                 */
                links: {
                    /**
                     * @description URL of the resource.
                     * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                     */
                    self: string;
                };
                /**
                 * @description Always "institution".
                 * @example institution
                 */
                type: string;
            };
            /**
             * GetConnectionsLinks
             * @description Object containing links to resources.
             */
            links: {
                /**
                 * @description Accounts reference url.
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
                 */
                accounts?: string;
                /**
                 * @description Institution details.
                 * @example https://au-api.basiq.io/institutions/AU00000
                 */
                institution: string;
                /**
                 * @description Connection self reference url.
                 * @example https://au-api.basiq.io/users/cd6fbd92/connections/29523951
                 */
                self: string;
                /**
                 * @description Transactions reference url.
                 * @example https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
                 */
                transactions?: string;
            };
        };
        /**
         * AccountResponseResource
         * @description Container object with account details
         */
        AccountResponseResource: {
            /**
             * @description Always "account".
             * @example account
             */
            type: string;
            /**
             * @description Uniquely identifies the account.
             * @example s55bf3
             */
            id: string;
            /** @description current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call. */
            depositRate?: string;
            /** @description The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call. */
            lendingRate?: string;
            /** @description The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
            bsb?: string;
            /** @description The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
            unmaskedAccNum?: string;
            /** @description Date that the account was created (if known). */
            creationDate?: string;
            /**
             * @description The name of the account holder as returned by the institution. No formatting is applied. Returns a string or null when not available.
             * @example GAVIN BELSON
             */
            accountHolder: string | null;
            /** @description A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number. */
            maskedNumber?: string;
            /**
             * @description Value indicating the number of customers that have ownership of the account, according to the data holder's definition of account ownership. Does not indicate that all account owners are eligible consumers.
             * @example ONE_PARTY
             * @enum {string}
             */
            accountOwnership: "UNKNOWN" | "ONE_PARTY" | "TWO_PARTY" | "MANY_PARTY" | "OTHER";
            /**
             * @description Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed.
             * @example true
             */
            isOwned: boolean;
            /** @description Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent. */
            amortisedLimit?: string;
            /** @description Optional field to indicate if this account is part of a bundle that is providing additional benefit to the customer. */
            bundleName?: string;
            /** @description Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards. */
            purses?: {
                /** @description The balance available for this additional currency purse. */
                amount: string;
                /** @description The currency for the purse. */
                currency?: string;
            }[];
            /**
             * @description BSB + account number.
             * @example 600000157441965
             */
            accountNo: string;
            /**
             * @description Funds that are available to an account holder for withdrawal or other use. This may include funds from an overdraft facility or line of credit. As well as funds classified as the available balance, such as from cleared and existing deposits.
             * @example 420.28
             */
            availableFunds: string | null;
            /**
             * @description Amount of funds in the account right now - excluding any pending transactions. For a credit card this would be zero or the minus amount spent.
             * @example 356.50
             */
            balance: string | null;
            /**
             * @description Eligible account types are credit-card, loan and mortgage.
             * @example 400000.00
             */
            creditLimit: string | null;
            /**
             * @description Describes the class(type) of accounts.
             * @enum {unknown}
             */
            class: {
                /**
                 * @description Account type
                 * @example mortgage
                 */
                type: string;
                /**
                 * @description Product name.
                 * @example Hooli Home Loan
                 */
                product: string;
            };
            /**
             * @description The id of the connection resource that was used to retrieve the account.
             * @example 8fce3b
             */
            connection: string;
            /**
             * @description The currency the funds are stored in, using ISO 4217 standard.
             * @example AUD
             */
            currency: string;
            /**
             * @description The id of the institution resource the account originated from.
             * @example AU00000
             */
            institution: string;
            /**
             * @description Timestamp of last update, UTC, RFC 3339 format e.g. "2017-09-28T13:39:33Z"
             * @example 2019-09-28T13:39:33Z
             */
            lastUpdated: string;
            /**
             * @description Account name as defined by institution or user.
             * @example Master Savings
             */
            name: string;
            /**
             * @description Account status
             * @example available
             * @enum {string}
             */
            status: "available" | "unavailable";
            meta?: {
                fees?: {
                    /**
                     * @description (mandatory) - Name of the fee.
                     * @example Dishonour fee
                     */
                    name: string;
                    /**
                     * @description (mandatory) - The type of fee.
                     * @example EVENT
                     * @enum {string}
                     */
                    feeType: "DEPOSIT" | "EVENT" | "EXIT" | "PAYMENT" | "PERIODIC" | "PURCHASE" | "TRANSACTION" | "UPFRONT" | "VARIABLE" | "WITHDRAWAL";
                    /**
                     * @description (conditional) - The amount charged for the fee.
                     * @example 10.00
                     */
                    amount?: string;
                    /** @description A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                    balanceRate?: string;
                    /** @description A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                    transactionRate?: string;
                    /** @description A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                    accruedRate?: string;
                    /**
                     * @description (optional) - The indicative frequency with which the fee is calculated on the account.
                     * @example P1M
                     */
                    accrualFrequency?: string;
                    /** @description The currency the fee will be charged in. Assumes AUD if absent. */
                    currency?: string;
                    /** @description Display text providing more information on the fee. */
                    additionalValue?: string;
                    /** @description Display text providing more information on the fee. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this fee. */
                    additionalInfoUri?: string;
                    discounts?: {
                        /** @description Description of the discount. */
                        description: string;
                        /** @description The type of discount. See the next section for an overview of valid values and their meaning. */
                        discountType: string;
                        /** @description Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                        amount?: string;
                        /** @description A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                        balanceRate?: string;
                        /** @description A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                        transactionRate?: string;
                        /** @description A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                        accruedRate?: string;
                        /** @description A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                        feeRate?: string;
                        /** @description Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType. */
                        additionalValue?: string;
                        /** @description Display text providing more information on the discount. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this discount. */
                        additionalInfoUri?: string;
                        /** @description Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY. */
                        eligibility?: {
                            /**
                             * @description The type of the specific eligibility constraint for a discountType.
                             * @enum {string}
                             */
                            discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
                            /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                            additionalValue?: string;
                            /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                            additionalInfo?: string;
                            /** @description Link to a web page with more information on this eligibility constraint. */
                            additionalInfoUri?: string;
                        };
                    }[] | null;
                }[] | null;
                depositRates?: {
                    /**
                     * @description The type of rate (base, bonus, etc).
                     * @example VARIABLE
                     * @enum {string}
                     */
                    depositRateType: "BONUS" | "BUNDLE_BONUS" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "VARIABLE";
                    /**
                     * @description The rate to be applied.
                     * @example 0.0385
                     */
                    rate: string;
                    /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                    calculationFrequency?: string;
                    /**
                     * @description The period after which the calculated amount(s) are 'applied' (i.e. debited or credited) to the account.
                     * @example P1M
                     */
                    applicationFrequency?: string;
                    tiers?: {
                        /** @description A display name for the tier. */
                        name: string;
                        /**
                         * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                         * @enum {string}
                         */
                        unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                        /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                        minimumValue: number;
                        /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                        maximumValue?: number;
                        /**
                         * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                         * @enum {string}
                         */
                        rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                        applicabilityConditions?: {
                            /** @description Display text providing more information on the condition. */
                            additionalInfo?: string;
                            /** @description Link to a web page with more information on this condition. */
                            additionalInfoUri?: string;
                        };
                        /** @description Display text providing more information on the rate tier. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this rate tier. */
                        additionalInfoUri?: string;
                    }[] | null;
                    /** @description Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType. */
                    additionalValue?: string;
                    /** @description Display text providing more information on the rate. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this rate. */
                    additionalInfoUri?: string;
                }[] | null;
                lendingRates?: {
                    /**
                     * @description The type of rate (fixed, variable, etc).
                     * @example PURCHASE
                     * @enum {string}
                     */
                    lendingRateType: "BUNDLE_DISCOUNT_FIXED" | "BUNDLE_DISCOUNT_VARIABLE" | "CASH_ADVANCE" | "DISCOUNT" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "PENALTY" | "PURCHASE" | "VARIABLE";
                    /**
                     * @description The rate to be applied.
                     * @example 0.2024
                     */
                    rate: string;
                    /** @description A comparison rate equivalent for this rate. */
                    comparisonRate?: string;
                    /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                    calculationFrequency?: string;
                    /** @description The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                    applicationFrequency?: string;
                    /**
                     * @description When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered.
                     * @example IN_ADVANCE
                     * @enum {string}
                     */
                    interestPaymentDue?: "IN_ADVANCE" | "IN_ARREARS";
                    /**
                     * @description Options in place for repayments. If absent, the lending rate is applicable to all repayment types.
                     * @example INTEREST_ONLY
                     * @enum {string}
                     */
                    repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                    /**
                     * @description The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes.
                     * @example INVESTMENT
                     * @enum {string}
                     */
                    loanPurpose?: "INVESTMENT" | "OWNER_OCCUPIED";
                    tiers?: {
                        /** @description A display name for the tier. */
                        name: string;
                        /**
                         * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                         * @enum {string}
                         */
                        unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                        /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                        minimumValue: number;
                        /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                        maximumValue?: number;
                        /**
                         * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                         * @enum {string}
                         */
                        rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                        applicabilityConditions?: {
                            /** @description Display text providing more information on the condition. */
                            additionalInfo?: string;
                            /** @description Link to a web page with more information on this condition. */
                            additionalInfoUri?: string;
                        };
                        /** @description Display text providing more information on the rate tier. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this rate tier. */
                        additionalInfoUri?: string;
                    }[] | null;
                    /** @description Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType. */
                    additionalValue?: string;
                    /** @description Display text providing more information on the rate. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this rate. */
                    additionalInfoUri?: string;
                }[] | null;
                termDeposit?: {
                    /** @description The lodgement date of the original deposit. */
                    lodgementDate: string;
                    /** @description Maturity date for the term deposit. */
                    maturityDate: string;
                    /** @description Amount to be paid upon maturity. If absent, it implies the amount to paid is variable and cannot currently be calculated. */
                    maturityAmount?: string;
                    /** @description If absent assumes AUD. */
                    maturityCurrency?: string;
                    /**
                     * @description Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments.
                     * @example PAID_OUT_AT_MATURITY
                     * @enum {string}
                     */
                    maturityInstructions: "HOLD_ON_MATURITY" | "PAID_OUT_AT_MATURITY" | "ROLLED_OVER";
                }[];
                loan?: {
                    /**
                     * @description Start date for the loan.
                     * @example 2019-10-01
                     */
                    startDate?: string;
                    /**
                     * @description Date that the loan is due to be repaid in full.
                     * @example 2045-10-01
                     */
                    endDate?: string;
                    /**
                     * @description Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST.
                     * @example PRINCIPAL_AND_INTEREST
                     * @enum {string}
                     */
                    repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                    /** @description Optional loan value. */
                    originalLoanAmount?: string;
                    /** @description If absent assumes AUD. */
                    originalLoanCurrency?: string;
                    /** @description Minimum amount of next instalment. */
                    minInstalmentAmount?: string;
                    /** @description Next date that an instalment is required. */
                    nextInstalmentDate?: string;
                    /** @description If absent assumes AUD. */
                    minInstalmentCurrency?: string;
                    /** @description Maximum amount of funds that can be redrawn. If not present, redraw is not available even if the feature exists for the account. */
                    maxRedraw?: string;
                    /** @description If absent assumes AUD. */
                    maxRedrawCurrency?: string;
                    /** @description Minimum redraw amount. */
                    minRedraw?: string;
                    /** @description If absent assumes AUD. */
                    minRedrawCurrency?: string;
                    /** @description The expected or required repayment frequency. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                    repaymentFrequency?: string;
                    /** @description The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation. */
                    offsetAccountIds?: string[];
                    /**
                     * @description Set to true if one or more offset accounts are configured for this loan account.
                     * @example true
                     */
                    offsetAccountEnabled?: boolean;
                } | null;
                creditCard?: {
                    /**
                     * @description The minimum payment amount due for the next card payment.
                     * @example 117.00
                     */
                    minPaymentAmount: string;
                    /**
                     * @description The amount due for the next card payment.
                     * @example 5847.00
                     */
                    paymentDueAmount: string;
                    /**
                     * @description If absent assumes AUD.
                     * @example AUD
                     */
                    paymentCurrency?: string;
                    /**
                     * @description Date that the next payment for the card is due.
                     * @example 2023-12-12
                     */
                    paymentDueDate: string;
                };
                /** @description Array of features available for the product. */
                features?: {
                    /**
                     * @description The type of feature described.
                     * @enum {string}
                     */
                    featureType: "ADDITIONAL_CARDS" | "BALANCE_TRANSFERS" | "BILL_PAYMENT" | "BONUS_REWARDS" | "CARD_ACCESS" | "CASHBACK_OFFER" | "COMPLEMENTARY_PRODUCT_DISCOUNTS" | "DIGITAL_BANKING" | "DIGITAL_WALLET" | "DONATE_INTEREST" | "EXTRA_REPAYMENTS" | "FRAUD_PROTECTION" | "FREE_TXNS" | "FREE_TXNS_ALLOWANCE" | "GUARANTOR" | "INSURANCE" | "INSTALMENT_PLAN" | "INTEREST_FREE" | "INTEREST_FREE_TRANSFERS" | "LOYALTY_PROGRAM" | "NOTIFICATIONS" | "NPP_ENABLED" | "NPP_PAYID" | "OFFSET" | "OTHER" | "OVERDRAFT" | "REDRAW" | "RELATIONSHIP_MANAGEMENT" | "UNLIMITED_TXNS";
                    /** @description Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of the featureType. */
                    additionalValue?: string;
                    /** @description Display text providing more information on the feature. Mandatory if the feature type is set to OTHER. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this feature. */
                    additionalInfoUri?: string;
                    /**
                     * @description true if the feature is already activated and false if the feature is available for activation. Defaults to true if absent.
                     *     > Note: this is an additional field appended to the feature object defined in the Product Reference payload.
                     *
                     * @example true
                     */
                    isActivated?: boolean;
                }[] | null;
                /** @description The addresses for the account to be used for correspondence. */
                addresses?: {
                    /**
                     * @description The type of address object present.
                     * @example paf
                     * @enum {string}
                     */
                    addressType?: "paf" | "simple";
                    simple?: {
                        /** @description Name of the individual or business formatted for inclusion in an address used for physical mail. */
                        mailingName?: string;
                        /** @description First line of the standard address object. */
                        addressLine1: string;
                        /** @description Second line of the standard address object. */
                        addressLine2?: string;
                        /** @description Third line of the standard address object. */
                        addressLine3?: string;
                        /** @description Mandatory for Australian addresses. */
                        postcode?: string;
                        /** @description Name of the city or locality. */
                        city: string;
                        /** @description Free text if the country is not Australia. If country is Australia then must be one of the values defined by the State Type Abbreviation in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT. */
                        state: string;
                        /** @description A valid ISO 3166 Alpha-3 country code. Australia (AUS) is assumed if country is not present. */
                        country?: string;
                        /** @description Australian address formatted according to the file format defined by the PAF file format. */
                        paf?: {
                            /** @description Unique identifier for an address as defined by Australia Post. Also known as Delivery Point Identifier. */
                            dpid?: string;
                            /** @description Thoroughfare number for a property (first number in a property ranged address). */
                            thoroughfareNumber1?: number;
                            /** @description Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated. */
                            thoroughfareNumber1Suffix?: string;
                            /** @description Second thoroughfare number (only used if the property has a ranged address eg 23-25). */
                            thoroughfareNumber2?: number;
                            /** @description Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated. */
                            thoroughfareNumber2Suffix?: string;
                            /** @description Type of flat or unit for the address. */
                            flatUnitType?: string;
                            /** @description Unit number (including suffix, if applicable). */
                            flatUnitNumber?: string;
                            /** @description Type of floor or level for the address. */
                            floorLevelType?: string;
                            /** @description Floor or level number (including alpha characters). */
                            floorLevelNumber?: string;
                            /** @description Allotment number for the address. */
                            lotNumber?: string;
                            /** @description Building/Property name 1. */
                            buildingName1?: string;
                            /** @description Building/Property name 2. */
                            buildingName2?: string;
                            /** @description The name of the street. */
                            streetName?: string;
                            /** @description The street type. Valid enumeration defined by Australia Post PAF code file. */
                            streetType?: string;
                            /** @description The street type suffix. Valid enumeration defined by Australia Post PAF code file. */
                            streetSuffix?: string;
                            /** @description Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file. */
                            postalDeliveryType?: string;
                            /** @description Postal delivery number if the address is a postal delivery type. */
                            postalDeliveryNumber?: number;
                            /** @description Postal delivery number prefix related to the postal delivery number. */
                            postalDeliveryNumberPrefix?: string;
                            /** @description Postal delivery number suffix related to the postal delivery number. */
                            postalDeliveryNumberSuffix?: string;
                            /** @description Full name of locality. */
                            localityName: string;
                            /** @description Postcode for the locality. */
                            postcode: string;
                            /** @description State in which the address belongs. Valid enumeration defined by Australia Post PAF code file State Type Abbreviation. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT. */
                            state: string;
                        };
                    };
                }[] | null;
            };
            /** @description An array of date intervals indicating the coverage of the transaction data relating to the account.
             *     Will return a single element for accounts sourced from a single bank connection.
             *     Will return multiple elements in cases where there have been multiple PDF/CSV uploads for an account. */
            transactionIntervals: {
                /**
                 * @description Date of first transaction on this account
                 * @example 2018-07-01
                 */
                from: string;
                /**
                 * @description Date of last transaction on this account
                 * @example 2018-12-30
                 */
                to: string;
            }[];
        };
        Metadata: {
            fees?: {
                /**
                 * @description (mandatory) - Name of the fee.
                 * @example Dishonour fee
                 */
                name: string;
                /**
                 * @description (mandatory) - The type of fee.
                 * @example EVENT
                 * @enum {string}
                 */
                feeType: "DEPOSIT" | "EVENT" | "EXIT" | "PAYMENT" | "PERIODIC" | "PURCHASE" | "TRANSACTION" | "UPFRONT" | "VARIABLE" | "WITHDRAWAL";
                /**
                 * @description (conditional) - The amount charged for the fee.
                 * @example 10.00
                 */
                amount?: string;
                /** @description A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                balanceRate?: string;
                /** @description A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                transactionRate?: string;
                /** @description A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                accruedRate?: string;
                /**
                 * @description (optional) - The indicative frequency with which the fee is calculated on the account.
                 * @example P1M
                 */
                accrualFrequency?: string;
                /** @description The currency the fee will be charged in. Assumes AUD if absent. */
                currency?: string;
                /** @description Display text providing more information on the fee. */
                additionalValue?: string;
                /** @description Display text providing more information on the fee. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this fee. */
                additionalInfoUri?: string;
                discounts?: {
                    /** @description Description of the discount. */
                    description: string;
                    /** @description The type of discount. See the next section for an overview of valid values and their meaning. */
                    discountType: string;
                    /** @description Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                    amount?: string;
                    /** @description A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                    balanceRate?: string;
                    /** @description A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                    transactionRate?: string;
                    /** @description A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                    accruedRate?: string;
                    /** @description A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                    feeRate?: string;
                    /** @description Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType. */
                    additionalValue?: string;
                    /** @description Display text providing more information on the discount. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this discount. */
                    additionalInfoUri?: string;
                    /** @description Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY. */
                    eligibility?: {
                        /**
                         * @description The type of the specific eligibility constraint for a discountType.
                         * @enum {string}
                         */
                        discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
                        /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                        additionalValue?: string;
                        /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this eligibility constraint. */
                        additionalInfoUri?: string;
                    };
                }[] | null;
            }[] | null;
            depositRates?: {
                /**
                 * @description The type of rate (base, bonus, etc).
                 * @example VARIABLE
                 * @enum {string}
                 */
                depositRateType: "BONUS" | "BUNDLE_BONUS" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "VARIABLE";
                /**
                 * @description The rate to be applied.
                 * @example 0.0385
                 */
                rate: string;
                /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                calculationFrequency?: string;
                /**
                 * @description The period after which the calculated amount(s) are 'applied' (i.e. debited or credited) to the account.
                 * @example P1M
                 */
                applicationFrequency?: string;
                tiers?: {
                    /** @description A display name for the tier. */
                    name: string;
                    /**
                     * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                     * @enum {string}
                     */
                    unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                    /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                    minimumValue: number;
                    /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                    maximumValue?: number;
                    /**
                     * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                     * @enum {string}
                     */
                    rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                    applicabilityConditions?: {
                        /** @description Display text providing more information on the condition. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this condition. */
                        additionalInfoUri?: string;
                    };
                    /** @description Display text providing more information on the rate tier. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this rate tier. */
                    additionalInfoUri?: string;
                }[] | null;
                /** @description Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType. */
                additionalValue?: string;
                /** @description Display text providing more information on the rate. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this rate. */
                additionalInfoUri?: string;
            }[] | null;
            lendingRates?: {
                /**
                 * @description The type of rate (fixed, variable, etc).
                 * @example PURCHASE
                 * @enum {string}
                 */
                lendingRateType: "BUNDLE_DISCOUNT_FIXED" | "BUNDLE_DISCOUNT_VARIABLE" | "CASH_ADVANCE" | "DISCOUNT" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "PENALTY" | "PURCHASE" | "VARIABLE";
                /**
                 * @description The rate to be applied.
                 * @example 0.2024
                 */
                rate: string;
                /** @description A comparison rate equivalent for this rate. */
                comparisonRate?: string;
                /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                calculationFrequency?: string;
                /** @description The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                applicationFrequency?: string;
                /**
                 * @description When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered.
                 * @example IN_ADVANCE
                 * @enum {string}
                 */
                interestPaymentDue?: "IN_ADVANCE" | "IN_ARREARS";
                /**
                 * @description Options in place for repayments. If absent, the lending rate is applicable to all repayment types.
                 * @example INTEREST_ONLY
                 * @enum {string}
                 */
                repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                /**
                 * @description The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes.
                 * @example INVESTMENT
                 * @enum {string}
                 */
                loanPurpose?: "INVESTMENT" | "OWNER_OCCUPIED";
                tiers?: {
                    /** @description A display name for the tier. */
                    name: string;
                    /**
                     * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                     * @enum {string}
                     */
                    unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                    /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                    minimumValue: number;
                    /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                    maximumValue?: number;
                    /**
                     * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                     * @enum {string}
                     */
                    rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                    applicabilityConditions?: {
                        /** @description Display text providing more information on the condition. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this condition. */
                        additionalInfoUri?: string;
                    };
                    /** @description Display text providing more information on the rate tier. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this rate tier. */
                    additionalInfoUri?: string;
                }[] | null;
                /** @description Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType. */
                additionalValue?: string;
                /** @description Display text providing more information on the rate. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this rate. */
                additionalInfoUri?: string;
            }[] | null;
            termDeposit?: {
                /** @description The lodgement date of the original deposit. */
                lodgementDate: string;
                /** @description Maturity date for the term deposit. */
                maturityDate: string;
                /** @description Amount to be paid upon maturity. If absent, it implies the amount to paid is variable and cannot currently be calculated. */
                maturityAmount?: string;
                /** @description If absent assumes AUD. */
                maturityCurrency?: string;
                /**
                 * @description Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments.
                 * @example PAID_OUT_AT_MATURITY
                 * @enum {string}
                 */
                maturityInstructions: "HOLD_ON_MATURITY" | "PAID_OUT_AT_MATURITY" | "ROLLED_OVER";
            }[];
            loan?: {
                /**
                 * @description Start date for the loan.
                 * @example 2019-10-01
                 */
                startDate?: string;
                /**
                 * @description Date that the loan is due to be repaid in full.
                 * @example 2045-10-01
                 */
                endDate?: string;
                /**
                 * @description Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST.
                 * @example PRINCIPAL_AND_INTEREST
                 * @enum {string}
                 */
                repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                /** @description Optional loan value. */
                originalLoanAmount?: string;
                /** @description If absent assumes AUD. */
                originalLoanCurrency?: string;
                /** @description Minimum amount of next instalment. */
                minInstalmentAmount?: string;
                /** @description Next date that an instalment is required. */
                nextInstalmentDate?: string;
                /** @description If absent assumes AUD. */
                minInstalmentCurrency?: string;
                /** @description Maximum amount of funds that can be redrawn. If not present, redraw is not available even if the feature exists for the account. */
                maxRedraw?: string;
                /** @description If absent assumes AUD. */
                maxRedrawCurrency?: string;
                /** @description Minimum redraw amount. */
                minRedraw?: string;
                /** @description If absent assumes AUD. */
                minRedrawCurrency?: string;
                /** @description The expected or required repayment frequency. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                repaymentFrequency?: string;
                /** @description The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation. */
                offsetAccountIds?: string[];
                /**
                 * @description Set to true if one or more offset accounts are configured for this loan account.
                 * @example true
                 */
                offsetAccountEnabled?: boolean;
            } | null;
            creditCard?: {
                /**
                 * @description The minimum payment amount due for the next card payment.
                 * @example 117.00
                 */
                minPaymentAmount: string;
                /**
                 * @description The amount due for the next card payment.
                 * @example 5847.00
                 */
                paymentDueAmount: string;
                /**
                 * @description If absent assumes AUD.
                 * @example AUD
                 */
                paymentCurrency?: string;
                /**
                 * @description Date that the next payment for the card is due.
                 * @example 2023-12-12
                 */
                paymentDueDate: string;
            };
            /** @description Array of features available for the product. */
            features?: {
                /**
                 * @description The type of feature described.
                 * @enum {string}
                 */
                featureType: "ADDITIONAL_CARDS" | "BALANCE_TRANSFERS" | "BILL_PAYMENT" | "BONUS_REWARDS" | "CARD_ACCESS" | "CASHBACK_OFFER" | "COMPLEMENTARY_PRODUCT_DISCOUNTS" | "DIGITAL_BANKING" | "DIGITAL_WALLET" | "DONATE_INTEREST" | "EXTRA_REPAYMENTS" | "FRAUD_PROTECTION" | "FREE_TXNS" | "FREE_TXNS_ALLOWANCE" | "GUARANTOR" | "INSURANCE" | "INSTALMENT_PLAN" | "INTEREST_FREE" | "INTEREST_FREE_TRANSFERS" | "LOYALTY_PROGRAM" | "NOTIFICATIONS" | "NPP_ENABLED" | "NPP_PAYID" | "OFFSET" | "OTHER" | "OVERDRAFT" | "REDRAW" | "RELATIONSHIP_MANAGEMENT" | "UNLIMITED_TXNS";
                /** @description Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of the featureType. */
                additionalValue?: string;
                /** @description Display text providing more information on the feature. Mandatory if the feature type is set to OTHER. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this feature. */
                additionalInfoUri?: string;
                /**
                 * @description true if the feature is already activated and false if the feature is available for activation. Defaults to true if absent.
                 *     > Note: this is an additional field appended to the feature object defined in the Product Reference payload.
                 *
                 * @example true
                 */
                isActivated?: boolean;
            }[] | null;
            /** @description The addresses for the account to be used for correspondence. */
            addresses?: {
                /**
                 * @description The type of address object present.
                 * @example paf
                 * @enum {string}
                 */
                addressType?: "paf" | "simple";
                simple?: {
                    /** @description Name of the individual or business formatted for inclusion in an address used for physical mail. */
                    mailingName?: string;
                    /** @description First line of the standard address object. */
                    addressLine1: string;
                    /** @description Second line of the standard address object. */
                    addressLine2?: string;
                    /** @description Third line of the standard address object. */
                    addressLine3?: string;
                    /** @description Mandatory for Australian addresses. */
                    postcode?: string;
                    /** @description Name of the city or locality. */
                    city: string;
                    /** @description Free text if the country is not Australia. If country is Australia then must be one of the values defined by the State Type Abbreviation in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT. */
                    state: string;
                    /** @description A valid ISO 3166 Alpha-3 country code. Australia (AUS) is assumed if country is not present. */
                    country?: string;
                    /** @description Australian address formatted according to the file format defined by the PAF file format. */
                    paf?: {
                        /** @description Unique identifier for an address as defined by Australia Post. Also known as Delivery Point Identifier. */
                        dpid?: string;
                        /** @description Thoroughfare number for a property (first number in a property ranged address). */
                        thoroughfareNumber1?: number;
                        /** @description Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated. */
                        thoroughfareNumber1Suffix?: string;
                        /** @description Second thoroughfare number (only used if the property has a ranged address eg 23-25). */
                        thoroughfareNumber2?: number;
                        /** @description Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated. */
                        thoroughfareNumber2Suffix?: string;
                        /** @description Type of flat or unit for the address. */
                        flatUnitType?: string;
                        /** @description Unit number (including suffix, if applicable). */
                        flatUnitNumber?: string;
                        /** @description Type of floor or level for the address. */
                        floorLevelType?: string;
                        /** @description Floor or level number (including alpha characters). */
                        floorLevelNumber?: string;
                        /** @description Allotment number for the address. */
                        lotNumber?: string;
                        /** @description Building/Property name 1. */
                        buildingName1?: string;
                        /** @description Building/Property name 2. */
                        buildingName2?: string;
                        /** @description The name of the street. */
                        streetName?: string;
                        /** @description The street type. Valid enumeration defined by Australia Post PAF code file. */
                        streetType?: string;
                        /** @description The street type suffix. Valid enumeration defined by Australia Post PAF code file. */
                        streetSuffix?: string;
                        /** @description Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file. */
                        postalDeliveryType?: string;
                        /** @description Postal delivery number if the address is a postal delivery type. */
                        postalDeliveryNumber?: number;
                        /** @description Postal delivery number prefix related to the postal delivery number. */
                        postalDeliveryNumberPrefix?: string;
                        /** @description Postal delivery number suffix related to the postal delivery number. */
                        postalDeliveryNumberSuffix?: string;
                        /** @description Full name of locality. */
                        localityName: string;
                        /** @description Postcode for the locality. */
                        postcode: string;
                        /** @description State in which the address belongs. Valid enumeration defined by Australia Post PAF code file State Type Abbreviation. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT. */
                        state: string;
                    };
                };
            }[] | null;
        };
        lendingRateAccountMetadata: {
            /**
             * @description The type of rate (fixed, variable, etc).
             * @example PURCHASE
             * @enum {string}
             */
            lendingRateType: "BUNDLE_DISCOUNT_FIXED" | "BUNDLE_DISCOUNT_VARIABLE" | "CASH_ADVANCE" | "DISCOUNT" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "PENALTY" | "PURCHASE" | "VARIABLE";
            /**
             * @description The rate to be applied.
             * @example 0.2024
             */
            rate: string;
            /** @description A comparison rate equivalent for this rate. */
            comparisonRate?: string;
            /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
            calculationFrequency?: string;
            /** @description The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
            applicationFrequency?: string;
            /**
             * @description When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered.
             * @example IN_ADVANCE
             * @enum {string}
             */
            interestPaymentDue?: "IN_ADVANCE" | "IN_ARREARS";
            /**
             * @description Options in place for repayments. If absent, the lending rate is applicable to all repayment types.
             * @example INTEREST_ONLY
             * @enum {string}
             */
            repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
            /**
             * @description The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes.
             * @example INVESTMENT
             * @enum {string}
             */
            loanPurpose?: "INVESTMENT" | "OWNER_OCCUPIED";
            tiers?: {
                /** @description A display name for the tier. */
                name: string;
                /**
                 * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                 * @enum {string}
                 */
                unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                minimumValue: number;
                /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                maximumValue?: number;
                /**
                 * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                 * @enum {string}
                 */
                rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                applicabilityConditions?: {
                    /** @description Display text providing more information on the condition. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this condition. */
                    additionalInfoUri?: string;
                };
                /** @description Display text providing more information on the rate tier. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this rate tier. */
                additionalInfoUri?: string;
            }[] | null;
            /** @description Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType. */
            additionalValue?: string;
            /** @description Display text providing more information on the rate. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this rate. */
            additionalInfoUri?: string;
        };
        depositRateAccountMetadata: {
            /**
             * @description The type of rate (base, bonus, etc).
             * @example VARIABLE
             * @enum {string}
             */
            depositRateType: "BONUS" | "BUNDLE_BONUS" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "VARIABLE";
            /**
             * @description The rate to be applied.
             * @example 0.0385
             */
            rate: string;
            /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
            calculationFrequency?: string;
            /**
             * @description The period after which the calculated amount(s) are 'applied' (i.e. debited or credited) to the account.
             * @example P1M
             */
            applicationFrequency?: string;
            tiers?: {
                /** @description A display name for the tier. */
                name: string;
                /**
                 * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                 * @enum {string}
                 */
                unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                minimumValue: number;
                /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                maximumValue?: number;
                /**
                 * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                 * @enum {string}
                 */
                rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                applicabilityConditions?: {
                    /** @description Display text providing more information on the condition. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this condition. */
                    additionalInfoUri?: string;
                };
                /** @description Display text providing more information on the rate tier. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this rate tier. */
                additionalInfoUri?: string;
            }[] | null;
            /** @description Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType. */
            additionalValue?: string;
            /** @description Display text providing more information on the rate. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this rate. */
            additionalInfoUri?: string;
        };
        feesAccountMetadepositratestiers: {
            /** @description A display name for the tier. */
            name: string;
            /**
             * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
             * @enum {string}
             */
            unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
            /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
            minimumValue: number;
            /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
            maximumValue?: number;
            /**
             * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
             * @enum {string}
             */
            rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
            applicabilityConditions?: {
                /** @description Display text providing more information on the condition. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this condition. */
                additionalInfoUri?: string;
            };
            /** @description Display text providing more information on the rate tier. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this rate tier. */
            additionalInfoUri?: string;
        };
        feesAccountMetadepositratestiersRateCondition: {
            /** @description Display text providing more information on the condition. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this condition. */
            additionalInfoUri?: string;
        };
        feesAccountMetadata: {
            /**
             * @description (mandatory) - Name of the fee.
             * @example Dishonour fee
             */
            name: string;
            /**
             * @description (mandatory) - The type of fee.
             * @example EVENT
             * @enum {string}
             */
            feeType: "DEPOSIT" | "EVENT" | "EXIT" | "PAYMENT" | "PERIODIC" | "PURCHASE" | "TRANSACTION" | "UPFRONT" | "VARIABLE" | "WITHDRAWAL";
            /**
             * @description (conditional) - The amount charged for the fee.
             * @example 10.00
             */
            amount?: string;
            /** @description A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
            balanceRate?: string;
            /** @description A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
            transactionRate?: string;
            /** @description A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
            accruedRate?: string;
            /**
             * @description (optional) - The indicative frequency with which the fee is calculated on the account.
             * @example P1M
             */
            accrualFrequency?: string;
            /** @description The currency the fee will be charged in. Assumes AUD if absent. */
            currency?: string;
            /** @description Display text providing more information on the fee. */
            additionalValue?: string;
            /** @description Display text providing more information on the fee. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this fee. */
            additionalInfoUri?: string;
            discounts?: {
                /** @description Description of the discount. */
                description: string;
                /** @description The type of discount. See the next section for an overview of valid values and their meaning. */
                discountType: string;
                /** @description Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                amount?: string;
                /** @description A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                balanceRate?: string;
                /** @description A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                transactionRate?: string;
                /** @description A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                accruedRate?: string;
                /** @description A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                feeRate?: string;
                /** @description Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType. */
                additionalValue?: string;
                /** @description Display text providing more information on the discount. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this discount. */
                additionalInfoUri?: string;
                /** @description Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY. */
                eligibility?: {
                    /**
                     * @description The type of the specific eligibility constraint for a discountType.
                     * @enum {string}
                     */
                    discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
                    /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                    additionalValue?: string;
                    /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                    additionalInfo?: string;
                    /** @description Link to a web page with more information on this eligibility constraint. */
                    additionalInfoUri?: string;
                };
            }[] | null;
        };
        feesdiscountMetadata: {
            /** @description Description of the discount. */
            description: string;
            /** @description The type of discount. See the next section for an overview of valid values and their meaning. */
            discountType: string;
            /** @description Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
            amount?: string;
            /** @description A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
            balanceRate?: string;
            /** @description A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
            transactionRate?: string;
            /** @description A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
            accruedRate?: string;
            /** @description A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
            feeRate?: string;
            /** @description Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType. */
            additionalValue?: string;
            /** @description Display text providing more information on the discount. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this discount. */
            additionalInfoUri?: string;
            /** @description Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY. */
            eligibility?: {
                /**
                 * @description The type of the specific eligibility constraint for a discountType.
                 * @enum {string}
                 */
                discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
                /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                additionalValue?: string;
                /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                additionalInfo?: string;
                /** @description Link to a web page with more information on this eligibility constraint. */
                additionalInfoUri?: string;
            };
        };
        feesdiscounteligibilityMetadata: {
            /**
             * @description The type of the specific eligibility constraint for a discountType.
             * @enum {string}
             */
            discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
            /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
            additionalValue?: string;
            /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
            additionalInfo?: string;
            /** @description Link to a web page with more information on this eligibility constraint. */
            additionalInfoUri?: string;
        };
        AccountTransactionInterval: {
            /**
             * @description Date of first transaction on this account
             * @example 2018-07-01
             */
            from: string;
            /**
             * @description Date of last transaction on this account
             * @example 2018-12-30
             */
            to: string;
        };
        AccountsResponseResource: {
            /**
             * @description Type of the response, always "list".
             * @example list
             */
            type: string;
            /** @description Container object, containing account details. */
            data: {
                /**
                 * @description Always "account".
                 * @example account
                 */
                type: string;
                /**
                 * @description Uniquely identifies the account.
                 * @example s55bf3
                 */
                id: string;
                /** @description current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call. */
                depositRate?: string;
                /** @description The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call. */
                lendingRate?: string;
                /** @description The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
                bsb?: string;
                /** @description The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
                unmaskedAccNum?: string;
                /** @description Date that the account was created (if known). */
                creationDate?: string;
                /**
                 * @description The name of the account holder as returned by the institution. No formatting is applied. Returns a string or null when not available.
                 * @example GAVIN BELSON
                 */
                accountHolder: string | null;
                /** @description A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number. */
                maskedNumber?: string;
                /**
                 * @description Value indicating the number of customers that have ownership of the account, according to the data holder's definition of account ownership. Does not indicate that all account owners are eligible consumers.
                 * @example ONE_PARTY
                 * @enum {string}
                 */
                accountOwnership: "UNKNOWN" | "ONE_PARTY" | "TWO_PARTY" | "MANY_PARTY" | "OTHER";
                /**
                 * @description Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed.
                 * @example true
                 */
                isOwned: boolean;
                /** @description Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent. */
                amortisedLimit?: string;
                /** @description Optional field to indicate if this account is part of a bundle that is providing additional benefit to the customer. */
                bundleName?: string;
                /** @description Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards. */
                purses?: {
                    /** @description The balance available for this additional currency purse. */
                    amount: string;
                    /** @description The currency for the purse. */
                    currency?: string;
                }[];
                /**
                 * @description BSB + account number.
                 * @example 600000157441965
                 */
                accountNo: string;
                /**
                 * @description Funds that are available to an account holder for withdrawal or other use. This may include funds from an overdraft facility or line of credit. As well as funds classified as the available balance, such as from cleared and existing deposits.
                 * @example 420.28
                 */
                availableFunds: string | null;
                /**
                 * @description Amount of funds in the account right now - excluding any pending transactions. For a credit card this would be zero or the minus amount spent.
                 * @example 356.50
                 */
                balance: string | null;
                /**
                 * @description Eligible account types are credit-card, loan and mortgage.
                 * @example 400000.00
                 */
                creditLimit: string | null;
                /**
                 * @description Describes the class(type) of accounts.
                 * @enum {unknown}
                 */
                class: {
                    /**
                     * @description Account type
                     * @example mortgage
                     */
                    type: string;
                    /**
                     * @description Product name.
                     * @example Hooli Home Loan
                     */
                    product: string;
                };
                /**
                 * @description The id of the connection resource that was used to retrieve the account.
                 * @example 8fce3b
                 */
                connection: string;
                /**
                 * @description The currency the funds are stored in, using ISO 4217 standard.
                 * @example AUD
                 */
                currency: string;
                /**
                 * @description The id of the institution resource the account originated from.
                 * @example AU00000
                 */
                institution: string;
                /**
                 * @description Timestamp of last update, UTC, RFC 3339 format e.g. "2017-09-28T13:39:33Z"
                 * @example 2019-09-28T13:39:33Z
                 */
                lastUpdated: string;
                /**
                 * @description Account name as defined by institution or user.
                 * @example Master Savings
                 */
                name: string;
                /**
                 * @description Account status
                 * @example available
                 * @enum {string}
                 */
                status: "available" | "unavailable";
                meta?: {
                    fees?: {
                        /**
                         * @description (mandatory) - Name of the fee.
                         * @example Dishonour fee
                         */
                        name: string;
                        /**
                         * @description (mandatory) - The type of fee.
                         * @example EVENT
                         * @enum {string}
                         */
                        feeType: "DEPOSIT" | "EVENT" | "EXIT" | "PAYMENT" | "PERIODIC" | "PURCHASE" | "TRANSACTION" | "UPFRONT" | "VARIABLE" | "WITHDRAWAL";
                        /**
                         * @description (conditional) - The amount charged for the fee.
                         * @example 10.00
                         */
                        amount?: string;
                        /** @description A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                        balanceRate?: string;
                        /** @description A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                        transactionRate?: string;
                        /** @description A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                        accruedRate?: string;
                        /**
                         * @description (optional) - The indicative frequency with which the fee is calculated on the account.
                         * @example P1M
                         */
                        accrualFrequency?: string;
                        /** @description The currency the fee will be charged in. Assumes AUD if absent. */
                        currency?: string;
                        /** @description Display text providing more information on the fee. */
                        additionalValue?: string;
                        /** @description Display text providing more information on the fee. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this fee. */
                        additionalInfoUri?: string;
                        discounts?: {
                            /** @description Description of the discount. */
                            description: string;
                            /** @description The type of discount. See the next section for an overview of valid values and their meaning. */
                            discountType: string;
                            /** @description Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                            amount?: string;
                            /** @description A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                            balanceRate?: string;
                            /** @description A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                            transactionRate?: string;
                            /** @description A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                            accruedRate?: string;
                            /** @description A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                            feeRate?: string;
                            /** @description Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType. */
                            additionalValue?: string;
                            /** @description Display text providing more information on the discount. */
                            additionalInfo?: string;
                            /** @description Link to a web page with more information on this discount. */
                            additionalInfoUri?: string;
                            /** @description Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY. */
                            eligibility?: {
                                /**
                                 * @description The type of the specific eligibility constraint for a discountType.
                                 * @enum {string}
                                 */
                                discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
                                /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                                additionalValue?: string;
                                /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                                additionalInfo?: string;
                                /** @description Link to a web page with more information on this eligibility constraint. */
                                additionalInfoUri?: string;
                            };
                        }[] | null;
                    }[] | null;
                    depositRates?: {
                        /**
                         * @description The type of rate (base, bonus, etc).
                         * @example VARIABLE
                         * @enum {string}
                         */
                        depositRateType: "BONUS" | "BUNDLE_BONUS" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "VARIABLE";
                        /**
                         * @description The rate to be applied.
                         * @example 0.0385
                         */
                        rate: string;
                        /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                        calculationFrequency?: string;
                        /**
                         * @description The period after which the calculated amount(s) are 'applied' (i.e. debited or credited) to the account.
                         * @example P1M
                         */
                        applicationFrequency?: string;
                        tiers?: {
                            /** @description A display name for the tier. */
                            name: string;
                            /**
                             * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                             * @enum {string}
                             */
                            unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                            /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                            minimumValue: number;
                            /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                            maximumValue?: number;
                            /**
                             * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                             * @enum {string}
                             */
                            rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                            applicabilityConditions?: {
                                /** @description Display text providing more information on the condition. */
                                additionalInfo?: string;
                                /** @description Link to a web page with more information on this condition. */
                                additionalInfoUri?: string;
                            };
                            /** @description Display text providing more information on the rate tier. */
                            additionalInfo?: string;
                            /** @description Link to a web page with more information on this rate tier. */
                            additionalInfoUri?: string;
                        }[] | null;
                        /** @description Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType. */
                        additionalValue?: string;
                        /** @description Display text providing more information on the rate. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this rate. */
                        additionalInfoUri?: string;
                    }[] | null;
                    lendingRates?: {
                        /**
                         * @description The type of rate (fixed, variable, etc).
                         * @example PURCHASE
                         * @enum {string}
                         */
                        lendingRateType: "BUNDLE_DISCOUNT_FIXED" | "BUNDLE_DISCOUNT_VARIABLE" | "CASH_ADVANCE" | "DISCOUNT" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "PENALTY" | "PURCHASE" | "VARIABLE";
                        /**
                         * @description The rate to be applied.
                         * @example 0.2024
                         */
                        rate: string;
                        /** @description A comparison rate equivalent for this rate. */
                        comparisonRate?: string;
                        /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                        calculationFrequency?: string;
                        /** @description The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                        applicationFrequency?: string;
                        /**
                         * @description When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered.
                         * @example IN_ADVANCE
                         * @enum {string}
                         */
                        interestPaymentDue?: "IN_ADVANCE" | "IN_ARREARS";
                        /**
                         * @description Options in place for repayments. If absent, the lending rate is applicable to all repayment types.
                         * @example INTEREST_ONLY
                         * @enum {string}
                         */
                        repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                        /**
                         * @description The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes.
                         * @example INVESTMENT
                         * @enum {string}
                         */
                        loanPurpose?: "INVESTMENT" | "OWNER_OCCUPIED";
                        tiers?: {
                            /** @description A display name for the tier. */
                            name: string;
                            /**
                             * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                             * @enum {string}
                             */
                            unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                            /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                            minimumValue: number;
                            /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                            maximumValue?: number;
                            /**
                             * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                             * @enum {string}
                             */
                            rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                            applicabilityConditions?: {
                                /** @description Display text providing more information on the condition. */
                                additionalInfo?: string;
                                /** @description Link to a web page with more information on this condition. */
                                additionalInfoUri?: string;
                            };
                            /** @description Display text providing more information on the rate tier. */
                            additionalInfo?: string;
                            /** @description Link to a web page with more information on this rate tier. */
                            additionalInfoUri?: string;
                        }[] | null;
                        /** @description Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType. */
                        additionalValue?: string;
                        /** @description Display text providing more information on the rate. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this rate. */
                        additionalInfoUri?: string;
                    }[] | null;
                    termDeposit?: {
                        /** @description The lodgement date of the original deposit. */
                        lodgementDate: string;
                        /** @description Maturity date for the term deposit. */
                        maturityDate: string;
                        /** @description Amount to be paid upon maturity. If absent, it implies the amount to paid is variable and cannot currently be calculated. */
                        maturityAmount?: string;
                        /** @description If absent assumes AUD. */
                        maturityCurrency?: string;
                        /**
                         * @description Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments.
                         * @example PAID_OUT_AT_MATURITY
                         * @enum {string}
                         */
                        maturityInstructions: "HOLD_ON_MATURITY" | "PAID_OUT_AT_MATURITY" | "ROLLED_OVER";
                    }[];
                    loan?: {
                        /**
                         * @description Start date for the loan.
                         * @example 2019-10-01
                         */
                        startDate?: string;
                        /**
                         * @description Date that the loan is due to be repaid in full.
                         * @example 2045-10-01
                         */
                        endDate?: string;
                        /**
                         * @description Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST.
                         * @example PRINCIPAL_AND_INTEREST
                         * @enum {string}
                         */
                        repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                        /** @description Optional loan value. */
                        originalLoanAmount?: string;
                        /** @description If absent assumes AUD. */
                        originalLoanCurrency?: string;
                        /** @description Minimum amount of next instalment. */
                        minInstalmentAmount?: string;
                        /** @description Next date that an instalment is required. */
                        nextInstalmentDate?: string;
                        /** @description If absent assumes AUD. */
                        minInstalmentCurrency?: string;
                        /** @description Maximum amount of funds that can be redrawn. If not present, redraw is not available even if the feature exists for the account. */
                        maxRedraw?: string;
                        /** @description If absent assumes AUD. */
                        maxRedrawCurrency?: string;
                        /** @description Minimum redraw amount. */
                        minRedraw?: string;
                        /** @description If absent assumes AUD. */
                        minRedrawCurrency?: string;
                        /** @description The expected or required repayment frequency. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                        repaymentFrequency?: string;
                        /** @description The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation. */
                        offsetAccountIds?: string[];
                        /**
                         * @description Set to true if one or more offset accounts are configured for this loan account.
                         * @example true
                         */
                        offsetAccountEnabled?: boolean;
                    } | null;
                    creditCard?: {
                        /**
                         * @description The minimum payment amount due for the next card payment.
                         * @example 117.00
                         */
                        minPaymentAmount: string;
                        /**
                         * @description The amount due for the next card payment.
                         * @example 5847.00
                         */
                        paymentDueAmount: string;
                        /**
                         * @description If absent assumes AUD.
                         * @example AUD
                         */
                        paymentCurrency?: string;
                        /**
                         * @description Date that the next payment for the card is due.
                         * @example 2023-12-12
                         */
                        paymentDueDate: string;
                    };
                    /** @description Array of features available for the product. */
                    features?: {
                        /**
                         * @description The type of feature described.
                         * @enum {string}
                         */
                        featureType: "ADDITIONAL_CARDS" | "BALANCE_TRANSFERS" | "BILL_PAYMENT" | "BONUS_REWARDS" | "CARD_ACCESS" | "CASHBACK_OFFER" | "COMPLEMENTARY_PRODUCT_DISCOUNTS" | "DIGITAL_BANKING" | "DIGITAL_WALLET" | "DONATE_INTEREST" | "EXTRA_REPAYMENTS" | "FRAUD_PROTECTION" | "FREE_TXNS" | "FREE_TXNS_ALLOWANCE" | "GUARANTOR" | "INSURANCE" | "INSTALMENT_PLAN" | "INTEREST_FREE" | "INTEREST_FREE_TRANSFERS" | "LOYALTY_PROGRAM" | "NOTIFICATIONS" | "NPP_ENABLED" | "NPP_PAYID" | "OFFSET" | "OTHER" | "OVERDRAFT" | "REDRAW" | "RELATIONSHIP_MANAGEMENT" | "UNLIMITED_TXNS";
                        /** @description Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of the featureType. */
                        additionalValue?: string;
                        /** @description Display text providing more information on the feature. Mandatory if the feature type is set to OTHER. */
                        additionalInfo?: string;
                        /** @description Link to a web page with more information on this feature. */
                        additionalInfoUri?: string;
                        /**
                         * @description true if the feature is already activated and false if the feature is available for activation. Defaults to true if absent.
                         *     > Note: this is an additional field appended to the feature object defined in the Product Reference payload.
                         *
                         * @example true
                         */
                        isActivated?: boolean;
                    }[] | null;
                    /** @description The addresses for the account to be used for correspondence. */
                    addresses?: {
                        /**
                         * @description The type of address object present.
                         * @example paf
                         * @enum {string}
                         */
                        addressType?: "paf" | "simple";
                        simple?: {
                            /** @description Name of the individual or business formatted for inclusion in an address used for physical mail. */
                            mailingName?: string;
                            /** @description First line of the standard address object. */
                            addressLine1: string;
                            /** @description Second line of the standard address object. */
                            addressLine2?: string;
                            /** @description Third line of the standard address object. */
                            addressLine3?: string;
                            /** @description Mandatory for Australian addresses. */
                            postcode?: string;
                            /** @description Name of the city or locality. */
                            city: string;
                            /** @description Free text if the country is not Australia. If country is Australia then must be one of the values defined by the State Type Abbreviation in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT. */
                            state: string;
                            /** @description A valid ISO 3166 Alpha-3 country code. Australia (AUS) is assumed if country is not present. */
                            country?: string;
                            /** @description Australian address formatted according to the file format defined by the PAF file format. */
                            paf?: {
                                /** @description Unique identifier for an address as defined by Australia Post. Also known as Delivery Point Identifier. */
                                dpid?: string;
                                /** @description Thoroughfare number for a property (first number in a property ranged address). */
                                thoroughfareNumber1?: number;
                                /** @description Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated. */
                                thoroughfareNumber1Suffix?: string;
                                /** @description Second thoroughfare number (only used if the property has a ranged address eg 23-25). */
                                thoroughfareNumber2?: number;
                                /** @description Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated. */
                                thoroughfareNumber2Suffix?: string;
                                /** @description Type of flat or unit for the address. */
                                flatUnitType?: string;
                                /** @description Unit number (including suffix, if applicable). */
                                flatUnitNumber?: string;
                                /** @description Type of floor or level for the address. */
                                floorLevelType?: string;
                                /** @description Floor or level number (including alpha characters). */
                                floorLevelNumber?: string;
                                /** @description Allotment number for the address. */
                                lotNumber?: string;
                                /** @description Building/Property name 1. */
                                buildingName1?: string;
                                /** @description Building/Property name 2. */
                                buildingName2?: string;
                                /** @description The name of the street. */
                                streetName?: string;
                                /** @description The street type. Valid enumeration defined by Australia Post PAF code file. */
                                streetType?: string;
                                /** @description The street type suffix. Valid enumeration defined by Australia Post PAF code file. */
                                streetSuffix?: string;
                                /** @description Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file. */
                                postalDeliveryType?: string;
                                /** @description Postal delivery number if the address is a postal delivery type. */
                                postalDeliveryNumber?: number;
                                /** @description Postal delivery number prefix related to the postal delivery number. */
                                postalDeliveryNumberPrefix?: string;
                                /** @description Postal delivery number suffix related to the postal delivery number. */
                                postalDeliveryNumberSuffix?: string;
                                /** @description Full name of locality. */
                                localityName: string;
                                /** @description Postcode for the locality. */
                                postcode: string;
                                /** @description State in which the address belongs. Valid enumeration defined by Australia Post PAF code file State Type Abbreviation. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT. */
                                state: string;
                            };
                        };
                    }[] | null;
                };
                /** @description An array of date intervals indicating the coverage of the transaction data relating to the account.
                 *     Will return a single element for accounts sourced from a single bank connection.
                 *     Will return multiple elements in cases where there have been multiple PDF/CSV uploads for an account. */
                transactionIntervals: {
                    /**
                     * @description Date of first transaction on this account
                     * @example 2018-07-01
                     */
                    from: string;
                    /**
                     * @description Date of last transaction on this account
                     * @example 2018-12-30
                     */
                    to: string;
                }[];
            }[];
            /**
             * ResourceAccountLink
             * @description Link object containing a link to the resource, self reference.
             */
            links: {
                /**
                 * @description URL of the resource.
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                 */
                self: string;
                /**
                 * @description transactions link to the transactions associated with this account.
                 * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
                 */
                transactions?: string;
                /**
                 * @description connection associated to User.
                 * @example https://au-api.basiq.io/users/cd6fbd92/connections/321312asa
                 */
                connection?: string;
                /**
                 * @description institution link to the institution associated with this account.
                 * @example https://au-api.basiq.io/institutions/AU00000
                 */
                institution?: string;
                /** @example [] */
                statements?: string;
            };
        };
        /** @description Object containing details for the statement upload process */
        StatementUploadResource: {
            /**
             * @description The type of resource, always "job".
             * @example job
             */
            type: string;
            /**
             * @description The unique identifier of the job.
             * @example 61723
             */
            id: string;
            /**
             * ResourceLink
             * @description Link object containing a link to the resource, self reference.
             */
            links: {
                /**
                 * @description URL of the resource.
                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                 */
                self: string;
            };
        };
        BadRequestError: {
            /**
             * @description Always "list".
             * @example list
             */
            type: string;
            /**
             * @description Unique identifier for this particular occurrence of the problem.
             * @example ac5ah5i
             */
            correlationId: string;
            /** @description Error data. */
            data: {
                /**
                 * @description Application-specific error code, expressed as a string value.
                 * @example parameter-not-valid
                 * @enum {string}
                 */
                code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                /**
                 * @description Human-readable explanation specific to this occurrence of the problem.
                 * @example The provided filter parameter is in invalid format or unsupported.
                 */
                detail?: string;
                /**
                 * Source
                 * @description An object containing references to the source of the error.
                 */
                source?: {
                    /**
                     * @description String indicating which URI query parameter caused the error.
                     * @example userId
                     */
                    parameter?: string;
                    /**
                     * @description Location to the object or attribute that the error relates to.
                     * @example users/userId
                     */
                    pointer?: string;
                };
                /**
                 * @description Title of the error
                 * @example Parameter not valid.
                 */
                title?: string;
                /**
                 * @description Type of the response, always "error"
                 * @example error
                 */
                type: string;
            }[];
        };
        ForbiddenAccessError: {
            /**
             * @description Unique identifier for this particular occurrence of the problem.
             * @example ac5ah5i
             */
            correlationId: string;
            /** @description Error data. */
            data: {
                /**
                 * @description Application-specific error code, expressed as a string value.
                 * @example forbidden-access
                 * @enum {string}
                 */
                code: "forbidden-access" | "no-production-access" | "access-denied";
                /**
                 * @description Human-readable explanation specific to this occurrence of the problem.
                 * @example Access to this resource is forbidden.
                 */
                detail?: string;
                /**
                 * Source
                 * @description An object containing references to the source of the error.
                 */
                source: {
                    /**
                     * @description String indicating which URI query parameter caused the error.
                     * @example userId
                     */
                    parameter?: string;
                    /**
                     * @description Location to the object or attribute that the error relates to.
                     * @example users/userId
                     */
                    pointer?: string;
                };
                /**
                 * @description Title of the error
                 * @example Forbidden Access
                 */
                title?: string;
                /**
                 * @description Type of the response, always "error"
                 * @example error
                 */
                type: string;
            }[];
            /**
             * @description Always "list".
             * @example list
             */
            type: string;
        };
        InternalServerError: {
            /**
             * @description Unique identifier for this particular occurrence of the problem.
             * @example ac5ah5i
             */
            correlationId: string;
            /** @description Error data. */
            data: {
                /**
                 * @description Application-specific error code, expressed as a string value.
                 * @example internal-server-error
                 * @enum {string}
                 */
                code: "internal-server-error";
                /**
                 * @description Human-readable explanation specific to this occurrence of the problem.
                 * @example Internal Server error. Contact support.
                 */
                detail?: string;
                /**
                 * @description Title of the error
                 * @example Internal Server error.
                 */
                title?: string;
                /**
                 * @description Type of the response, always "error"
                 * @example error
                 */
                type: string;
            }[];
            /**
             * @description Always "list".
             * @example list
             */
            type: string;
        };
        NotFoundError: {
            /**
             * @description Unique identifier for this particular occurrence of the problem.
             * @example ac5ah5i
             */
            correlationId: string;
            /** @description Error data. */
            data: {
                /**
                 * @description Application-specific error code, expressed as a string value.
                 * @example resource-not-found
                 * @enum {string}
                 */
                code: "resource-not-found";
                /**
                 * @description Human-readable explanation specific to this occurrence of the problem.
                 * @example Resource not found.
                 */
                detail?: string;
                /**
                 * @description Title of the error
                 * @example Requested resource is not found.
                 */
                title?: string;
                /**
                 * @description Type of the response, always "error"
                 * @example error
                 */
                type: string;
            }[];
            /**
             * @description Always "list".
             * @example list
             */
            type: string;
        };
        /**
         * ResourceLink
         * @description Link object containing a link to the resource, self reference.
         */
        ResourceLink: {
            /**
             * @description URL of the resource.
             * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
             */
            self: string;
        };
        /**
         * ResourceAccountLink
         * @description Link object containing a link to the resource, self reference.
         */
        ResourceAccountLink: {
            /**
             * @description URL of the resource.
             * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
             */
            self: string;
            /**
             * @description transactions link to the transactions associated with this account.
             * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
             */
            transactions?: string;
            /**
             * @description connection associated to User.
             * @example https://au-api.basiq.io/users/cd6fbd92/connections/321312asa
             */
            connection?: string;
            /**
             * @description institution link to the institution associated with this account.
             * @example https://au-api.basiq.io/institutions/AU00000
             */
            institution?: string;
            /** @example [] */
            statements?: string;
        };
        /**
         * Source
         * @description An object containing references to the source of the error.
         */
        Source: {
            /**
             * @description String indicating which URI query parameter caused the error.
             * @example userId
             */
            parameter?: string;
            /**
             * @description Location to the object or attribute that the error relates to.
             * @example users/userId
             */
            pointer?: string;
        };
        StatusServiceUnavailableError: {
            /**
             * @description Always "list".
             * @example list
             */
            type: string;
            /**
             * @description Unique identifier for this particular occurrence of the problem.
             * @example ac5ah5i
             */
            correlationId: string;
            /** @description Error data. */
            data: {
                /**
                 * @description Type of the response, always "error"
                 * @example error
                 */
                type: string;
                /**
                 * @description Title of the error
                 * @example Service Unavailable
                 */
                title?: string;
                /**
                 * @description Application-specific error code, expressed as a string value.
                 * @example service-unavailable
                 */
                code: Record<string, never>;
                /**
                 * @description Human-readable explanation specific to this occurrence of the problem.
                 * @example Service Unavailable. Try again later.
                 */
                detail?: string;
            }[];
        };
        TransactionData: {
            /**
             * @description Value is "transaction".
             * @example transaction
             */
            type: string;
            /**
             * @description Uniquely identifies the transaction for this connection. Note that when a connection is refreshed pending transactions will receive new id's, whilst posted transactions will receive the same id's as before the refresh.
             * @example d3de1ca1
             */
            id: string;
            /**
             * @description Identifies if a transaction is pending or posted. A pending transaction is an approved debit or credit transaction that has not been fully processed yet (i.e. has not been posted). Note that pending transactions are not available for all institutions.
             * @example posted
             * @enum {string}
             */
            status: "pending" | "posted";
            /** @description The transaction description as submitted by the institution. */
            description: string;
            /** @description The reference for the transaction provided by the originating institution. */
            reference: string;
            /**
             * @description Transaction amount. Outgoing funds are expressed as negative values.
             * @example 123.12
             */
            amount: string;
            /**
             * @description Standard 3 character currency codes as per ISO-4217.
             * @enum {string}
             */
            currency: "AUD" | "USD" | "GBP";
            /**
             * @description The id of the account resource the transaction belongs to.
             * @example d3de1ca1
             */
            account: string;
            /**
             * @description Value of the account balance at time the transaction was completed.
             * @example 123.12
             */
            balance?: string;
            /**
             * @description Identifies if the transaction is of debit or credit type.
             * @example debit
             * @enum {string}
             */
            direction: "debit" | "credit";
            /**
             * @description Describes the class(type) of transaction.
             * @example payment
             * @enum {string}
             */
            class: "bank-fee" | "payment" | "cash-withdrawal" | "transfer" | "loan-interest" | "refund" | "direct-credit" | "interest" | "loan-repayment";
            /**
             * @description The id of the institution resource the transaction originated from.
             * @example AU00000
             */
            institution: string;
            /**
             * @description The id of the connection resource that was used to retrieve the transaction.
             * @example d3de1ca1
             */
            connection: string;
            /**
             * @description Date that the user executed the transaction as provided by the institution. Note that not all transactions provide this value (varies by institution) e.g. "2017-11-10T00:00:00Z"
             * @example null
             */
            transactionDate: string;
            paymentDetails?: {
                bpay?: {
                    /** @description BPAY Biller Code for the transaction. */
                    billerCode?: string;
                    /** @description Name of the BPAY biller for the transaction. */
                    billerName?: string;
                    /** @description CRN for the transaction. */
                    crn?: string;
                };
                /** @description 6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.
                 *      */
                apcaNumber?: string;
            };
            /**
             * @description Date the transaction was posted as provided by the institution. This value is null if the record is pending. e.g. "2017-11-10T21:46:44Z" or 2017-11-10T00:00:00Z.
             * @example 2018-11-02T00:00:00Z
             */
            postDate: string;
            /** @description The subClass attribute will only return values for payment transactions (i.e. will be empty for all others) plus [new] bank fee transactions for those relating to account conduct such as account overdrawn and direct debit dishonours. */
            subClass: {
                /**
                 * @description code
                 * @example 722
                 */
                code?: string;
                /**
                 * @description SubClass title
                 * @example Cafes and Restaurants
                 */
                title?: string;
            };
            enrich: {
                location: {
                    /**
                     * @description Country
                     * @example Australia
                     */
                    country?: string;
                    /**
                     * @description Address
                     * @example 1/39 E Esplanade, Manly NSW 2095
                     */
                    formattedAddress?: string;
                    geometry?: {
                        /**
                         * @description Latitude
                         * @example -33.79988520000001
                         */
                        lat?: string;
                        /**
                         * @description Longitude
                         * @example 151.2858021
                         */
                        lng?: string;
                    };
                    /**
                     * @description Postal Code
                     * @example 2095
                     */
                    postalCode?: string;
                    /**
                     * @description Route Name
                     * @example E Esplanade
                     */
                    route?: string;
                    /**
                     * @description Route Number
                     * @example 29
                     */
                    routeNo?: string;
                    /**
                     * @description State
                     * @example NSW
                     */
                    state?: string;
                    /**
                     * @description Suburb
                     * @example Manly
                     */
                    suburb?: string;
                } | null;
                cleanDescription: string;
                /** @description This field contains an array of strings, each representing a specific tag for the transaction. The format of each string should be `tag_name:tag_value`, where `tag_name` defines the type of transaction (e.g., `card`, `income`, `mortgage`), and `tag_value` provides additional details (e.g., "card:4615"). The tags help classify and identify transactions based on various criteria.
                 *
                 *           - card:4615
                 *           - conduct:card
                 *           - conduct:overdrawn
                 *           - conduct:cheque
                 *           - conduct:atm
                 *           - conduct:currency
                 *           - conduct:late
                 *           - conduct:admin
                 *           - conduct:dishonour
                 *           - conduct:interest
                 *           - governmentPayment:centrelink
                 *           - governmentPayment:centrelinkCarers
                 *           - governmentPayment:crisisSupport
                 *           - governmentPayment:education
                 *           - governmentPayment:familyAllowance
                 *           - governmentPayment:jobseekerPymt
                 *           - governmentPayment:medicare
                 *           - governmentPayment:newstart
                 *           - governmentPayment:pension
                 *           - governmentPayment:rentalAssistance
                 *           - governmentPayment:vetAffairs
                 *           - governmentPayment:youthAllowance
                 *           - income:childSupport
                 *           - income:insurance
                 *           - income:investment
                 *           - income:rent
                 *           - income:salary
                 *           - income:superannuation
                 *           - liability:afterpay
                 *           - liability:arl collect pty ltd
                 *           - liability:australian recoveries
                 *           - liability:axess
                 *           - liability:azora
                 *           - liability:baycorp
                 *           - liability:beforepay
                 *           - liability:brighte
                 *           - liability:bundll
                 *           - liability:cash converters
                 *           - liability:cash direct
                 *           - liability:cashngo
                 *           - liability:cash stop
                 *           - liability:cash train
                 *           - liability:ccc
                 *           - liability:cfmg pty ltd
                 *           - liability:charter mercantile
                 *           - liability:cigno
                 *           - liability:collectau
                 *           - liability:collection house
                 *           - liability:complete credit solutions
                 *           - liability:credit collection services
                 *           - liability:credit corp
                 *           - liability:creditline
                 *           - liability:deferit
                 *           - liability:dun and bradstreet
                 *           - liability:earnd
                 *           - liability:edstart
                 *           - liability:finance one
                 *           - liability:fundo
                 *           - liability:fupay
                 *           - liability:gem visa
                 *           - liability:humm
                 *           - liability:indebted
                 *           - liability:klarna
                 *           - liability:latitude
                 *           - liability:laybuy
                 *           - liability:limepay
                 *           - liability:lion finance
                 *           - liability:money3
                 *           - liability:moneyloop
                 *           - liability:mypaynow
                 *           - liability:nimble
                 *           - liability:nine25
                 *           - liability:openpay
                 *           - liability:panthera
                 *           - liability:payitlater
                 *           - liability:payright
                 *           - liability:pioneer credit
                 *           - liability:plenti
                 *           - liability:probe
                 *           - liability:q card
                 *           - liability:quickapay
                 *           - liability:spotmenow
                 *           - liability:sunshine loans
                 *           - liability:tapmypay
                 *           - liability:wagetap
                 *           - liability:wallet wizard
                 *           - liability:zip pay
                 *           - third-party:apple pay
                 *           - third-party:google
                 *           - third-party:paypal
                 *           - third-party:sp
                 *           - third-party:sq
                 *           - creditCard:creditCard
                 *           - expense:rent
                 *           - loan:loan repayment
                 *           - mortgage:afg home loans
                 *           - mortgage:aims
                 *           - mortgage:amo group
                 *           - mortgage:athena
                 *           - mortgage:aussie
                 *           - mortgage:bluestone
                 *           - mortgage:clickloans
                 *           - mortgage:emoney
                 *           - mortgage:express reverse mortgage
                 *           - mortgage:firstmac
                 *           - mortgage:fox symes
                 *           - mortgage:freedom lend
                 *           - mortgage:freedom loans
                 *           - mortgage:funding
                 *           - mortgage:heartland reverse mortgages
                 *           - mortgage:homeloans
                 *           - mortgage:homestar
                 *           - mortgage:homestart
                 *           - mortgage:household capital
                 *           - mortgage:illawarra home loans
                 *           - mortgage:keystart
                 *           - mortgage:la trobe financial
                 *           - mortgage:liberty financial
                 *           - mortgage:loans
                 *           - mortgage:mortgage house
                 *           - mortgage:mortgage offset
                 *           - mortgage:mortgageport
                 *           - mortgage:mortgage repayment
                 *           - mortgage:onetwo
                 *           - mortgage:online home loans
                 *           - mortgage:pacific mortgage group
                 *           - mortgage:pepper money
                 *           - mortgage:qantas money
                 *           - mortgage:reduce home loans
                 *           - mortgage:resi
                 *           - mortgage:resimac
                 *           - mortgage:sucasa
                 *           - mortgage:switzer home loans
                 *           - mortgage:ticToc
                 *           - mortgage:unloan
                 *           - mortgage:vmg
                 *           - mortgage:well money
                 *      */
                tags: string[];
                merchant: {
                    /**
                     * @description id
                     * @example ae4a051c-4791-11e8-8750-0a87c0279fe8
                     */
                    id: string;
                    /**
                     * @description Merchant name
                     * @example Garfish Manly
                     */
                    businessName: string;
                    /**
                     * @description ABN
                     * @example 90065628864
                     */
                    ABN: string;
                    /**
                     * @description full merchant logo
                     * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-master.png
                     */
                    logoMaster: string;
                    /**
                     * @description thumbnail merchant logo
                     * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-thumb.png
                     */
                    logoThumb: string;
                    phoneNumber?: {
                        /**
                         * @description International Phone Number
                         * @example +61 2 9977 0707
                         */
                        international?: string;
                        /**
                         * @description Local Phone Number
                         * @example (02) 9977 0707
                         */
                        local?: string;
                    };
                    /**
                     * @description Merchant Website
                     * @example http://garfish.com.au/garfish-manly/
                     */
                    website: string;
                } | null;
                category: {
                    /**
                     * @description Indicates the method used to match a payment transaction with a merchant or business classification code. Description for each enum; merchantFull: Indicates an exact match between the transaction and a known merchant in the database. merchantPartial: Suggests a partial match with a merchant, usually based on substring or fuzzy logic. mcc: Match is done using the Merchant Category Code associated with the transaction. ml: Match is determined through machine learning algorithms for classification. none: Match is not found.
                     *
                     * @example merchantfull
                     * @enum {string}
                     */
                    matchType?: "merchantFull" | "merchantPartial" | "mcc" | "ml" | "none";
                    /**
                     * @description The confidence score for the matchType which is a float value between 0 and 1. The higher the number, the higher the confidence in the match.
                     * @example 1.0
                     */
                    matchScore?: string;
                    /** @description Merchant category codes returned from Data holders. */
                    mcc?: {
                        /**
                         * @description code
                         * @example txMccCode-25028
                         */
                        code?: string;
                        /**
                         * @description title
                         * @example
                         */
                        title?: string;
                    };
                    anzsic?: {
                        division?: {
                            /**
                             * @description Division Details
                             * @example Accommodation and Food Services
                             */
                            title?: string;
                            /**
                             * @description Division Code
                             * @example H
                             */
                            code?: string;
                        };
                        subdivision?: {
                            /**
                             * @description Subdivision Code
                             * @example 45
                             */
                            code?: string;
                            /**
                             * @description Subdivision Details
                             * @example Food and Beverage Services
                             */
                            title?: string;
                        };
                        group?: {
                            /**
                             * @description Group Code
                             * @example 451
                             */
                            code?: string;
                            /**
                             * @description Group Details
                             * @example Cafes, Restaurants and Takeaway Food Services
                             */
                            title?: string;
                        };
                        class?: {
                            /**
                             * @description Class Details
                             * @example Cafes and Restaurants
                             */
                            title?: string;
                            /**
                             * @description Class Code
                             * @example 4511
                             */
                            code?: string;
                        };
                        subclass?: {
                            /**
                             * @description SubClass Details
                             * @example Cafes and Restaurants
                             */
                            title?: string;
                            /**
                             * @description SubClass Code
                             * @example 451100
                             */
                            code?: string;
                        };
                    };
                } | null;
            };
            links: {
                /**
                 * @description Url of the account.
                 * @example https://au-api.basiq.io/users/6a52015e/accounts/31eb30a0
                 */
                account: string;
                /**
                 * @description Url of the institution.
                 * @example https://au-api.basiq.io/institutions/AU00000
                 */
                institution: string;
                /**
                 * @description Transaction self reference.
                 * @example https://au-api.basiq.io/users/6a52015e/transactions/2082c765
                 */
                self: string;
            };
        };
        TransactionLinks: {
            /**
             * @description Url of the account.
             * @example https://au-api.basiq.io/users/6a52015e/accounts/31eb30a0
             */
            account: string;
            /**
             * @description Url of the institution.
             * @example https://au-api.basiq.io/institutions/AU00000
             */
            institution: string;
            /**
             * @description Transaction self reference.
             * @example https://au-api.basiq.io/users/6a52015e/transactions/2082c765
             */
            self: string;
        };
        TransactionsAnzsic: {
            division?: {
                /**
                 * @description Division Details
                 * @example Accommodation and Food Services
                 */
                title?: string;
                /**
                 * @description Division Code
                 * @example H
                 */
                code?: string;
            };
            subdivision?: {
                /**
                 * @description Subdivision Code
                 * @example 45
                 */
                code?: string;
                /**
                 * @description Subdivision Details
                 * @example Food and Beverage Services
                 */
                title?: string;
            };
            group?: {
                /**
                 * @description Group Code
                 * @example 451
                 */
                code?: string;
                /**
                 * @description Group Details
                 * @example Cafes, Restaurants and Takeaway Food Services
                 */
                title?: string;
            };
            class?: {
                /**
                 * @description Class Details
                 * @example Cafes and Restaurants
                 */
                title?: string;
                /**
                 * @description Class Code
                 * @example 4511
                 */
                code?: string;
            };
            subclass?: {
                /**
                 * @description SubClass Details
                 * @example Cafes and Restaurants
                 */
                title?: string;
                /**
                 * @description SubClass Code
                 * @example 451100
                 */
                code?: string;
            };
        };
        TransactionsCategory: {
            /**
             * @description Indicates the method used to match a payment transaction with a merchant or business classification code. Description for each enum; merchantFull: Indicates an exact match between the transaction and a known merchant in the database. merchantPartial: Suggests a partial match with a merchant, usually based on substring or fuzzy logic. mcc: Match is done using the Merchant Category Code associated with the transaction. ml: Match is determined through machine learning algorithms for classification. none: Match is not found.
             *
             * @example merchantfull
             * @enum {string}
             */
            matchType?: "merchantFull" | "merchantPartial" | "mcc" | "ml" | "none";
            /**
             * @description The confidence score for the matchType which is a float value between 0 and 1. The higher the number, the higher the confidence in the match.
             * @example 1.0
             */
            matchScore?: string;
            /** @description Merchant category codes returned from Data holders. */
            mcc?: {
                /**
                 * @description code
                 * @example txMccCode-25028
                 */
                code?: string;
                /**
                 * @description title
                 * @example
                 */
                title?: string;
            };
            anzsic?: {
                division?: {
                    /**
                     * @description Division Details
                     * @example Accommodation and Food Services
                     */
                    title?: string;
                    /**
                     * @description Division Code
                     * @example H
                     */
                    code?: string;
                };
                subdivision?: {
                    /**
                     * @description Subdivision Code
                     * @example 45
                     */
                    code?: string;
                    /**
                     * @description Subdivision Details
                     * @example Food and Beverage Services
                     */
                    title?: string;
                };
                group?: {
                    /**
                     * @description Group Code
                     * @example 451
                     */
                    code?: string;
                    /**
                     * @description Group Details
                     * @example Cafes, Restaurants and Takeaway Food Services
                     */
                    title?: string;
                };
                class?: {
                    /**
                     * @description Class Details
                     * @example Cafes and Restaurants
                     */
                    title?: string;
                    /**
                     * @description Class Code
                     * @example 4511
                     */
                    code?: string;
                };
                subclass?: {
                    /**
                     * @description SubClass Details
                     * @example Cafes and Restaurants
                     */
                    title?: string;
                    /**
                     * @description SubClass Code
                     * @example 451100
                     */
                    code?: string;
                };
            };
        } | null;
        TransactionsClass: {
            /**
             * @description Class Details
             * @example Cafes and Restaurants
             */
            title?: string;
            /**
             * @description Class Code
             * @example 4511
             */
            code?: string;
        };
        TransactionsDivision: {
            /**
             * @description Division Details
             * @example Accommodation and Food Services
             */
            title?: string;
            /**
             * @description Division Code
             * @example H
             */
            code?: string;
        };
        TransactionsEnrich: {
            location: {
                /**
                 * @description Country
                 * @example Australia
                 */
                country?: string;
                /**
                 * @description Address
                 * @example 1/39 E Esplanade, Manly NSW 2095
                 */
                formattedAddress?: string;
                geometry?: {
                    /**
                     * @description Latitude
                     * @example -33.79988520000001
                     */
                    lat?: string;
                    /**
                     * @description Longitude
                     * @example 151.2858021
                     */
                    lng?: string;
                };
                /**
                 * @description Postal Code
                 * @example 2095
                 */
                postalCode?: string;
                /**
                 * @description Route Name
                 * @example E Esplanade
                 */
                route?: string;
                /**
                 * @description Route Number
                 * @example 29
                 */
                routeNo?: string;
                /**
                 * @description State
                 * @example NSW
                 */
                state?: string;
                /**
                 * @description Suburb
                 * @example Manly
                 */
                suburb?: string;
            } | null;
            cleanDescription: string;
            /** @description This field contains an array of strings, each representing a specific tag for the transaction. The format of each string should be `tag_name:tag_value`, where `tag_name` defines the type of transaction (e.g., `card`, `income`, `mortgage`), and `tag_value` provides additional details (e.g., "card:4615"). The tags help classify and identify transactions based on various criteria.
             *
             *           - card:4615
             *           - conduct:card
             *           - conduct:overdrawn
             *           - conduct:cheque
             *           - conduct:atm
             *           - conduct:currency
             *           - conduct:late
             *           - conduct:admin
             *           - conduct:dishonour
             *           - conduct:interest
             *           - governmentPayment:centrelink
             *           - governmentPayment:centrelinkCarers
             *           - governmentPayment:crisisSupport
             *           - governmentPayment:education
             *           - governmentPayment:familyAllowance
             *           - governmentPayment:jobseekerPymt
             *           - governmentPayment:medicare
             *           - governmentPayment:newstart
             *           - governmentPayment:pension
             *           - governmentPayment:rentalAssistance
             *           - governmentPayment:vetAffairs
             *           - governmentPayment:youthAllowance
             *           - income:childSupport
             *           - income:insurance
             *           - income:investment
             *           - income:rent
             *           - income:salary
             *           - income:superannuation
             *           - liability:afterpay
             *           - liability:arl collect pty ltd
             *           - liability:australian recoveries
             *           - liability:axess
             *           - liability:azora
             *           - liability:baycorp
             *           - liability:beforepay
             *           - liability:brighte
             *           - liability:bundll
             *           - liability:cash converters
             *           - liability:cash direct
             *           - liability:cashngo
             *           - liability:cash stop
             *           - liability:cash train
             *           - liability:ccc
             *           - liability:cfmg pty ltd
             *           - liability:charter mercantile
             *           - liability:cigno
             *           - liability:collectau
             *           - liability:collection house
             *           - liability:complete credit solutions
             *           - liability:credit collection services
             *           - liability:credit corp
             *           - liability:creditline
             *           - liability:deferit
             *           - liability:dun and bradstreet
             *           - liability:earnd
             *           - liability:edstart
             *           - liability:finance one
             *           - liability:fundo
             *           - liability:fupay
             *           - liability:gem visa
             *           - liability:humm
             *           - liability:indebted
             *           - liability:klarna
             *           - liability:latitude
             *           - liability:laybuy
             *           - liability:limepay
             *           - liability:lion finance
             *           - liability:money3
             *           - liability:moneyloop
             *           - liability:mypaynow
             *           - liability:nimble
             *           - liability:nine25
             *           - liability:openpay
             *           - liability:panthera
             *           - liability:payitlater
             *           - liability:payright
             *           - liability:pioneer credit
             *           - liability:plenti
             *           - liability:probe
             *           - liability:q card
             *           - liability:quickapay
             *           - liability:spotmenow
             *           - liability:sunshine loans
             *           - liability:tapmypay
             *           - liability:wagetap
             *           - liability:wallet wizard
             *           - liability:zip pay
             *           - third-party:apple pay
             *           - third-party:google
             *           - third-party:paypal
             *           - third-party:sp
             *           - third-party:sq
             *           - creditCard:creditCard
             *           - expense:rent
             *           - loan:loan repayment
             *           - mortgage:afg home loans
             *           - mortgage:aims
             *           - mortgage:amo group
             *           - mortgage:athena
             *           - mortgage:aussie
             *           - mortgage:bluestone
             *           - mortgage:clickloans
             *           - mortgage:emoney
             *           - mortgage:express reverse mortgage
             *           - mortgage:firstmac
             *           - mortgage:fox symes
             *           - mortgage:freedom lend
             *           - mortgage:freedom loans
             *           - mortgage:funding
             *           - mortgage:heartland reverse mortgages
             *           - mortgage:homeloans
             *           - mortgage:homestar
             *           - mortgage:homestart
             *           - mortgage:household capital
             *           - mortgage:illawarra home loans
             *           - mortgage:keystart
             *           - mortgage:la trobe financial
             *           - mortgage:liberty financial
             *           - mortgage:loans
             *           - mortgage:mortgage house
             *           - mortgage:mortgage offset
             *           - mortgage:mortgageport
             *           - mortgage:mortgage repayment
             *           - mortgage:onetwo
             *           - mortgage:online home loans
             *           - mortgage:pacific mortgage group
             *           - mortgage:pepper money
             *           - mortgage:qantas money
             *           - mortgage:reduce home loans
             *           - mortgage:resi
             *           - mortgage:resimac
             *           - mortgage:sucasa
             *           - mortgage:switzer home loans
             *           - mortgage:ticToc
             *           - mortgage:unloan
             *           - mortgage:vmg
             *           - mortgage:well money
             *      */
            tags: string[];
            merchant: {
                /**
                 * @description id
                 * @example ae4a051c-4791-11e8-8750-0a87c0279fe8
                 */
                id: string;
                /**
                 * @description Merchant name
                 * @example Garfish Manly
                 */
                businessName: string;
                /**
                 * @description ABN
                 * @example 90065628864
                 */
                ABN: string;
                /**
                 * @description full merchant logo
                 * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-master.png
                 */
                logoMaster: string;
                /**
                 * @description thumbnail merchant logo
                 * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-thumb.png
                 */
                logoThumb: string;
                phoneNumber?: {
                    /**
                     * @description International Phone Number
                     * @example +61 2 9977 0707
                     */
                    international?: string;
                    /**
                     * @description Local Phone Number
                     * @example (02) 9977 0707
                     */
                    local?: string;
                };
                /**
                 * @description Merchant Website
                 * @example http://garfish.com.au/garfish-manly/
                 */
                website: string;
            } | null;
            category: {
                /**
                 * @description Indicates the method used to match a payment transaction with a merchant or business classification code. Description for each enum; merchantFull: Indicates an exact match between the transaction and a known merchant in the database. merchantPartial: Suggests a partial match with a merchant, usually based on substring or fuzzy logic. mcc: Match is done using the Merchant Category Code associated with the transaction. ml: Match is determined through machine learning algorithms for classification. none: Match is not found.
                 *
                 * @example merchantfull
                 * @enum {string}
                 */
                matchType?: "merchantFull" | "merchantPartial" | "mcc" | "ml" | "none";
                /**
                 * @description The confidence score for the matchType which is a float value between 0 and 1. The higher the number, the higher the confidence in the match.
                 * @example 1.0
                 */
                matchScore?: string;
                /** @description Merchant category codes returned from Data holders. */
                mcc?: {
                    /**
                     * @description code
                     * @example txMccCode-25028
                     */
                    code?: string;
                    /**
                     * @description title
                     * @example
                     */
                    title?: string;
                };
                anzsic?: {
                    division?: {
                        /**
                         * @description Division Details
                         * @example Accommodation and Food Services
                         */
                        title?: string;
                        /**
                         * @description Division Code
                         * @example H
                         */
                        code?: string;
                    };
                    subdivision?: {
                        /**
                         * @description Subdivision Code
                         * @example 45
                         */
                        code?: string;
                        /**
                         * @description Subdivision Details
                         * @example Food and Beverage Services
                         */
                        title?: string;
                    };
                    group?: {
                        /**
                         * @description Group Code
                         * @example 451
                         */
                        code?: string;
                        /**
                         * @description Group Details
                         * @example Cafes, Restaurants and Takeaway Food Services
                         */
                        title?: string;
                    };
                    class?: {
                        /**
                         * @description Class Details
                         * @example Cafes and Restaurants
                         */
                        title?: string;
                        /**
                         * @description Class Code
                         * @example 4511
                         */
                        code?: string;
                    };
                    subclass?: {
                        /**
                         * @description SubClass Details
                         * @example Cafes and Restaurants
                         */
                        title?: string;
                        /**
                         * @description SubClass Code
                         * @example 451100
                         */
                        code?: string;
                    };
                };
            } | null;
        };
        /** @description This field contains an array of strings, each representing a specific tag for the transaction. The format of each string should be `tag_name:tag_value`, where `tag_name` defines the type of transaction (e.g., `card`, `income`, `mortgage`), and `tag_value` provides additional details (e.g., "card:4615"). The tags help classify and identify transactions based on various criteria.
         *
         *           - card:4615
         *           - conduct:card
         *           - conduct:overdrawn
         *           - conduct:cheque
         *           - conduct:atm
         *           - conduct:currency
         *           - conduct:late
         *           - conduct:admin
         *           - conduct:dishonour
         *           - conduct:interest
         *           - governmentPayment:centrelink
         *           - governmentPayment:centrelinkCarers
         *           - governmentPayment:crisisSupport
         *           - governmentPayment:education
         *           - governmentPayment:familyAllowance
         *           - governmentPayment:jobseekerPymt
         *           - governmentPayment:medicare
         *           - governmentPayment:newstart
         *           - governmentPayment:pension
         *           - governmentPayment:rentalAssistance
         *           - governmentPayment:vetAffairs
         *           - governmentPayment:youthAllowance
         *           - income:childSupport
         *           - income:insurance
         *           - income:investment
         *           - income:rent
         *           - income:salary
         *           - income:superannuation
         *           - liability:afterpay
         *           - liability:arl collect pty ltd
         *           - liability:australian recoveries
         *           - liability:axess
         *           - liability:azora
         *           - liability:baycorp
         *           - liability:beforepay
         *           - liability:brighte
         *           - liability:bundll
         *           - liability:cash converters
         *           - liability:cash direct
         *           - liability:cashngo
         *           - liability:cash stop
         *           - liability:cash train
         *           - liability:ccc
         *           - liability:cfmg pty ltd
         *           - liability:charter mercantile
         *           - liability:cigno
         *           - liability:collectau
         *           - liability:collection house
         *           - liability:complete credit solutions
         *           - liability:credit collection services
         *           - liability:credit corp
         *           - liability:creditline
         *           - liability:deferit
         *           - liability:dun and bradstreet
         *           - liability:earnd
         *           - liability:edstart
         *           - liability:finance one
         *           - liability:fundo
         *           - liability:fupay
         *           - liability:gem visa
         *           - liability:humm
         *           - liability:indebted
         *           - liability:klarna
         *           - liability:latitude
         *           - liability:laybuy
         *           - liability:limepay
         *           - liability:lion finance
         *           - liability:money3
         *           - liability:moneyloop
         *           - liability:mypaynow
         *           - liability:nimble
         *           - liability:nine25
         *           - liability:openpay
         *           - liability:panthera
         *           - liability:payitlater
         *           - liability:payright
         *           - liability:pioneer credit
         *           - liability:plenti
         *           - liability:probe
         *           - liability:q card
         *           - liability:quickapay
         *           - liability:spotmenow
         *           - liability:sunshine loans
         *           - liability:tapmypay
         *           - liability:wagetap
         *           - liability:wallet wizard
         *           - liability:zip pay
         *           - third-party:apple pay
         *           - third-party:google
         *           - third-party:paypal
         *           - third-party:sp
         *           - third-party:sq
         *           - creditCard:creditCard
         *           - expense:rent
         *           - loan:loan repayment
         *           - mortgage:afg home loans
         *           - mortgage:aims
         *           - mortgage:amo group
         *           - mortgage:athena
         *           - mortgage:aussie
         *           - mortgage:bluestone
         *           - mortgage:clickloans
         *           - mortgage:emoney
         *           - mortgage:express reverse mortgage
         *           - mortgage:firstmac
         *           - mortgage:fox symes
         *           - mortgage:freedom lend
         *           - mortgage:freedom loans
         *           - mortgage:funding
         *           - mortgage:heartland reverse mortgages
         *           - mortgage:homeloans
         *           - mortgage:homestar
         *           - mortgage:homestart
         *           - mortgage:household capital
         *           - mortgage:illawarra home loans
         *           - mortgage:keystart
         *           - mortgage:la trobe financial
         *           - mortgage:liberty financial
         *           - mortgage:loans
         *           - mortgage:mortgage house
         *           - mortgage:mortgage offset
         *           - mortgage:mortgageport
         *           - mortgage:mortgage repayment
         *           - mortgage:onetwo
         *           - mortgage:online home loans
         *           - mortgage:pacific mortgage group
         *           - mortgage:pepper money
         *           - mortgage:qantas money
         *           - mortgage:reduce home loans
         *           - mortgage:resi
         *           - mortgage:resimac
         *           - mortgage:sucasa
         *           - mortgage:switzer home loans
         *           - mortgage:ticToc
         *           - mortgage:unloan
         *           - mortgage:vmg
         *           - mortgage:well money
         *      */
        Transactionstags: string[];
        TransactionscleanDescription: string;
        TransactionsGeometry: {
            /**
             * @description Latitude
             * @example -33.79988520000001
             */
            lat?: string;
            /**
             * @description Longitude
             * @example 151.2858021
             */
            lng?: string;
        };
        TransactionsGetLinks: {
            /**
             * @description Self reference url.
             * @example https://au-api.basiq.io/users/ea3a81/transactions
             */
            self: string;
            /**
             * @description URL to the next result page when there are more than 500 transactions.
             * @example https://au-api.basiq.io/users/6a52015e/transactions?next=bf1ec9d4
             */
            next?: string;
        };
        /**
         * Transactions container object.
         * @description A transaction object is created whenever money is debited or credited from a particular account.
         */
        TransactionsGetResource: {
            /**
             * @description Value is "list".
             * @example list
             */
            type: string;
            /**
             * Format: int64
             * @description Count of the transactions in the response.
             * @example 100
             */
            count: number;
            /**
             * Format: int64
             * @example 500
             */
            size: number;
            data: {
                /**
                 * @description Value is "transaction".
                 * @example transaction
                 */
                type: string;
                /**
                 * @description Uniquely identifies the transaction for this connection. Note that when a connection is refreshed pending transactions will receive new id's, whilst posted transactions will receive the same id's as before the refresh.
                 * @example d3de1ca1
                 */
                id: string;
                /**
                 * @description Identifies if a transaction is pending or posted. A pending transaction is an approved debit or credit transaction that has not been fully processed yet (i.e. has not been posted). Note that pending transactions are not available for all institutions.
                 * @example posted
                 * @enum {string}
                 */
                status: "pending" | "posted";
                /** @description The transaction description as submitted by the institution. */
                description: string;
                /** @description The reference for the transaction provided by the originating institution. */
                reference: string;
                /**
                 * @description Transaction amount. Outgoing funds are expressed as negative values.
                 * @example 123.12
                 */
                amount: string;
                /**
                 * @description Standard 3 character currency codes as per ISO-4217.
                 * @enum {string}
                 */
                currency: "AUD" | "USD" | "GBP";
                /**
                 * @description The id of the account resource the transaction belongs to.
                 * @example d3de1ca1
                 */
                account: string;
                /**
                 * @description Value of the account balance at time the transaction was completed.
                 * @example 123.12
                 */
                balance?: string;
                /**
                 * @description Identifies if the transaction is of debit or credit type.
                 * @example debit
                 * @enum {string}
                 */
                direction: "debit" | "credit";
                /**
                 * @description Describes the class(type) of transaction.
                 * @example payment
                 * @enum {string}
                 */
                class: "bank-fee" | "payment" | "cash-withdrawal" | "transfer" | "loan-interest" | "refund" | "direct-credit" | "interest" | "loan-repayment";
                /**
                 * @description The id of the institution resource the transaction originated from.
                 * @example AU00000
                 */
                institution: string;
                /**
                 * @description The id of the connection resource that was used to retrieve the transaction.
                 * @example d3de1ca1
                 */
                connection: string;
                /**
                 * @description Date that the user executed the transaction as provided by the institution. Note that not all transactions provide this value (varies by institution) e.g. "2017-11-10T00:00:00Z"
                 * @example null
                 */
                transactionDate: string;
                paymentDetails?: {
                    bpay?: {
                        /** @description BPAY Biller Code for the transaction. */
                        billerCode?: string;
                        /** @description Name of the BPAY biller for the transaction. */
                        billerName?: string;
                        /** @description CRN for the transaction. */
                        crn?: string;
                    };
                    /** @description 6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.
                     *      */
                    apcaNumber?: string;
                };
                /**
                 * @description Date the transaction was posted as provided by the institution. This value is null if the record is pending. e.g. "2017-11-10T21:46:44Z" or 2017-11-10T00:00:00Z.
                 * @example 2018-11-02T00:00:00Z
                 */
                postDate: string;
                /** @description The subClass attribute will only return values for payment transactions (i.e. will be empty for all others) plus [new] bank fee transactions for those relating to account conduct such as account overdrawn and direct debit dishonours. */
                subClass: {
                    /**
                     * @description code
                     * @example 722
                     */
                    code?: string;
                    /**
                     * @description SubClass title
                     * @example Cafes and Restaurants
                     */
                    title?: string;
                };
                enrich: {
                    location: {
                        /**
                         * @description Country
                         * @example Australia
                         */
                        country?: string;
                        /**
                         * @description Address
                         * @example 1/39 E Esplanade, Manly NSW 2095
                         */
                        formattedAddress?: string;
                        geometry?: {
                            /**
                             * @description Latitude
                             * @example -33.79988520000001
                             */
                            lat?: string;
                            /**
                             * @description Longitude
                             * @example 151.2858021
                             */
                            lng?: string;
                        };
                        /**
                         * @description Postal Code
                         * @example 2095
                         */
                        postalCode?: string;
                        /**
                         * @description Route Name
                         * @example E Esplanade
                         */
                        route?: string;
                        /**
                         * @description Route Number
                         * @example 29
                         */
                        routeNo?: string;
                        /**
                         * @description State
                         * @example NSW
                         */
                        state?: string;
                        /**
                         * @description Suburb
                         * @example Manly
                         */
                        suburb?: string;
                    } | null;
                    cleanDescription: string;
                    /** @description This field contains an array of strings, each representing a specific tag for the transaction. The format of each string should be `tag_name:tag_value`, where `tag_name` defines the type of transaction (e.g., `card`, `income`, `mortgage`), and `tag_value` provides additional details (e.g., "card:4615"). The tags help classify and identify transactions based on various criteria.
                     *
                     *           - card:4615
                     *           - conduct:card
                     *           - conduct:overdrawn
                     *           - conduct:cheque
                     *           - conduct:atm
                     *           - conduct:currency
                     *           - conduct:late
                     *           - conduct:admin
                     *           - conduct:dishonour
                     *           - conduct:interest
                     *           - governmentPayment:centrelink
                     *           - governmentPayment:centrelinkCarers
                     *           - governmentPayment:crisisSupport
                     *           - governmentPayment:education
                     *           - governmentPayment:familyAllowance
                     *           - governmentPayment:jobseekerPymt
                     *           - governmentPayment:medicare
                     *           - governmentPayment:newstart
                     *           - governmentPayment:pension
                     *           - governmentPayment:rentalAssistance
                     *           - governmentPayment:vetAffairs
                     *           - governmentPayment:youthAllowance
                     *           - income:childSupport
                     *           - income:insurance
                     *           - income:investment
                     *           - income:rent
                     *           - income:salary
                     *           - income:superannuation
                     *           - liability:afterpay
                     *           - liability:arl collect pty ltd
                     *           - liability:australian recoveries
                     *           - liability:axess
                     *           - liability:azora
                     *           - liability:baycorp
                     *           - liability:beforepay
                     *           - liability:brighte
                     *           - liability:bundll
                     *           - liability:cash converters
                     *           - liability:cash direct
                     *           - liability:cashngo
                     *           - liability:cash stop
                     *           - liability:cash train
                     *           - liability:ccc
                     *           - liability:cfmg pty ltd
                     *           - liability:charter mercantile
                     *           - liability:cigno
                     *           - liability:collectau
                     *           - liability:collection house
                     *           - liability:complete credit solutions
                     *           - liability:credit collection services
                     *           - liability:credit corp
                     *           - liability:creditline
                     *           - liability:deferit
                     *           - liability:dun and bradstreet
                     *           - liability:earnd
                     *           - liability:edstart
                     *           - liability:finance one
                     *           - liability:fundo
                     *           - liability:fupay
                     *           - liability:gem visa
                     *           - liability:humm
                     *           - liability:indebted
                     *           - liability:klarna
                     *           - liability:latitude
                     *           - liability:laybuy
                     *           - liability:limepay
                     *           - liability:lion finance
                     *           - liability:money3
                     *           - liability:moneyloop
                     *           - liability:mypaynow
                     *           - liability:nimble
                     *           - liability:nine25
                     *           - liability:openpay
                     *           - liability:panthera
                     *           - liability:payitlater
                     *           - liability:payright
                     *           - liability:pioneer credit
                     *           - liability:plenti
                     *           - liability:probe
                     *           - liability:q card
                     *           - liability:quickapay
                     *           - liability:spotmenow
                     *           - liability:sunshine loans
                     *           - liability:tapmypay
                     *           - liability:wagetap
                     *           - liability:wallet wizard
                     *           - liability:zip pay
                     *           - third-party:apple pay
                     *           - third-party:google
                     *           - third-party:paypal
                     *           - third-party:sp
                     *           - third-party:sq
                     *           - creditCard:creditCard
                     *           - expense:rent
                     *           - loan:loan repayment
                     *           - mortgage:afg home loans
                     *           - mortgage:aims
                     *           - mortgage:amo group
                     *           - mortgage:athena
                     *           - mortgage:aussie
                     *           - mortgage:bluestone
                     *           - mortgage:clickloans
                     *           - mortgage:emoney
                     *           - mortgage:express reverse mortgage
                     *           - mortgage:firstmac
                     *           - mortgage:fox symes
                     *           - mortgage:freedom lend
                     *           - mortgage:freedom loans
                     *           - mortgage:funding
                     *           - mortgage:heartland reverse mortgages
                     *           - mortgage:homeloans
                     *           - mortgage:homestar
                     *           - mortgage:homestart
                     *           - mortgage:household capital
                     *           - mortgage:illawarra home loans
                     *           - mortgage:keystart
                     *           - mortgage:la trobe financial
                     *           - mortgage:liberty financial
                     *           - mortgage:loans
                     *           - mortgage:mortgage house
                     *           - mortgage:mortgage offset
                     *           - mortgage:mortgageport
                     *           - mortgage:mortgage repayment
                     *           - mortgage:onetwo
                     *           - mortgage:online home loans
                     *           - mortgage:pacific mortgage group
                     *           - mortgage:pepper money
                     *           - mortgage:qantas money
                     *           - mortgage:reduce home loans
                     *           - mortgage:resi
                     *           - mortgage:resimac
                     *           - mortgage:sucasa
                     *           - mortgage:switzer home loans
                     *           - mortgage:ticToc
                     *           - mortgage:unloan
                     *           - mortgage:vmg
                     *           - mortgage:well money
                     *      */
                    tags: string[];
                    merchant: {
                        /**
                         * @description id
                         * @example ae4a051c-4791-11e8-8750-0a87c0279fe8
                         */
                        id: string;
                        /**
                         * @description Merchant name
                         * @example Garfish Manly
                         */
                        businessName: string;
                        /**
                         * @description ABN
                         * @example 90065628864
                         */
                        ABN: string;
                        /**
                         * @description full merchant logo
                         * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-master.png
                         */
                        logoMaster: string;
                        /**
                         * @description thumbnail merchant logo
                         * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-thumb.png
                         */
                        logoThumb: string;
                        phoneNumber?: {
                            /**
                             * @description International Phone Number
                             * @example +61 2 9977 0707
                             */
                            international?: string;
                            /**
                             * @description Local Phone Number
                             * @example (02) 9977 0707
                             */
                            local?: string;
                        };
                        /**
                         * @description Merchant Website
                         * @example http://garfish.com.au/garfish-manly/
                         */
                        website: string;
                    } | null;
                    category: {
                        /**
                         * @description Indicates the method used to match a payment transaction with a merchant or business classification code. Description for each enum; merchantFull: Indicates an exact match between the transaction and a known merchant in the database. merchantPartial: Suggests a partial match with a merchant, usually based on substring or fuzzy logic. mcc: Match is done using the Merchant Category Code associated with the transaction. ml: Match is determined through machine learning algorithms for classification. none: Match is not found.
                         *
                         * @example merchantfull
                         * @enum {string}
                         */
                        matchType?: "merchantFull" | "merchantPartial" | "mcc" | "ml" | "none";
                        /**
                         * @description The confidence score for the matchType which is a float value between 0 and 1. The higher the number, the higher the confidence in the match.
                         * @example 1.0
                         */
                        matchScore?: string;
                        /** @description Merchant category codes returned from Data holders. */
                        mcc?: {
                            /**
                             * @description code
                             * @example txMccCode-25028
                             */
                            code?: string;
                            /**
                             * @description title
                             * @example
                             */
                            title?: string;
                        };
                        anzsic?: {
                            division?: {
                                /**
                                 * @description Division Details
                                 * @example Accommodation and Food Services
                                 */
                                title?: string;
                                /**
                                 * @description Division Code
                                 * @example H
                                 */
                                code?: string;
                            };
                            subdivision?: {
                                /**
                                 * @description Subdivision Code
                                 * @example 45
                                 */
                                code?: string;
                                /**
                                 * @description Subdivision Details
                                 * @example Food and Beverage Services
                                 */
                                title?: string;
                            };
                            group?: {
                                /**
                                 * @description Group Code
                                 * @example 451
                                 */
                                code?: string;
                                /**
                                 * @description Group Details
                                 * @example Cafes, Restaurants and Takeaway Food Services
                                 */
                                title?: string;
                            };
                            class?: {
                                /**
                                 * @description Class Details
                                 * @example Cafes and Restaurants
                                 */
                                title?: string;
                                /**
                                 * @description Class Code
                                 * @example 4511
                                 */
                                code?: string;
                            };
                            subclass?: {
                                /**
                                 * @description SubClass Details
                                 * @example Cafes and Restaurants
                                 */
                                title?: string;
                                /**
                                 * @description SubClass Code
                                 * @example 451100
                                 */
                                code?: string;
                            };
                        };
                    } | null;
                };
                links: {
                    /**
                     * @description Url of the account.
                     * @example https://au-api.basiq.io/users/6a52015e/accounts/31eb30a0
                     */
                    account: string;
                    /**
                     * @description Url of the institution.
                     * @example https://au-api.basiq.io/institutions/AU00000
                     */
                    institution: string;
                    /**
                     * @description Transaction self reference.
                     * @example https://au-api.basiq.io/users/6a52015e/transactions/2082c765
                     */
                    self: string;
                };
            }[];
            links?: {
                /**
                 * @description Self reference url.
                 * @example https://au-api.basiq.io/users/ea3a81/transactions
                 */
                self: string;
                /**
                 * @description URL to the next result page when there are more than 500 transactions.
                 * @example https://au-api.basiq.io/users/6a52015e/transactions?next=bf1ec9d4
                 */
                next?: string;
            };
        };
        TransactionsGroup: {
            /**
             * @description Group Code
             * @example 451
             */
            code?: string;
            /**
             * @description Group Details
             * @example Cafes, Restaurants and Takeaway Food Services
             */
            title?: string;
        };
        TransactionsLocation: {
            /**
             * @description Country
             * @example Australia
             */
            country?: string;
            /**
             * @description Address
             * @example 1/39 E Esplanade, Manly NSW 2095
             */
            formattedAddress?: string;
            geometry?: {
                /**
                 * @description Latitude
                 * @example -33.79988520000001
                 */
                lat?: string;
                /**
                 * @description Longitude
                 * @example 151.2858021
                 */
                lng?: string;
            };
            /**
             * @description Postal Code
             * @example 2095
             */
            postalCode?: string;
            /**
             * @description Route Name
             * @example E Esplanade
             */
            route?: string;
            /**
             * @description Route Number
             * @example 29
             */
            routeNo?: string;
            /**
             * @description State
             * @example NSW
             */
            state?: string;
            /**
             * @description Suburb
             * @example Manly
             */
            suburb?: string;
        } | null;
        TransactionsMerchant: {
            /**
             * @description id
             * @example ae4a051c-4791-11e8-8750-0a87c0279fe8
             */
            id: string;
            /**
             * @description Merchant name
             * @example Garfish Manly
             */
            businessName: string;
            /**
             * @description ABN
             * @example 90065628864
             */
            ABN: string;
            /**
             * @description full merchant logo
             * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-master.png
             */
            logoMaster: string;
            /**
             * @description thumbnail merchant logo
             * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-thumb.png
             */
            logoThumb: string;
            phoneNumber?: {
                /**
                 * @description International Phone Number
                 * @example +61 2 9977 0707
                 */
                international?: string;
                /**
                 * @description Local Phone Number
                 * @example (02) 9977 0707
                 */
                local?: string;
            };
            /**
             * @description Merchant Website
             * @example http://garfish.com.au/garfish-manly/
             */
            website: string;
        } | null;
        TransactionsPhoneNumber: {
            /**
             * @description International Phone Number
             * @example +61 2 9977 0707
             */
            international?: string;
            /**
             * @description Local Phone Number
             * @example (02) 9977 0707
             */
            local?: string;
        };
        TransactionsSubdivision: {
            /**
             * @description Subdivision Code
             * @example 45
             */
            code?: string;
            /**
             * @description Subdivision Details
             * @example Food and Beverage Services
             */
            title?: string;
        };
        TransactionsSubClass: {
            /**
             * @description SubClass Details
             * @example Cafes and Restaurants
             */
            title?: string;
            /**
             * @description SubClass Code
             * @example 451100
             */
            code?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getAccounts: {
        parameters: {
            query?: {
                /** @description Account filters; account.id, connection.id, institution.id, Only equals (eq) and not equals (ne) operations are currently supported. */
                filter?: string;
            };
            header?: never;
            path: {
                /** @description User identifier */
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns a account with details. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Type of the response, always "list".
                         * @example list
                         */
                        type: string;
                        /** @description Container object, containing account details. */
                        data: {
                            /**
                             * @description Always "account".
                             * @example account
                             */
                            type: string;
                            /**
                             * @description Uniquely identifies the account.
                             * @example s55bf3
                             */
                            id: string;
                            /**
                             * @description Mapped directly from CDR 'nickname'. Represents the user-defined name for the account without fallback to displayName.
                             * @example My Home Loan
                             */
                            name: string;
                            /**
                             * @description Mapped directly from CDR 'displayName'. Represents the institution-defined display name for the account.
                             * @example Hooli Home Loan
                             */
                            displayName: string;
                            /** @description current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call. */
                            depositRate?: string;
                            /** @description The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call. */
                            lendingRate?: string;
                            /** @description The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
                            bsb?: string;
                            /** @description The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
                            unmaskedAccNum?: string;
                            /** @description Date that the account was created (if known). */
                            creationDate?: string;
                            /**
                             * @description The name of the account holder as returned by the institution. No formatting is applied. Returns a string or null when not available.
                             * @example GAVIN BELSON
                             */
                            accountHolder: string | null;
                            /** @description A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number. */
                            maskedNumber?: string;
                            /**
                             * @description Value indicating the number of customers that have ownership of the account, according to the data holder's definition of account ownership. Does not indicate that all account owners are eligible consumers.
                             * @example ONE_PARTY
                             * @enum {string}
                             */
                            accountOwnership: "UNKNOWN" | "ONE_PARTY" | "TWO_PARTY" | "MANY_PARTY" | "OTHER";
                            /**
                             * @description Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed.
                             * @example true
                             */
                            isOwned: boolean;
                            /** @description Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent. */
                            amortisedLimit?: string;
                            /** @description Optional field to indicate if this account is part of a bundle that is providing additional benefit to the customer. */
                            bundleName?: string;
                            /** @description Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards. */
                            purses?: {
                                /** @description The balance available for this additional currency purse. */
                                amount: string;
                                /** @description The currency for the purse. */
                                currency?: string;
                            }[];
                            /**
                             * @description BSB + account number.
                             * @example 600000157441965
                             */
                            accountNo: string;
                            /**
                             * @description Funds that are available to an account holder for withdrawal or other use. This may include funds from an overdraft facility or line of credit. As well as funds classified as the available balance, such as from cleared and existing deposits.
                             * @example 420.28
                             */
                            availableFunds: string | null;
                            /**
                             * @description Amount of funds in the account right now - excluding any pending transactions. For a credit card this would be zero or the minus amount spent.
                             * @example 356.50
                             */
                            balance: string | null;
                            /**
                             * @description Eligible account types are credit-card, loan and mortgage.
                             * @example 400000.00
                             */
                            creditLimit: string | null;
                            /** @description Describes the class (type) of accounts. */
                            class: {
                                /**
                                 * @description Account type
                                 * @example mortgage
                                 * @enum {string}
                                 */
                                type: "transaction" | "savings" | "credit-card" | "mortgage" | "loan" | "investment" | "term-deposit" | "insurance" | "foreign" | "unknown";
                                /**
                                 * @description Product name.
                                 * @example Hooli Home Loan
                                 */
                                product: string;
                            };
                            /**
                             * @description The id of the connection resource that was used to retrieve the account.
                             * @example 8fce3b
                             */
                            connection: string;
                            /**
                             * @description The currency the funds are stored in, using ISO 4217 standard.
                             * @example AUD
                             */
                            currency: string;
                            /**
                             * @description The id of the institution resource the account originated from.
                             * @example AU00000
                             */
                            institution: string;
                            /**
                             * @description Timestamp of last update, UTC, RFC 3339 format e.g. "2017-09-28T13:39:33Z"
                             * @example 2019-09-28T13:39:33Z
                             */
                            lastUpdated: string;
                            /**
                             * @description Account status
                             * @example available
                             * @enum {string}
                             */
                            status: "available" | "unavailable";
                            meta?: {
                                fees?: {
                                    /**
                                     * @description (mandatory) - Name of the fee.
                                     * @example Dishonour fee
                                     */
                                    name: string;
                                    /**
                                     * @description (mandatory) - The type of fee.
                                     * @example EVENT
                                     * @enum {string}
                                     */
                                    feeType: "DEPOSIT" | "EVENT" | "EXIT" | "PAYMENT" | "PERIODIC" | "PURCHASE" | "TRANSACTION" | "UPFRONT" | "VARIABLE" | "WITHDRAWAL";
                                    /**
                                     * @description (conditional) - The amount charged for the fee.
                                     * @example 10.00
                                     */
                                    amount?: string;
                                    /** @description A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                                    balanceRate?: string;
                                    /** @description A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                                    transactionRate?: string;
                                    /** @description A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                                    accruedRate?: string;
                                    /**
                                     * @description (optional) - The indicative frequency with which the fee is calculated on the account.
                                     * @example P1M
                                     */
                                    accrualFrequency?: string;
                                    /** @description The currency the fee will be charged in. Assumes AUD if absent. */
                                    currency?: string;
                                    /** @description Display text providing more information on the fee. */
                                    additionalValue?: string;
                                    /** @description Display text providing more information on the fee. */
                                    additionalInfo?: string;
                                    /** @description Link to a web page with more information on this fee. */
                                    additionalInfoUri?: string;
                                    discounts?: {
                                        /** @description Description of the discount. */
                                        description: string;
                                        /** @description The type of discount. See the next section for an overview of valid values and their meaning. */
                                        discountType: string;
                                        /** @description Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                                        amount?: string;
                                        /** @description A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                                        balanceRate?: string;
                                        /** @description A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                                        transactionRate?: string;
                                        /** @description A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                                        accruedRate?: string;
                                        /** @description A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                                        feeRate?: string;
                                        /** @description Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType. */
                                        additionalValue?: string;
                                        /** @description Display text providing more information on the discount. */
                                        additionalInfo?: string;
                                        /** @description Link to a web page with more information on this discount. */
                                        additionalInfoUri?: string;
                                        /** @description Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY. */
                                        eligibility?: {
                                            /**
                                             * @description The type of the specific eligibility constraint for a discountType.
                                             * @enum {string}
                                             */
                                            discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
                                            /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                                            additionalValue?: string;
                                            /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                                            additionalInfo?: string;
                                            /** @description Link to a web page with more information on this eligibility constraint. */
                                            additionalInfoUri?: string;
                                        };
                                    }[] | null;
                                }[] | null;
                                depositRates?: {
                                    /**
                                     * @description The type of rate (base, bonus, etc).
                                     * @example VARIABLE
                                     * @enum {string}
                                     */
                                    depositRateType: "BONUS" | "BUNDLE_BONUS" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "VARIABLE";
                                    /**
                                     * @description The rate to be applied.
                                     * @example 0.0385
                                     */
                                    rate: string;
                                    /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                    calculationFrequency?: string;
                                    /**
                                     * @description The period after which the calculated amount(s) are 'applied' (i.e. debited or credited) to the account.
                                     * @example P1M
                                     */
                                    applicationFrequency?: string;
                                    tiers?: {
                                        /** @description A display name for the tier. */
                                        name: string;
                                        /**
                                         * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                                         * @enum {string}
                                         */
                                        unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                                        /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                                        minimumValue: number;
                                        /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                                        maximumValue?: number;
                                        /**
                                         * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                                         * @enum {string}
                                         */
                                        rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                                        applicabilityConditions?: {
                                            /** @description Display text providing more information on the condition. */
                                            additionalInfo?: string;
                                            /** @description Link to a web page with more information on this condition. */
                                            additionalInfoUri?: string;
                                        };
                                        /** @description Display text providing more information on the rate tier. */
                                        additionalInfo?: string;
                                        /** @description Link to a web page with more information on this rate tier. */
                                        additionalInfoUri?: string;
                                    }[] | null;
                                    /** @description Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType. */
                                    additionalValue?: string;
                                    /** @description Display text providing more information on the rate. */
                                    additionalInfo?: string;
                                    /** @description Link to a web page with more information on this rate. */
                                    additionalInfoUri?: string;
                                }[] | null;
                                lendingRates?: {
                                    /**
                                     * @description The type of rate (fixed, variable, etc).
                                     * @example PURCHASE
                                     * @enum {string}
                                     */
                                    lendingRateType: "BUNDLE_DISCOUNT_FIXED" | "BUNDLE_DISCOUNT_VARIABLE" | "CASH_ADVANCE" | "DISCOUNT" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "PENALTY" | "PURCHASE" | "VARIABLE";
                                    /**
                                     * @description The rate to be applied.
                                     * @example 0.2024
                                     */
                                    rate: string;
                                    /** @description A comparison rate equivalent for this rate. */
                                    comparisonRate?: string;
                                    /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                    calculationFrequency?: string;
                                    /** @description The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                    applicationFrequency?: string;
                                    /**
                                     * @description When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered.
                                     * @example IN_ADVANCE
                                     * @enum {string}
                                     */
                                    interestPaymentDue?: "IN_ADVANCE" | "IN_ARREARS";
                                    /**
                                     * @description Options in place for repayments. If absent, the lending rate is applicable to all repayment types.
                                     * @example INTEREST_ONLY
                                     * @enum {string}
                                     */
                                    repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                                    /**
                                     * @description The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes.
                                     * @example INVESTMENT
                                     * @enum {string}
                                     */
                                    loanPurpose?: "INVESTMENT" | "OWNER_OCCUPIED";
                                    tiers?: {
                                        /** @description A display name for the tier. */
                                        name: string;
                                        /**
                                         * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                                         * @enum {string}
                                         */
                                        unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                                        /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                                        minimumValue: number;
                                        /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                                        maximumValue?: number;
                                        /**
                                         * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                                         * @enum {string}
                                         */
                                        rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                                        applicabilityConditions?: {
                                            /** @description Display text providing more information on the condition. */
                                            additionalInfo?: string;
                                            /** @description Link to a web page with more information on this condition. */
                                            additionalInfoUri?: string;
                                        };
                                        /** @description Display text providing more information on the rate tier. */
                                        additionalInfo?: string;
                                        /** @description Link to a web page with more information on this rate tier. */
                                        additionalInfoUri?: string;
                                    }[] | null;
                                    /** @description Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType. */
                                    additionalValue?: string;
                                    /** @description Display text providing more information on the rate. */
                                    additionalInfo?: string;
                                    /** @description Link to a web page with more information on this rate. */
                                    additionalInfoUri?: string;
                                }[] | null;
                                termDeposit?: {
                                    /** @description The lodgement date of the original deposit. */
                                    lodgementDate: string;
                                    /** @description Maturity date for the term deposit. */
                                    maturityDate: string;
                                    /** @description Amount to be paid upon maturity. If absent, it implies the amount to paid is variable and cannot currently be calculated. */
                                    maturityAmount?: string;
                                    /** @description If absent assumes AUD. */
                                    maturityCurrency?: string;
                                    /**
                                     * @description Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments.
                                     * @example PAID_OUT_AT_MATURITY
                                     * @enum {string}
                                     */
                                    maturityInstructions: "HOLD_ON_MATURITY" | "PAID_OUT_AT_MATURITY" | "ROLLED_OVER";
                                }[];
                                loan?: {
                                    /**
                                     * @description Start date for the loan.
                                     * @example 2019-10-01
                                     */
                                    startDate?: string;
                                    /**
                                     * @description Date that the loan is due to be repaid in full.
                                     * @example 2045-10-01
                                     */
                                    endDate?: string;
                                    /**
                                     * @description Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST.
                                     * @example PRINCIPAL_AND_INTEREST
                                     * @enum {string}
                                     */
                                    repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                                    /** @description Optional loan value. */
                                    originalLoanAmount?: string;
                                    /** @description If absent assumes AUD. */
                                    originalLoanCurrency?: string;
                                    /** @description Minimum amount of next instalment. */
                                    minInstalmentAmount?: string;
                                    /** @description Next date that an instalment is required. */
                                    nextInstalmentDate?: string;
                                    /** @description If absent assumes AUD. */
                                    minInstalmentCurrency?: string;
                                    /** @description Maximum amount of funds that can be redrawn. If not present, redraw is not available even if the feature exists for the account. */
                                    maxRedraw?: string;
                                    /** @description If absent assumes AUD. */
                                    maxRedrawCurrency?: string;
                                    /** @description Minimum redraw amount. */
                                    minRedraw?: string;
                                    /** @description If absent assumes AUD. */
                                    minRedrawCurrency?: string;
                                    /** @description The expected or required repayment frequency. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                    repaymentFrequency?: string;
                                    /** @description The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation. */
                                    offsetAccountIds?: string[];
                                    /**
                                     * @description Set to true if one or more offset accounts are configured for this loan account.
                                     * @example true
                                     */
                                    offsetAccountEnabled?: boolean;
                                } | null;
                                creditCard?: {
                                    /**
                                     * @description The minimum payment amount due for the next card payment.
                                     * @example 117.00
                                     */
                                    minPaymentAmount: string;
                                    /**
                                     * @description The amount due for the next card payment.
                                     * @example 5847.00
                                     */
                                    paymentDueAmount: string;
                                    /**
                                     * @description If absent assumes AUD.
                                     * @example AUD
                                     */
                                    paymentCurrency?: string;
                                    /**
                                     * @description Date that the next payment for the card is due.
                                     * @example 2023-12-12
                                     */
                                    paymentDueDate: string;
                                };
                                /** @description Array of features available for the product. */
                                features?: {
                                    /**
                                     * @description The type of feature described.
                                     * @enum {string}
                                     */
                                    featureType: "ADDITIONAL_CARDS" | "BALANCE_TRANSFERS" | "BILL_PAYMENT" | "BONUS_REWARDS" | "CARD_ACCESS" | "CASHBACK_OFFER" | "COMPLEMENTARY_PRODUCT_DISCOUNTS" | "DIGITAL_BANKING" | "DIGITAL_WALLET" | "DONATE_INTEREST" | "EXTRA_REPAYMENTS" | "FRAUD_PROTECTION" | "FREE_TXNS" | "FREE_TXNS_ALLOWANCE" | "GUARANTOR" | "INSURANCE" | "INSTALMENT_PLAN" | "INTEREST_FREE" | "INTEREST_FREE_TRANSFERS" | "LOYALTY_PROGRAM" | "NOTIFICATIONS" | "NPP_ENABLED" | "NPP_PAYID" | "OFFSET" | "OTHER" | "OVERDRAFT" | "REDRAW" | "RELATIONSHIP_MANAGEMENT" | "UNLIMITED_TXNS";
                                    /** @description Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of the featureType. */
                                    additionalValue?: string;
                                    /** @description Display text providing more information on the feature. Mandatory if the feature type is set to OTHER. */
                                    additionalInfo?: string;
                                    /** @description Link to a web page with more information on this feature. */
                                    additionalInfoUri?: string;
                                    /**
                                     * @description true if the feature is already activated and false if the feature is available for activation. Defaults to true if absent.
                                     *     > Note: this is an additional field appended to the feature object defined in the Product Reference payload.
                                     *
                                     * @example true
                                     */
                                    isActivated?: boolean;
                                }[] | null;
                                /** @description The addresses for the account to be used for correspondence. */
                                addresses?: {
                                    /**
                                     * @description The type of address object present.
                                     * @example paf
                                     * @enum {string}
                                     */
                                    addressType?: "paf" | "simple";
                                    simple?: {
                                        /** @description Name of the individual or business formatted for inclusion in an address used for physical mail. */
                                        mailingName?: string;
                                        /** @description First line of the standard address object. */
                                        addressLine1: string;
                                        /** @description Second line of the standard address object. */
                                        addressLine2?: string;
                                        /** @description Third line of the standard address object. */
                                        addressLine3?: string;
                                        /** @description Mandatory for Australian addresses. */
                                        postcode?: string;
                                        /** @description Name of the city or locality. */
                                        city: string;
                                        /** @description Free text if the country is not Australia. If country is Australia then must be one of the values defined by the State Type Abbreviation in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT. */
                                        state: string;
                                        /** @description A valid ISO 3166 Alpha-3 country code. Australia (AUS) is assumed if country is not present. */
                                        country?: string;
                                        /** @description Australian address formatted according to the file format defined by the PAF file format. */
                                        paf?: {
                                            /** @description Unique identifier for an address as defined by Australia Post. Also known as Delivery Point Identifier. */
                                            dpid?: string;
                                            /** @description Thoroughfare number for a property (first number in a property ranged address). */
                                            thoroughfareNumber1?: number;
                                            /** @description Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated. */
                                            thoroughfareNumber1Suffix?: string;
                                            /** @description Second thoroughfare number (only used if the property has a ranged address eg 23-25). */
                                            thoroughfareNumber2?: number;
                                            /** @description Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated. */
                                            thoroughfareNumber2Suffix?: string;
                                            /** @description Type of flat or unit for the address. */
                                            flatUnitType?: string;
                                            /** @description Unit number (including suffix, if applicable). */
                                            flatUnitNumber?: string;
                                            /** @description Type of floor or level for the address. */
                                            floorLevelType?: string;
                                            /** @description Floor or level number (including alpha characters). */
                                            floorLevelNumber?: string;
                                            /** @description Allotment number for the address. */
                                            lotNumber?: string;
                                            /** @description Building/Property name 1. */
                                            buildingName1?: string;
                                            /** @description Building/Property name 2. */
                                            buildingName2?: string;
                                            /** @description The name of the street. */
                                            streetName?: string;
                                            /** @description The street type. Valid enumeration defined by Australia Post PAF code file. */
                                            streetType?: string;
                                            /** @description The street type suffix. Valid enumeration defined by Australia Post PAF code file. */
                                            streetSuffix?: string;
                                            /** @description Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file. */
                                            postalDeliveryType?: string;
                                            /** @description Postal delivery number if the address is a postal delivery type. */
                                            postalDeliveryNumber?: number;
                                            /** @description Postal delivery number prefix related to the postal delivery number. */
                                            postalDeliveryNumberPrefix?: string;
                                            /** @description Postal delivery number suffix related to the postal delivery number. */
                                            postalDeliveryNumberSuffix?: string;
                                            /** @description Full name of locality. */
                                            localityName: string;
                                            /** @description Postcode for the locality. */
                                            postcode: string;
                                            /** @description State in which the address belongs. Valid enumeration defined by Australia Post PAF code file State Type Abbreviation. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT. */
                                            state: string;
                                        };
                                    };
                                }[] | null;
                            };
                            /** @description An array of date intervals indicating the coverage of the transaction data relating to the account.
                             *     Will return a single element for accounts sourced from a single bank connection.
                             *     Will return multiple elements in cases where there have been multiple PDF/CSV uploads for an account. */
                            transactionIntervals: {
                                /**
                                 * @description Date of first transaction on this account
                                 * @example 2018-07-01
                                 */
                                from: string;
                                /**
                                 * @description Date of last transaction on this account
                                 * @example 2018-12-30
                                 */
                                to: string;
                            }[];
                        }[];
                        /**
                         * ResourceAccountLink
                         * @description Link object containing a link to the resource, self reference.
                         */
                        links: {
                            /**
                             * @description URL of the resource.
                             * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                             */
                            self: string;
                            /**
                             * @description transactions link to the transactions associated with this account.
                             * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
                             */
                            transactions?: string;
                            /**
                             * @description connection associated to User.
                             * @example https://au-api.basiq.io/users/cd6fbd92/connections/321312asa
                             */
                            connection?: string;
                            /**
                             * @description institution link to the institution associated with this account.
                             * @example https://au-api.basiq.io/institutions/AU00000
                             */
                            institution?: string;
                            /** @example [] */
                            statements?: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
        };
    };
    getAccount: {
        parameters: {
            query?: {
                /** @description Account filters; account.id, connection.id, institution.id, Only equals (eq) and not equals (ne) operations are currently supported. */
                filter?: string;
            };
            header?: never;
            path: {
                /** @description User identifier */
                userId: string;
                /** @description Account identifier */
                accountId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns a account with details. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "account".
                         * @example account
                         */
                        type: string;
                        /**
                         * @description Uniquely identifies the account.
                         * @example s55bf3
                         */
                        id: string;
                        /**
                         * @description Mapped directly from CDR 'nickname'. Represents the user-defined name for the account without fallback to displayName.
                         * @example My Home Loan
                         */
                        name: string;
                        /**
                         * @description Mapped directly from CDR 'displayName'. Represents the institution-defined display name for the account.
                         * @example Hooli Home Loan
                         */
                        displayName: string;
                        /** @description current rate to calculate interest earned being applied to deposit balances as it stands at the time of the API call. */
                        depositRate?: string;
                        /** @description The current rate to calculate interest payable being applied to lending balances as it stands at the time of the API call. */
                        lendingRate?: string;
                        /** @description The unmasked BSB for the account. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
                        bsb?: string;
                        /** @description The unmasked account number for the account. Should not be supplied if the account number is a PAN requiring PCI compliance. Is expected to be formatted as digits only with leading zeros included and no punctuation or spaces. */
                        unmaskedAccNum?: string;
                        /** @description Date that the account was created (if known). */
                        creationDate?: string;
                        /**
                         * @description The name of the account holder as returned by the institution. No formatting is applied. Returns a string or null when not available.
                         * @example GAVIN BELSON
                         */
                        accountHolder: string | null;
                        /** @description A masked version of the account. Whether BSB/Account Number, Credit Card PAN or another number. */
                        maskedNumber?: string;
                        /**
                         * @description Value indicating the number of customers that have ownership of the account, according to the data holder's definition of account ownership. Does not indicate that all account owners are eligible consumers.
                         * @example ONE_PARTY
                         * @enum {string}
                         */
                        accountOwnership: "UNKNOWN" | "ONE_PARTY" | "TWO_PARTY" | "MANY_PARTY" | "OTHER";
                        /**
                         * @description Flag indicating that the customer associated with the authorisation is an owner of the account. Does not indicate sole ownership, however. If not present then 'true' is assumed.
                         * @example true
                         */
                        isOwned: boolean;
                        /** @description Object representing the available limit amortised according to payment schedule. Assumed to be zero if absent. */
                        amortisedLimit?: string;
                        /** @description Optional field to indicate if this account is part of a bundle that is providing additional benefit to the customer. */
                        bundleName?: string;
                        /** @description Optional array of balances for the account in other currencies. Included to support accounts that support multi-currency purses such as Travel Cards. */
                        purses?: {
                            /** @description The balance available for this additional currency purse. */
                            amount: string;
                            /** @description The currency for the purse. */
                            currency?: string;
                        }[];
                        /**
                         * @description BSB + account number.
                         * @example 600000157441965
                         */
                        accountNo: string;
                        /**
                         * @description Funds that are available to an account holder for withdrawal or other use. This may include funds from an overdraft facility or line of credit. As well as funds classified as the available balance, such as from cleared and existing deposits.
                         * @example 420.28
                         */
                        availableFunds: string | null;
                        /**
                         * @description Amount of funds in the account right now - excluding any pending transactions. For a credit card this would be zero or the minus amount spent.
                         * @example 356.50
                         */
                        balance: string | null;
                        /**
                         * @description Eligible account types are credit-card, loan and mortgage.
                         * @example 400000.00
                         */
                        creditLimit: string | null;
                        /** @description Describes the class(type) of accounts. - transaction - savings - credit-card - mortgage - loan - investment - term-deposit - insurance - foreign - unknown */
                        class: {
                            /**
                             * @description Account type
                             * @example mortgage
                             */
                            type: string;
                            /**
                             * @description Product name.
                             * @example Hooli Home Loan
                             */
                            product: string;
                        };
                        /**
                         * @description The id of the connection resource that was used to retrieve the account.
                         * @example 8fce3b
                         */
                        connection: string;
                        /**
                         * @description The currency the funds are stored in, using ISO 4217 standard.
                         * @example AUD
                         */
                        currency: string;
                        /**
                         * @description The id of the institution resource the account originated from.
                         * @example AU00000
                         */
                        institution: string;
                        /**
                         * @description Timestamp of last update, UTC, RFC 3339 format e.g. "2017-09-28T13:39:33Z"
                         * @example 2019-09-28T13:39:33Z
                         */
                        lastUpdated: string;
                        /**
                         * @description Account status
                         * @example available
                         * @enum {string}
                         */
                        status: "available" | "unavailable";
                        meta?: {
                            fees?: {
                                /**
                                 * @description (mandatory) - Name of the fee.
                                 * @example Dishonour fee
                                 */
                                name: string;
                                /**
                                 * @description (mandatory) - The type of fee.
                                 * @example EVENT
                                 * @enum {string}
                                 */
                                feeType: "DEPOSIT" | "EVENT" | "EXIT" | "PAYMENT" | "PERIODIC" | "PURCHASE" | "TRANSACTION" | "UPFRONT" | "VARIABLE" | "WITHDRAWAL";
                                /**
                                 * @description (conditional) - The amount charged for the fee.
                                 * @example 10.00
                                 */
                                amount?: string;
                                /** @description A fee rate calculated based on a proportion of the balance. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                                balanceRate?: string;
                                /** @description A fee rate calculated based on a proportion of a transaction. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                                transactionRate?: string;
                                /** @description A fee rate calculated based on a proportion of the calculated interest accrued on the account. One of amount, balanceRate, transactionRate and accruedRate is mandatory unless the feeType "VARIABLE" is supplied. */
                                accruedRate?: string;
                                /**
                                 * @description (optional) - The indicative frequency with which the fee is calculated on the account.
                                 * @example P1M
                                 */
                                accrualFrequency?: string;
                                /** @description The currency the fee will be charged in. Assumes AUD if absent. */
                                currency?: string;
                                /** @description Display text providing more information on the fee. */
                                additionalValue?: string;
                                /** @description Display text providing more information on the fee. */
                                additionalInfo?: string;
                                /** @description Link to a web page with more information on this fee. */
                                additionalInfoUri?: string;
                                discounts?: {
                                    /** @description Description of the discount. */
                                    description: string;
                                    /** @description The type of discount. See the next section for an overview of valid values and their meaning. */
                                    discountType: string;
                                    /** @description Dollar value of the discount. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                                    amount?: string;
                                    /** @description A discount rate calculated based on a proportion of the balance. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                                    balanceRate?: string;
                                    /** @description A discount rate calculated based on a proportion of a transaction. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. */
                                    transactionRate?: string;
                                    /** @description A discount rate calculated based on a proportion of the calculated interest accrued on the account. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                                    accruedRate?: string;
                                    /** @description A discount rate calculated based on a proportion of the fee to which this discount is attached. Note that the currency of the fee discount is expected to be the same as the currency of the fee itself. One of amount, balanceRate, transactionRate, accruedRate and feeRate is mandatory. Unless noted in additionalInfo, assumes the application and calculation frequency are the same as the corresponding fee. */
                                    feeRate?: string;
                                    /** @description Generic field containing additional information relevant to the discountType specified. Whether mandatory or not is dependent on the value of discountType. */
                                    additionalValue?: string;
                                    /** @description Display text providing more information on the discount. */
                                    additionalInfo?: string;
                                    /** @description Link to a web page with more information on this discount. */
                                    additionalInfoUri?: string;
                                    /** @description Eligibility constraints that apply to this discount. Mandatory if discountType is ELIGIBILITY_ONLY. */
                                    eligibility?: {
                                        /**
                                         * @description The type of the specific eligibility constraint for a discountType.
                                         * @enum {string}
                                         */
                                        discountEligibilityType: "BUSINESS" | "EMPLOYMENT_STATUS" | "INTRODUCTORY" | "MAX_AGE" | "MIN_AGE" | "MIN_INCOME" | "MIN_TURNOVER" | "NATURAL_PERSON" | "OTHER" | "PENSION_RECIPIENT" | "RESIDENCY_STATUS" | "STAFF" | "STUDENT";
                                        /** @description Generic field containing additional information relevant to the discountEligibilityType specified. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                                        additionalValue?: string;
                                        /** @description Display text providing more information on this eligibility constraint. Whether mandatory or not is dependent on the value of discountEligibilityType. */
                                        additionalInfo?: string;
                                        /** @description Link to a web page with more information on this eligibility constraint. */
                                        additionalInfoUri?: string;
                                    };
                                }[] | null;
                            }[] | null;
                            depositRates?: {
                                /**
                                 * @description The type of rate (base, bonus, etc).
                                 * @example VARIABLE
                                 * @enum {string}
                                 */
                                depositRateType: "BONUS" | "BUNDLE_BONUS" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "VARIABLE";
                                /**
                                 * @description The rate to be applied.
                                 * @example 0.0385
                                 */
                                rate: string;
                                /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                calculationFrequency?: string;
                                /**
                                 * @description The period after which the calculated amount(s) are 'applied' (i.e. debited or credited) to the account.
                                 * @example P1M
                                 */
                                applicationFrequency?: string;
                                tiers?: {
                                    /** @description A display name for the tier. */
                                    name: string;
                                    /**
                                     * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                                     * @enum {string}
                                     */
                                    unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                                    /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                                    minimumValue: number;
                                    /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                                    maximumValue?: number;
                                    /**
                                     * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                                     * @enum {string}
                                     */
                                    rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                                    applicabilityConditions?: {
                                        /** @description Display text providing more information on the condition. */
                                        additionalInfo?: string;
                                        /** @description Link to a web page with more information on this condition. */
                                        additionalInfoUri?: string;
                                    };
                                    /** @description Display text providing more information on the rate tier. */
                                    additionalInfo?: string;
                                    /** @description Link to a web page with more information on this rate tier. */
                                    additionalInfoUri?: string;
                                }[] | null;
                                /** @description Generic field containing additional information relevant to the lendingRateType specified. Whether mandatory or not is dependent on the value of lendingRateType. */
                                additionalValue?: string;
                                /** @description Display text providing more information on the rate. */
                                additionalInfo?: string;
                                /** @description Link to a web page with more information on this rate. */
                                additionalInfoUri?: string;
                            }[] | null;
                            lendingRates?: {
                                /**
                                 * @description The type of rate (fixed, variable, etc).
                                 * @example PURCHASE
                                 * @enum {string}
                                 */
                                lendingRateType: "BUNDLE_DISCOUNT_FIXED" | "BUNDLE_DISCOUNT_VARIABLE" | "CASH_ADVANCE" | "DISCOUNT" | "FIXED" | "FLOATING" | "INTRODUCTORY" | "MARKET_LINKED" | "PENALTY" | "PURCHASE" | "VARIABLE";
                                /**
                                 * @description The rate to be applied.
                                 * @example 0.2024
                                 */
                                rate: string;
                                /** @description A comparison rate equivalent for this rate. */
                                comparisonRate?: string;
                                /** @description The period after which the rate is applied to the balance to calculate the amount due for the period. Calculation of the amount is often daily (as balances may change) but accumulated until the total amount is 'applied' to the account (see applicationFrequency). Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                calculationFrequency?: string;
                                /** @description The period after which the calculated amount(s) (see calculationFrequency) are 'applied' (i.e. debited or credited) to the account. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                applicationFrequency?: string;
                                /**
                                 * @description When loan payments are due to be paid within each period. The investment benefit of earlier payments affect the rate that can be offered.
                                 * @example IN_ADVANCE
                                 * @enum {string}
                                 */
                                interestPaymentDue?: "IN_ADVANCE" | "IN_ARREARS";
                                /**
                                 * @description Options in place for repayments. If absent, the lending rate is applicable to all repayment types.
                                 * @example INTEREST_ONLY
                                 * @enum {string}
                                 */
                                repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                                /**
                                 * @description The reason for taking out the loan. If absent, the lending rate is applicable to all loan purposes.
                                 * @example INVESTMENT
                                 * @enum {string}
                                 */
                                loanPurpose?: "INVESTMENT" | "OWNER_OCCUPIED";
                                tiers?: {
                                    /** @description A display name for the tier. */
                                    name: string;
                                    /**
                                     * @description The unit of measure that applies to the minimumValue and maximumValue values e.g. a DOLLAR amount. PERCENT (in the case of loan-to-value ratio or LVR). Tier term period representing a discrete number of MONTH's or DAY's (in the case of term deposit tiers).
                                     * @enum {string}
                                     */
                                    unitOfMeasure: "DAY" | "DOLLAR" | "MONTH" | "PERCENT";
                                    /** @description The number of unitOfMeasure units that form the lower bound of the tier. The tier should be inclusive of this value. */
                                    minimumValue: number;
                                    /** @description The number of unitOfMeasure units that form the upper bound of the tier or band. For a tier with a discrete value (as opposed to a range of values e.g. 1 month) this must be the same as minimumValue. Where this is the same as the minimumValue value of the next-higher tier the referenced tier should be exclusive of this value. For example a term deposit of 2 months falls into the upper tier of the following tiers: (1 - 2 months, 2 - 3 months). If absent the tier's range has no upper bound..  */
                                    maximumValue?: number;
                                    /**
                                     * @description The method used to calculate the amount to be applied using one or more tiers. A single rate may be applied to the entire balance or each applicable tier rate is applied to the portion of the balance that falls into that tier (referred to as 'bands' or 'steps').
                                     * @enum {string}
                                     */
                                    rateApplicationMethod?: "PER_TIER" | "WHOLE_BALANCE";
                                    applicabilityConditions?: {
                                        /** @description Display text providing more information on the condition. */
                                        additionalInfo?: string;
                                        /** @description Link to a web page with more information on this condition. */
                                        additionalInfoUri?: string;
                                    };
                                    /** @description Display text providing more information on the rate tier. */
                                    additionalInfo?: string;
                                    /** @description Link to a web page with more information on this rate tier. */
                                    additionalInfoUri?: string;
                                }[] | null;
                                /** @description Generic field containing additional information relevant to the depositRateType specified. Whether mandatory or not is dependent on the value of depositRateType. */
                                additionalValue?: string;
                                /** @description Display text providing more information on the rate. */
                                additionalInfo?: string;
                                /** @description Link to a web page with more information on this rate. */
                                additionalInfoUri?: string;
                            }[] | null;
                            termDeposit?: {
                                /** @description The lodgement date of the original deposit. */
                                lodgementDate: string;
                                /** @description Maturity date for the term deposit. */
                                maturityDate: string;
                                /** @description Amount to be paid upon maturity. If absent, it implies the amount to paid is variable and cannot currently be calculated. */
                                maturityAmount?: string;
                                /** @description If absent assumes AUD. */
                                maturityCurrency?: string;
                                /**
                                 * @description Current instructions on action to be taken at maturity. This includes default actions that may be specified in the terms and conditions for the product e.g. roll-over to the same term and frequency of interest payments.
                                 * @example PAID_OUT_AT_MATURITY
                                 * @enum {string}
                                 */
                                maturityInstructions: "HOLD_ON_MATURITY" | "PAID_OUT_AT_MATURITY" | "ROLLED_OVER";
                            }[];
                            loan?: {
                                /**
                                 * @description Start date for the loan.
                                 * @example 2019-10-01
                                 */
                                startDate?: string;
                                /**
                                 * @description Date that the loan is due to be repaid in full.
                                 * @example 2045-10-01
                                 */
                                endDate?: string;
                                /**
                                 * @description Options in place for repayments. If absent defaults to PRINCIPAL_AND_INTEREST.
                                 * @example PRINCIPAL_AND_INTEREST
                                 * @enum {string}
                                 */
                                repaymentType?: "INTEREST_ONLY" | "PRINCIPAL_AND_INTEREST";
                                /** @description Optional loan value. */
                                originalLoanAmount?: string;
                                /** @description If absent assumes AUD. */
                                originalLoanCurrency?: string;
                                /** @description Minimum amount of next instalment. */
                                minInstalmentAmount?: string;
                                /** @description Next date that an instalment is required. */
                                nextInstalmentDate?: string;
                                /** @description If absent assumes AUD. */
                                minInstalmentCurrency?: string;
                                /** @description Maximum amount of funds that can be redrawn. If not present, redraw is not available even if the feature exists for the account. */
                                maxRedraw?: string;
                                /** @description If absent assumes AUD. */
                                maxRedrawCurrency?: string;
                                /** @description Minimum redraw amount. */
                                minRedraw?: string;
                                /** @description If absent assumes AUD. */
                                minRedrawCurrency?: string;
                                /** @description The expected or required repayment frequency. Formatted according to ISO 8601 Durations (excludes recurrence syntax). */
                                repaymentFrequency?: string;
                                /** @description The accountIDs of the configured offset accounts attached to this loan. Only offset accounts that can be accessed under the current authorisation should be included. It is expected behaviour that offsetAccountEnabled is set to true but the offsetAccountIds field is absent or empty. This represents a situation where an offset account exists but details can not be accessed under the current authorisation. */
                                offsetAccountIds?: string[];
                                /**
                                 * @description Set to true if one or more offset accounts are configured for this loan account.
                                 * @example true
                                 */
                                offsetAccountEnabled?: boolean;
                            } | null;
                            creditCard?: {
                                /**
                                 * @description The minimum payment amount due for the next card payment.
                                 * @example 117.00
                                 */
                                minPaymentAmount: string;
                                /**
                                 * @description The amount due for the next card payment.
                                 * @example 5847.00
                                 */
                                paymentDueAmount: string;
                                /**
                                 * @description If absent assumes AUD.
                                 * @example AUD
                                 */
                                paymentCurrency?: string;
                                /**
                                 * @description Date that the next payment for the card is due.
                                 * @example 2023-12-12
                                 */
                                paymentDueDate: string;
                            };
                            /** @description Array of features available for the product. */
                            features?: {
                                /**
                                 * @description The type of feature described.
                                 * @enum {string}
                                 */
                                featureType: "ADDITIONAL_CARDS" | "BALANCE_TRANSFERS" | "BILL_PAYMENT" | "BONUS_REWARDS" | "CARD_ACCESS" | "CASHBACK_OFFER" | "COMPLEMENTARY_PRODUCT_DISCOUNTS" | "DIGITAL_BANKING" | "DIGITAL_WALLET" | "DONATE_INTEREST" | "EXTRA_REPAYMENTS" | "FRAUD_PROTECTION" | "FREE_TXNS" | "FREE_TXNS_ALLOWANCE" | "GUARANTOR" | "INSURANCE" | "INSTALMENT_PLAN" | "INTEREST_FREE" | "INTEREST_FREE_TRANSFERS" | "LOYALTY_PROGRAM" | "NOTIFICATIONS" | "NPP_ENABLED" | "NPP_PAYID" | "OFFSET" | "OTHER" | "OVERDRAFT" | "REDRAW" | "RELATIONSHIP_MANAGEMENT" | "UNLIMITED_TXNS";
                                /** @description Generic field containing additional information relevant to the featureType specified. Whether mandatory or not is dependent on the value of the featureType. */
                                additionalValue?: string;
                                /** @description Display text providing more information on the feature. Mandatory if the feature type is set to OTHER. */
                                additionalInfo?: string;
                                /** @description Link to a web page with more information on this feature. */
                                additionalInfoUri?: string;
                                /**
                                 * @description true if the feature is already activated and false if the feature is available for activation. Defaults to true if absent.
                                 *     > Note: this is an additional field appended to the feature object defined in the Product Reference payload.
                                 *
                                 * @example true
                                 */
                                isActivated?: boolean;
                            }[] | null;
                            /** @description The addresses for the account to be used for correspondence. */
                            addresses?: {
                                /**
                                 * @description The type of address object present.
                                 * @example paf
                                 * @enum {string}
                                 */
                                addressType?: "paf" | "simple";
                                simple?: {
                                    /** @description Name of the individual or business formatted for inclusion in an address used for physical mail. */
                                    mailingName?: string;
                                    /** @description First line of the standard address object. */
                                    addressLine1: string;
                                    /** @description Second line of the standard address object. */
                                    addressLine2?: string;
                                    /** @description Third line of the standard address object. */
                                    addressLine3?: string;
                                    /** @description Mandatory for Australian addresses. */
                                    postcode?: string;
                                    /** @description Name of the city or locality. */
                                    city: string;
                                    /** @description Free text if the country is not Australia. If country is Australia then must be one of the values defined by the State Type Abbreviation in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT. */
                                    state: string;
                                    /** @description A valid ISO 3166 Alpha-3 country code. Australia (AUS) is assumed if country is not present. */
                                    country?: string;
                                    /** @description Australian address formatted according to the file format defined by the PAF file format. */
                                    paf?: {
                                        /** @description Unique identifier for an address as defined by Australia Post. Also known as Delivery Point Identifier. */
                                        dpid?: string;
                                        /** @description Thoroughfare number for a property (first number in a property ranged address). */
                                        thoroughfareNumber1?: number;
                                        /** @description Suffix for the thoroughfare number. Only relevant is thoroughfareNumber1 is populated. */
                                        thoroughfareNumber1Suffix?: string;
                                        /** @description Second thoroughfare number (only used if the property has a ranged address eg 23-25). */
                                        thoroughfareNumber2?: number;
                                        /** @description Suffix for the second thoroughfare number. Only relevant is thoroughfareNumber2 is populated. */
                                        thoroughfareNumber2Suffix?: string;
                                        /** @description Type of flat or unit for the address. */
                                        flatUnitType?: string;
                                        /** @description Unit number (including suffix, if applicable). */
                                        flatUnitNumber?: string;
                                        /** @description Type of floor or level for the address. */
                                        floorLevelType?: string;
                                        /** @description Floor or level number (including alpha characters). */
                                        floorLevelNumber?: string;
                                        /** @description Allotment number for the address. */
                                        lotNumber?: string;
                                        /** @description Building/Property name 1. */
                                        buildingName1?: string;
                                        /** @description Building/Property name 2. */
                                        buildingName2?: string;
                                        /** @description The name of the street. */
                                        streetName?: string;
                                        /** @description The street type. Valid enumeration defined by Australia Post PAF code file. */
                                        streetType?: string;
                                        /** @description The street type suffix. Valid enumeration defined by Australia Post PAF code file. */
                                        streetSuffix?: string;
                                        /** @description Postal delivery type. (eg. PO BOX). Valid enumeration defined by Australia Post PAF code file. */
                                        postalDeliveryType?: string;
                                        /** @description Postal delivery number if the address is a postal delivery type. */
                                        postalDeliveryNumber?: number;
                                        /** @description Postal delivery number prefix related to the postal delivery number. */
                                        postalDeliveryNumberPrefix?: string;
                                        /** @description Postal delivery number suffix related to the postal delivery number. */
                                        postalDeliveryNumberSuffix?: string;
                                        /** @description Full name of locality. */
                                        localityName: string;
                                        /** @description Postcode for the locality. */
                                        postcode: string;
                                        /** @description State in which the address belongs. Valid enumeration defined by Australia Post PAF code file State Type Abbreviation. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT. */
                                        state: string;
                                    };
                                };
                            }[] | null;
                        };
                        /** @description An array of date intervals indicating the coverage of the transaction data relating to the account.
                         *     Will return a single element for accounts sourced from a single bank connection.
                         *     Will return multiple elements in cases where there have been multiple PDF/CSV uploads for an account. */
                        transactionIntervals: {
                            /**
                             * @description Date of first transaction on this account
                             * @example 2018-07-01
                             */
                            from: string;
                            /**
                             * @description Date of last transaction on this account
                             * @example 2018-12-30
                             */
                            to: string;
                        }[];
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
        };
    };
    getTransactions: {
        parameters: {
            query?: {
                /** @description This represents the maximum number of items that may be included in the response (maximum of 500). Note that by default 500 items are returned if this value is not specified. */
                limit?: number;
                /** @description Transaction filters; account.id, transaction.postDate, transaction.status, institution.id, transaction.direction, transaction.class */
                filter?: string;
            };
            header?: never;
            path: {
                /** @description User identifier. */
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns a paginated list with a data property that contains an array of transactions. Each entry in the array is a separate object. If no data is returned, the resulting array will be empty.  */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Value is "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * Format: int64
                         * @description Count of the transactions in the response.
                         * @example 100
                         */
                        count: number;
                        /**
                         * Format: int64
                         * @example 500
                         */
                        size: number;
                        data: {
                            /**
                             * @description Value is "transaction".
                             * @example transaction
                             */
                            type: string;
                            /**
                             * @description Uniquely identifies the transaction for this connection. Note that when a connection is refreshed pending transactions will receive new id's, whilst posted transactions will receive the same id's as before the refresh.
                             * @example d3de1ca1
                             */
                            id: string;
                            /**
                             * @description Identifies if a transaction is pending or posted. A pending transaction is an approved debit or credit transaction that has not been fully processed yet (i.e. has not been posted). Note that pending transactions are not available for all institutions.
                             * @example posted
                             * @enum {string}
                             */
                            status: "pending" | "posted";
                            /** @description The transaction description as submitted by the institution. */
                            description: string;
                            /** @description The reference for the transaction provided by the originating institution. */
                            reference: string;
                            /**
                             * @description Transaction amount. Outgoing funds are expressed as negative values.
                             * @example 123.12
                             */
                            amount: string;
                            /**
                             * @description Standard 3 character currency codes as per ISO-4217.
                             * @enum {string}
                             */
                            currency: "AUD" | "USD" | "GBP";
                            /**
                             * @description The id of the account resource the transaction belongs to.
                             * @example d3de1ca1
                             */
                            account: string;
                            /**
                             * @description Value of the account balance at time the transaction was completed.
                             * @example 123.12
                             */
                            balance?: string;
                            /**
                             * @description Identifies if the transaction is of debit or credit type.
                             * @example debit
                             * @enum {string}
                             */
                            direction: "debit" | "credit";
                            /**
                             * @description Describes the class(type) of transaction.
                             * @example payment
                             * @enum {string}
                             */
                            class: "bank-fee" | "payment" | "cash-withdrawal" | "transfer" | "loan-interest" | "refund" | "direct-credit" | "interest" | "loan-repayment";
                            /**
                             * @description The id of the institution resource the transaction originated from.
                             * @example AU00000
                             */
                            institution: string;
                            /**
                             * @description The id of the connection resource that was used to retrieve the transaction.
                             * @example d3de1ca1
                             */
                            connection: string;
                            /**
                             * @description Date that the user executed the transaction as provided by the institution. Note that not all transactions provide this value (varies by institution) e.g. "2017-11-10T00:00:00Z"
                             * @example null
                             */
                            transactionDate: string;
                            paymentDetails?: {
                                bpay?: {
                                    /** @description BPAY Biller Code for the transaction. */
                                    billerCode?: string;
                                    /** @description Name of the BPAY biller for the transaction. */
                                    billerName?: string;
                                    /** @description CRN for the transaction. */
                                    crn?: string;
                                };
                                /** @description 6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.
                                 *      */
                                apcaNumber?: string;
                            };
                            /**
                             * @description Date the transaction was posted as provided by the institution. This value is null if the record is pending. e.g. "2017-11-10T21:46:44Z" or 2017-11-10T00:00:00Z.
                             * @example 2018-11-02T00:00:00Z
                             */
                            postDate: string;
                            /** @description The subClass attribute will only return values for payment transactions (i.e. will be empty for all others) plus [new] bank fee transactions for those relating to account conduct such as account overdrawn and direct debit dishonours. */
                            subClass: {
                                /**
                                 * @description code
                                 * @example 722
                                 */
                                code?: string;
                                /**
                                 * @description SubClass title
                                 * @example Cafes and Restaurants
                                 */
                                title?: string;
                            };
                            enrich: {
                                location: {
                                    /**
                                     * @description Country
                                     * @example Australia
                                     */
                                    country?: string;
                                    /**
                                     * @description Address
                                     * @example 1/39 E Esplanade, Manly NSW 2095
                                     */
                                    formattedAddress?: string;
                                    geometry?: {
                                        /**
                                         * @description Latitude
                                         * @example -33.79988520000001
                                         */
                                        lat?: string;
                                        /**
                                         * @description Longitude
                                         * @example 151.2858021
                                         */
                                        lng?: string;
                                    };
                                    /**
                                     * @description Postal Code
                                     * @example 2095
                                     */
                                    postalCode?: string;
                                    /**
                                     * @description Route Name
                                     * @example E Esplanade
                                     */
                                    route?: string;
                                    /**
                                     * @description Route Number
                                     * @example 29
                                     */
                                    routeNo?: string;
                                    /**
                                     * @description State
                                     * @example NSW
                                     */
                                    state?: string;
                                    /**
                                     * @description Suburb
                                     * @example Manly
                                     */
                                    suburb?: string;
                                } | null;
                                cleanDescription: string;
                                /** @description This field contains an array of strings, each representing a specific tag for the transaction. The format of each string should be `tag_name:tag_value`, where `tag_name` defines the type of transaction (e.g., `card`, `income`, `mortgage`), and `tag_value` provides additional details (e.g., "card:4615"). The tags help classify and identify transactions based on various criteria.
                                 *
                                 *           - card:4615
                                 *           - conduct:card
                                 *           - conduct:overdrawn
                                 *           - conduct:cheque
                                 *           - conduct:atm
                                 *           - conduct:currency
                                 *           - conduct:late
                                 *           - conduct:admin
                                 *           - conduct:dishonour
                                 *           - conduct:interest
                                 *           - governmentPayment:centrelink
                                 *           - governmentPayment:centrelinkCarers
                                 *           - governmentPayment:crisisSupport
                                 *           - governmentPayment:education
                                 *           - governmentPayment:familyAllowance
                                 *           - governmentPayment:jobseekerPymt
                                 *           - governmentPayment:medicare
                                 *           - governmentPayment:newstart
                                 *           - governmentPayment:pension
                                 *           - governmentPayment:rentalAssistance
                                 *           - governmentPayment:vetAffairs
                                 *           - governmentPayment:youthAllowance
                                 *           - income:childSupport
                                 *           - income:insurance
                                 *           - income:investment
                                 *           - income:rent
                                 *           - income:salary
                                 *           - income:superannuation
                                 *           - liability:afterpay
                                 *           - liability:arl collect pty ltd
                                 *           - liability:australian recoveries
                                 *           - liability:axess
                                 *           - liability:azora
                                 *           - liability:baycorp
                                 *           - liability:beforepay
                                 *           - liability:brighte
                                 *           - liability:bundll
                                 *           - liability:cash converters
                                 *           - liability:cash direct
                                 *           - liability:cashngo
                                 *           - liability:cash stop
                                 *           - liability:cash train
                                 *           - liability:ccc
                                 *           - liability:cfmg pty ltd
                                 *           - liability:charter mercantile
                                 *           - liability:cigno
                                 *           - liability:collectau
                                 *           - liability:collection house
                                 *           - liability:complete credit solutions
                                 *           - liability:credit collection services
                                 *           - liability:credit corp
                                 *           - liability:creditline
                                 *           - liability:deferit
                                 *           - liability:dun and bradstreet
                                 *           - liability:earnd
                                 *           - liability:edstart
                                 *           - liability:finance one
                                 *           - liability:fundo
                                 *           - liability:fupay
                                 *           - liability:gem visa
                                 *           - liability:humm
                                 *           - liability:indebted
                                 *           - liability:klarna
                                 *           - liability:latitude
                                 *           - liability:laybuy
                                 *           - liability:limepay
                                 *           - liability:lion finance
                                 *           - liability:money3
                                 *           - liability:moneyloop
                                 *           - liability:mypaynow
                                 *           - liability:nimble
                                 *           - liability:nine25
                                 *           - liability:openpay
                                 *           - liability:panthera
                                 *           - liability:payitlater
                                 *           - liability:payright
                                 *           - liability:pioneer credit
                                 *           - liability:plenti
                                 *           - liability:probe
                                 *           - liability:q card
                                 *           - liability:quickapay
                                 *           - liability:spotmenow
                                 *           - liability:sunshine loans
                                 *           - liability:tapmypay
                                 *           - liability:wagetap
                                 *           - liability:wallet wizard
                                 *           - liability:zip pay
                                 *           - third-party:apple pay
                                 *           - third-party:google
                                 *           - third-party:paypal
                                 *           - third-party:sp
                                 *           - third-party:sq
                                 *           - creditCard:creditCard
                                 *           - expense:rent
                                 *           - loan:loan repayment
                                 *           - mortgage:afg home loans
                                 *           - mortgage:aims
                                 *           - mortgage:amo group
                                 *           - mortgage:athena
                                 *           - mortgage:aussie
                                 *           - mortgage:bluestone
                                 *           - mortgage:clickloans
                                 *           - mortgage:emoney
                                 *           - mortgage:express reverse mortgage
                                 *           - mortgage:firstmac
                                 *           - mortgage:fox symes
                                 *           - mortgage:freedom lend
                                 *           - mortgage:freedom loans
                                 *           - mortgage:funding
                                 *           - mortgage:heartland reverse mortgages
                                 *           - mortgage:homeloans
                                 *           - mortgage:homestar
                                 *           - mortgage:homestart
                                 *           - mortgage:household capital
                                 *           - mortgage:illawarra home loans
                                 *           - mortgage:keystart
                                 *           - mortgage:la trobe financial
                                 *           - mortgage:liberty financial
                                 *           - mortgage:loans
                                 *           - mortgage:mortgage house
                                 *           - mortgage:mortgage offset
                                 *           - mortgage:mortgageport
                                 *           - mortgage:mortgage repayment
                                 *           - mortgage:onetwo
                                 *           - mortgage:online home loans
                                 *           - mortgage:pacific mortgage group
                                 *           - mortgage:pepper money
                                 *           - mortgage:qantas money
                                 *           - mortgage:reduce home loans
                                 *           - mortgage:resi
                                 *           - mortgage:resimac
                                 *           - mortgage:sucasa
                                 *           - mortgage:switzer home loans
                                 *           - mortgage:ticToc
                                 *           - mortgage:unloan
                                 *           - mortgage:vmg
                                 *           - mortgage:well money
                                 *      */
                                tags: string[];
                                merchant: {
                                    /**
                                     * @description id
                                     * @example ae4a051c-4791-11e8-8750-0a87c0279fe8
                                     */
                                    id: string;
                                    /**
                                     * @description Merchant name
                                     * @example Garfish Manly
                                     */
                                    businessName: string;
                                    /**
                                     * @description ABN
                                     * @example 90065628864
                                     */
                                    ABN: string;
                                    /**
                                     * @description full merchant logo
                                     * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-master.png
                                     */
                                    logoMaster: string;
                                    /**
                                     * @description thumbnail merchant logo
                                     * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-thumb.png
                                     */
                                    logoThumb: string;
                                    phoneNumber?: {
                                        /**
                                         * @description International Phone Number
                                         * @example +61 2 9977 0707
                                         */
                                        international?: string;
                                        /**
                                         * @description Local Phone Number
                                         * @example (02) 9977 0707
                                         */
                                        local?: string;
                                    };
                                    /**
                                     * @description Merchant Website
                                     * @example http://garfish.com.au/garfish-manly/
                                     */
                                    website: string;
                                } | null;
                                category: {
                                    /**
                                     * @description Indicates the method used to match a payment transaction with a merchant or business classification code. Description for each enum; merchantFull: Indicates an exact match between the transaction and a known merchant in the database. merchantPartial: Suggests a partial match with a merchant, usually based on substring or fuzzy logic. mcc: Match is done using the Merchant Category Code associated with the transaction. ml: Match is determined through machine learning algorithms for classification. none: Match is not found.
                                     *
                                     * @example merchantfull
                                     * @enum {string}
                                     */
                                    matchType?: "merchantFull" | "merchantPartial" | "mcc" | "ml" | "none";
                                    /**
                                     * @description The confidence score for the matchType which is a float value between 0 and 1. The higher the number, the higher the confidence in the match.
                                     * @example 1.0
                                     */
                                    matchScore?: string;
                                    /** @description Merchant category codes returned from Data holders. */
                                    mcc?: {
                                        /**
                                         * @description code
                                         * @example txMccCode-25028
                                         */
                                        code?: string;
                                        /**
                                         * @description title
                                         * @example
                                         */
                                        title?: string;
                                    };
                                    anzsic?: {
                                        division?: {
                                            /**
                                             * @description Division Details
                                             * @example Accommodation and Food Services
                                             */
                                            title?: string;
                                            /**
                                             * @description Division Code
                                             * @example H
                                             */
                                            code?: string;
                                        };
                                        subdivision?: {
                                            /**
                                             * @description Subdivision Code
                                             * @example 45
                                             */
                                            code?: string;
                                            /**
                                             * @description Subdivision Details
                                             * @example Food and Beverage Services
                                             */
                                            title?: string;
                                        };
                                        group?: {
                                            /**
                                             * @description Group Code
                                             * @example 451
                                             */
                                            code?: string;
                                            /**
                                             * @description Group Details
                                             * @example Cafes, Restaurants and Takeaway Food Services
                                             */
                                            title?: string;
                                        };
                                        class?: {
                                            /**
                                             * @description Class Details
                                             * @example Cafes and Restaurants
                                             */
                                            title?: string;
                                            /**
                                             * @description Class Code
                                             * @example 4511
                                             */
                                            code?: string;
                                        };
                                        subclass?: {
                                            /**
                                             * @description SubClass Details
                                             * @example Cafes and Restaurants
                                             */
                                            title?: string;
                                            /**
                                             * @description SubClass Code
                                             * @example 451100
                                             */
                                            code?: string;
                                        };
                                    };
                                } | null;
                            };
                            links: {
                                /**
                                 * @description Url of the account.
                                 * @example https://au-api.basiq.io/users/6a52015e/accounts/31eb30a0
                                 */
                                account: string;
                                /**
                                 * @description Url of the institution.
                                 * @example https://au-api.basiq.io/institutions/AU00000
                                 */
                                institution: string;
                                /**
                                 * @description Transaction self reference.
                                 * @example https://au-api.basiq.io/users/6a52015e/transactions/2082c765
                                 */
                                self: string;
                            };
                        }[];
                        links?: {
                            /**
                             * @description Self reference url.
                             * @example https://au-api.basiq.io/users/ea3a81/transactions
                             */
                            self: string;
                            /**
                             * @description URL to the next result page when there are more than 500 transactions.
                             * @example https://au-api.basiq.io/users/6a52015e/transactions?next=bf1ec9d4
                             */
                            next?: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
        };
    };
    getTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier of the user. */
                userId: string;
                /** @description The identifier of the transaction. */
                transactionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns a transaction if a valid transaction ID was provided. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Value is "transaction".
                         * @example transaction
                         */
                        type: string;
                        /**
                         * @description Uniquely identifies the transaction for this connection. Note that when a connection is refreshed pending transactions will receive new id's, whilst posted transactions will receive the same id's as before the refresh.
                         * @example d3de1ca1
                         */
                        id: string;
                        /**
                         * @description Identifies if a transaction is pending or posted. A pending transaction is an approved debit or credit transaction that has not been fully processed yet (i.e. has not been posted). Note that pending transactions are not available for all institutions.
                         * @example posted
                         * @enum {string}
                         */
                        status: "pending" | "posted";
                        /** @description The transaction description as submitted by the institution. */
                        description: string;
                        /** @description The reference for the transaction provided by the originating institution. */
                        reference: string;
                        /**
                         * @description Transaction amount. Outgoing funds are expressed as negative values.
                         * @example 123.12
                         */
                        amount: string;
                        /**
                         * @description Standard 3 character currency codes as per ISO-4217.
                         * @enum {string}
                         */
                        currency: "AUD" | "USD" | "GBP";
                        /**
                         * @description The id of the account resource the transaction belongs to.
                         * @example d3de1ca1
                         */
                        account: string;
                        /**
                         * @description Value of the account balance at time the transaction was completed.
                         * @example 123.12
                         */
                        balance?: string;
                        /**
                         * @description Identifies if the transaction is of debit or credit type.
                         * @example debit
                         * @enum {string}
                         */
                        direction: "debit" | "credit";
                        /**
                         * @description Describes the class(type) of transaction.
                         * @example payment
                         * @enum {string}
                         */
                        class: "bank-fee" | "payment" | "cash-withdrawal" | "transfer" | "loan-interest" | "refund" | "direct-credit" | "interest" | "loan-repayment";
                        /**
                         * @description The id of the institution resource the transaction originated from.
                         * @example AU00000
                         */
                        institution: string;
                        /**
                         * @description The id of the connection resource that was used to retrieve the transaction.
                         * @example d3de1ca1
                         */
                        connection: string;
                        /**
                         * @description Date that the user executed the transaction as provided by the institution. Note that not all transactions provide this value (varies by institution) e.g. "2017-11-10T00:00:00Z"
                         * @example null
                         */
                        transactionDate: string;
                        paymentDetails?: {
                            bpay?: {
                                /** @description BPAY Biller Code for the transaction. */
                                billerCode?: string;
                                /** @description Name of the BPAY biller for the transaction. */
                                billerName?: string;
                                /** @description CRN for the transaction. */
                                crn?: string;
                            };
                            /** @description 6 Digit APCA number for the initiating institution. The field is fixed-width and padded with leading zeros if applicable.
                             *      */
                            apcaNumber?: string;
                        };
                        /**
                         * @description Date the transaction was posted as provided by the institution. This value is null if the record is pending. e.g. "2017-11-10T21:46:44Z" or 2017-11-10T00:00:00Z.
                         * @example 2018-11-02T00:00:00Z
                         */
                        postDate: string;
                        /** @description The subClass attribute will only return values for payment transactions (i.e. will be empty for all others) plus [new] bank fee transactions for those relating to account conduct such as account overdrawn and direct debit dishonours. */
                        subClass: {
                            /**
                             * @description code
                             * @example 722
                             */
                            code?: string;
                            /**
                             * @description SubClass title
                             * @example Cafes and Restaurants
                             */
                            title?: string;
                        };
                        enrich: {
                            location: {
                                /**
                                 * @description Country
                                 * @example Australia
                                 */
                                country?: string;
                                /**
                                 * @description Address
                                 * @example 1/39 E Esplanade, Manly NSW 2095
                                 */
                                formattedAddress?: string;
                                geometry?: {
                                    /**
                                     * @description Latitude
                                     * @example -33.79988520000001
                                     */
                                    lat?: string;
                                    /**
                                     * @description Longitude
                                     * @example 151.2858021
                                     */
                                    lng?: string;
                                };
                                /**
                                 * @description Postal Code
                                 * @example 2095
                                 */
                                postalCode?: string;
                                /**
                                 * @description Route Name
                                 * @example E Esplanade
                                 */
                                route?: string;
                                /**
                                 * @description Route Number
                                 * @example 29
                                 */
                                routeNo?: string;
                                /**
                                 * @description State
                                 * @example NSW
                                 */
                                state?: string;
                                /**
                                 * @description Suburb
                                 * @example Manly
                                 */
                                suburb?: string;
                            } | null;
                            cleanDescription: string;
                            /** @description This field contains an array of strings, each representing a specific tag for the transaction. The format of each string should be `tag_name:tag_value`, where `tag_name` defines the type of transaction (e.g., `card`, `income`, `mortgage`), and `tag_value` provides additional details (e.g., "card:4615"). The tags help classify and identify transactions based on various criteria.
                             *
                             *           - card:4615
                             *           - conduct:card
                             *           - conduct:overdrawn
                             *           - conduct:cheque
                             *           - conduct:atm
                             *           - conduct:currency
                             *           - conduct:late
                             *           - conduct:admin
                             *           - conduct:dishonour
                             *           - conduct:interest
                             *           - governmentPayment:centrelink
                             *           - governmentPayment:centrelinkCarers
                             *           - governmentPayment:crisisSupport
                             *           - governmentPayment:education
                             *           - governmentPayment:familyAllowance
                             *           - governmentPayment:jobseekerPymt
                             *           - governmentPayment:medicare
                             *           - governmentPayment:newstart
                             *           - governmentPayment:pension
                             *           - governmentPayment:rentalAssistance
                             *           - governmentPayment:vetAffairs
                             *           - governmentPayment:youthAllowance
                             *           - income:childSupport
                             *           - income:insurance
                             *           - income:investment
                             *           - income:rent
                             *           - income:salary
                             *           - income:superannuation
                             *           - liability:afterpay
                             *           - liability:arl collect pty ltd
                             *           - liability:australian recoveries
                             *           - liability:axess
                             *           - liability:azora
                             *           - liability:baycorp
                             *           - liability:beforepay
                             *           - liability:brighte
                             *           - liability:bundll
                             *           - liability:cash converters
                             *           - liability:cash direct
                             *           - liability:cashngo
                             *           - liability:cash stop
                             *           - liability:cash train
                             *           - liability:ccc
                             *           - liability:cfmg pty ltd
                             *           - liability:charter mercantile
                             *           - liability:cigno
                             *           - liability:collectau
                             *           - liability:collection house
                             *           - liability:complete credit solutions
                             *           - liability:credit collection services
                             *           - liability:credit corp
                             *           - liability:creditline
                             *           - liability:deferit
                             *           - liability:dun and bradstreet
                             *           - liability:earnd
                             *           - liability:edstart
                             *           - liability:finance one
                             *           - liability:fundo
                             *           - liability:fupay
                             *           - liability:gem visa
                             *           - liability:humm
                             *           - liability:indebted
                             *           - liability:klarna
                             *           - liability:latitude
                             *           - liability:laybuy
                             *           - liability:limepay
                             *           - liability:lion finance
                             *           - liability:money3
                             *           - liability:moneyloop
                             *           - liability:mypaynow
                             *           - liability:nimble
                             *           - liability:nine25
                             *           - liability:openpay
                             *           - liability:panthera
                             *           - liability:payitlater
                             *           - liability:payright
                             *           - liability:pioneer credit
                             *           - liability:plenti
                             *           - liability:probe
                             *           - liability:q card
                             *           - liability:quickapay
                             *           - liability:spotmenow
                             *           - liability:sunshine loans
                             *           - liability:tapmypay
                             *           - liability:wagetap
                             *           - liability:wallet wizard
                             *           - liability:zip pay
                             *           - third-party:apple pay
                             *           - third-party:google
                             *           - third-party:paypal
                             *           - third-party:sp
                             *           - third-party:sq
                             *           - creditCard:creditCard
                             *           - expense:rent
                             *           - loan:loan repayment
                             *           - mortgage:afg home loans
                             *           - mortgage:aims
                             *           - mortgage:amo group
                             *           - mortgage:athena
                             *           - mortgage:aussie
                             *           - mortgage:bluestone
                             *           - mortgage:clickloans
                             *           - mortgage:emoney
                             *           - mortgage:express reverse mortgage
                             *           - mortgage:firstmac
                             *           - mortgage:fox symes
                             *           - mortgage:freedom lend
                             *           - mortgage:freedom loans
                             *           - mortgage:funding
                             *           - mortgage:heartland reverse mortgages
                             *           - mortgage:homeloans
                             *           - mortgage:homestar
                             *           - mortgage:homestart
                             *           - mortgage:household capital
                             *           - mortgage:illawarra home loans
                             *           - mortgage:keystart
                             *           - mortgage:la trobe financial
                             *           - mortgage:liberty financial
                             *           - mortgage:loans
                             *           - mortgage:mortgage house
                             *           - mortgage:mortgage offset
                             *           - mortgage:mortgageport
                             *           - mortgage:mortgage repayment
                             *           - mortgage:onetwo
                             *           - mortgage:online home loans
                             *           - mortgage:pacific mortgage group
                             *           - mortgage:pepper money
                             *           - mortgage:qantas money
                             *           - mortgage:reduce home loans
                             *           - mortgage:resi
                             *           - mortgage:resimac
                             *           - mortgage:sucasa
                             *           - mortgage:switzer home loans
                             *           - mortgage:ticToc
                             *           - mortgage:unloan
                             *           - mortgage:vmg
                             *           - mortgage:well money
                             *      */
                            tags: string[];
                            merchant: {
                                /**
                                 * @description id
                                 * @example ae4a051c-4791-11e8-8750-0a87c0279fe8
                                 */
                                id: string;
                                /**
                                 * @description Merchant name
                                 * @example Garfish Manly
                                 */
                                businessName: string;
                                /**
                                 * @description ABN
                                 * @example 90065628864
                                 */
                                ABN: string;
                                /**
                                 * @description full merchant logo
                                 * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-master.png
                                 */
                                logoMaster: string;
                                /**
                                 * @description thumbnail merchant logo
                                 * @example https://enrich-enrichmerchantslogobucket-x62p53eh5ld9.s3-ap-southeast-2.amazonaws.com/officeworks-thumb.png
                                 */
                                logoThumb: string;
                                phoneNumber?: {
                                    /**
                                     * @description International Phone Number
                                     * @example +61 2 9977 0707
                                     */
                                    international?: string;
                                    /**
                                     * @description Local Phone Number
                                     * @example (02) 9977 0707
                                     */
                                    local?: string;
                                };
                                /**
                                 * @description Merchant Website
                                 * @example http://garfish.com.au/garfish-manly/
                                 */
                                website: string;
                            } | null;
                            category: {
                                /**
                                 * @description Indicates the method used to match a payment transaction with a merchant or business classification code. Description for each enum; merchantFull: Indicates an exact match between the transaction and a known merchant in the database. merchantPartial: Suggests a partial match with a merchant, usually based on substring or fuzzy logic. mcc: Match is done using the Merchant Category Code associated with the transaction. ml: Match is determined through machine learning algorithms for classification. none: Match is not found.
                                 *
                                 * @example merchantfull
                                 * @enum {string}
                                 */
                                matchType?: "merchantFull" | "merchantPartial" | "mcc" | "ml" | "none";
                                /**
                                 * @description The confidence score for the matchType which is a float value between 0 and 1. The higher the number, the higher the confidence in the match.
                                 * @example 1.0
                                 */
                                matchScore?: string;
                                /** @description Merchant category codes returned from Data holders. */
                                mcc?: {
                                    /**
                                     * @description code
                                     * @example txMccCode-25028
                                     */
                                    code?: string;
                                    /**
                                     * @description title
                                     * @example
                                     */
                                    title?: string;
                                };
                                anzsic?: {
                                    division?: {
                                        /**
                                         * @description Division Details
                                         * @example Accommodation and Food Services
                                         */
                                        title?: string;
                                        /**
                                         * @description Division Code
                                         * @example H
                                         */
                                        code?: string;
                                    };
                                    subdivision?: {
                                        /**
                                         * @description Subdivision Code
                                         * @example 45
                                         */
                                        code?: string;
                                        /**
                                         * @description Subdivision Details
                                         * @example Food and Beverage Services
                                         */
                                        title?: string;
                                    };
                                    group?: {
                                        /**
                                         * @description Group Code
                                         * @example 451
                                         */
                                        code?: string;
                                        /**
                                         * @description Group Details
                                         * @example Cafes, Restaurants and Takeaway Food Services
                                         */
                                        title?: string;
                                    };
                                    class?: {
                                        /**
                                         * @description Class Details
                                         * @example Cafes and Restaurants
                                         */
                                        title?: string;
                                        /**
                                         * @description Class Code
                                         * @example 4511
                                         */
                                        code?: string;
                                    };
                                    subclass?: {
                                        /**
                                         * @description SubClass Details
                                         * @example Cafes and Restaurants
                                         */
                                        title?: string;
                                        /**
                                         * @description SubClass Code
                                         * @example 451100
                                         */
                                        code?: string;
                                    };
                                };
                            } | null;
                        };
                        links: {
                            /**
                             * @description Url of the account.
                             * @example https://au-api.basiq.io/users/6a52015e/accounts/31eb30a0
                             */
                            account: string;
                            /**
                             * @description Url of the institution.
                             * @example https://au-api.basiq.io/institutions/AU00000
                             */
                            institution: string;
                            /**
                             * @description Transaction self reference.
                             * @example https://au-api.basiq.io/users/6a52015e/transactions/2082c765
                             */
                            self: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server is not ready to handle the request. */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                            /**
                             * @description Title of the error
                             * @example Service Unavailable
                             */
                            title?: string;
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example service-unavailable
                             */
                            code: Record<string, never>;
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Service Unavailable. Try again later.
                             */
                            detail?: string;
                        }[];
                    };
                };
            };
        };
    };
    getConnections: {
        parameters: {
            query?: {
                /** @description Connections filters, id, status, institution.id. e.g institution.id.eq('AU00000') */
                filter?: string;
            };
            header?: never;
            path: {
                /** @description User identifier. */
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns details of connections. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Type, always "list".
                         * @example list
                         */
                        type: string;
                        data?: {
                            /**
                             * @description Type, always "connection".
                             * @example connection
                             */
                            type: string;
                            /**
                             * @description Connection identification.
                             * @example 61723
                             */
                            id: string;
                            /**
                             * @description method identification.
                             * @example openbanking
                             */
                            method: string;
                            /**
                             * @description Connection status, available only for SERVER_SCOPE.
                             * @example active
                             * @enum {string}
                             */
                            status?: "active" | "pending" | "invalid" | "pre-init";
                            /**
                             * @description Created date of the connection, available only for SERVER_SCOPE.
                             * @example 2019-07-29T07:34:09Z
                             */
                            createdDate: string;
                            /**
                             * @description Expiry date of the connection.This date is only set for open-banking connections.
                             *
                             *     For web connections, the expiry date field will be empty.
                             *
                             * @example 2020-07-29T07:34:09Z
                             */
                            expiryDate: string;
                            /**
                             * @description Connection last used date, available only for SERVER_SCOPE.
                             * @example 2020-06-22T11:15:09Z
                             */
                            lastUsed?: string;
                            /**
                             * ConnectionInstitution
                             * @description Institution details.
                             */
                            institution: {
                                /**
                                 * @description Institution id
                                 * @example AU00000
                                 */
                                id: string;
                                /**
                                 * ResourceLink
                                 * @description Link object containing a link to the resource, self reference.
                                 */
                                links: {
                                    /**
                                     * @description URL of the resource.
                                     * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                                     */
                                    self: string;
                                };
                                /**
                                 * @description Always "institution".
                                 * @example institution
                                 */
                                type: string;
                            };
                            /**
                             * GetConnectionsLinks
                             * @description Object containing links to resources.
                             */
                            links: {
                                /**
                                 * @description Accounts reference url.
                                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
                                 */
                                accounts?: string;
                                /**
                                 * @description Institution details.
                                 * @example https://au-api.basiq.io/institutions/AU00000
                                 */
                                institution: string;
                                /**
                                 * @description Connection self reference url.
                                 * @example https://au-api.basiq.io/users/cd6fbd92/connections/29523951
                                 */
                                self: string;
                                /**
                                 * @description Transactions reference url.
                                 * @example https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
                                 */
                                transactions?: string;
                            };
                        }[];
                        /**
                         * ResourceLink
                         * @description Link object containing a link to the resource, self reference.
                         */
                        links?: {
                            /**
                             * @description URL of the resource.
                             * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                             */
                            self: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server is not ready to handle the request. */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                            /**
                             * @description Title of the error
                             * @example Service Unavailable
                             */
                            title?: string;
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example service-unavailable
                             */
                            code: Record<string, never>;
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Service Unavailable. Try again later.
                             */
                            detail?: string;
                        }[];
                    };
                };
            };
        };
    };
    refreshConnections: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier of the user. */
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns a created jobs resource, if the operation succeeded. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Type, always "list".
                         * @example list
                         */
                        type: string;
                        /** @description Job details data. */
                        data: {
                            /**
                             * @description Type, always "job".
                             * @example job
                             */
                            type: string;
                            /**
                             * @description Job identification.
                             * @example 29523951
                             */
                            id: string;
                            /**
                             * ResourceLink
                             * @description Link object containing a link to the resource, self reference.
                             */
                            links: {
                                /**
                                 * @description URL of the resource.
                                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                                 */
                                self: string;
                            };
                        }[];
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
        };
    };
    getConnection: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier of the user. */
                userId: string;
                /** @description The identifier of the connection. */
                connectionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns details of a connection. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Type, always "connection".
                         * @example connection
                         */
                        type: string;
                        /**
                         * @description A string that uniquely identifies the user connection.
                         * @example 61723
                         */
                        id: string;
                        /**
                         * @description A string that uniquely identifies the user connections either it is web or openbanking
                         * @example open-banking
                         */
                        method: string;
                        /**
                         * @description Created date of the connection, available only for SERVER_SCOPE.
                         * @example 2019-07-29T07:34:09Z
                         */
                        createdDate: string;
                        /**
                         * @description Expiry date of the connection.This date is only set for open-banking connections.
                         *
                         *     For web connections, the expiry date field will be empty.
                         *
                         * @example 2020-07-29T07:34:09Z
                         */
                        expiryDate: string;
                        /**
                         * @description UTC Date and Time of when the connection was last used, in RFC 3339 format, available only for SERVER_SCOPE.
                         * @example 2020-06-22T11:15:09Z
                         */
                        lastUsed?: string;
                        accounts?: {
                            /**
                             * @description Type always "list".
                             * @example list
                             */
                            type: string;
                            /** @description Accounts details */
                            data: {
                                /**
                                 * @description Type always "account".
                                 * @example account
                                 */
                                type: string;
                                /**
                                 * @description Account identification.
                                 * @example 319ae910
                                 */
                                id: string;
                                /**
                                 * @description Account name.
                                 * @example Business account
                                 */
                                name: string;
                                /**
                                 * @description Currency
                                 * @example AUD
                                 */
                                currency: string;
                                class: {
                                    /**
                                     * @description Account type
                                     * @example mortgage
                                     */
                                    type: string;
                                    /**
                                     * @description Product name.
                                     * @example Hooli Home Loan
                                     */
                                    product: string;
                                };
                                /**
                                 * @description Account number
                                 * @example 105148119695
                                 */
                                accountNo: string;
                                /**
                                 * @description Account available funds, nullable.
                                 * @example 200.54
                                 */
                                availableFunds: string | null;
                                /**
                                 * @description Account balance, nullable.
                                 * @example 100.12
                                 */
                                balance: string | null;
                                /**
                                 * @description Account last updated date and time.
                                 * @example 2017-09-28T11:15:09.756Z
                                 */
                                lastUpdated: string;
                                /**
                                 * @description Account status.
                                 * @example available
                                 * @enum {string}
                                 */
                                status: "available" | "unavailable";
                                links: {
                                    /**
                                     * @description transactions link to the transactions associated with this account
                                     * @example https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
                                     */
                                    transactions: string;
                                    /**
                                     * @description self link to the requested account
                                     * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                                     */
                                    self: string;
                                };
                            }[];
                        };
                        /**
                         * ConnectionInstitution
                         * @description Institution details.
                         */
                        institution: {
                            /**
                             * @description Institution id
                             * @example AU00000
                             */
                            id: string;
                            /**
                             * ResourceLink
                             * @description Link object containing a link to the resource, self reference.
                             */
                            links: {
                                /**
                                 * @description URL of the resource.
                                 * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                                 */
                                self: string;
                            };
                            /**
                             * @description Always "institution".
                             * @example institution
                             */
                            type: string;
                        };
                        profile?: {
                            /**
                             * @description User email address
                             * @example [
                             *       "gavin@hooli.com"
                             *     ]
                             */
                            emailAddresses: string[];
                            /**
                             * @description User first name
                             * @example Gavin
                             */
                            firstName: string;
                            /**
                             * @description User full name
                             * @example Gavin Belson
                             */
                            fullName: string;
                            /**
                             * @description User last name
                             * @example Belson
                             */
                            lastName: string;
                            /** @description User middle name */
                            middleName: string;
                            /**
                             * @description User phone number
                             * @example [
                             *       "XXXX 888 991"
                             *     ]
                             */
                            phoneNumbers: string[];
                            /** @description Physical user addresses */
                            physicalAddresses: {
                                /**
                                 * @description User address.
                                 * @example 13/91 Fisher Rd
                                 */
                                addressLine1: string;
                                /** @description Always "null" */
                                addressLine2: string | null;
                                /** @description Always "null" */
                                addressLine3: string | null;
                                /**
                                 * @description City
                                 * @example Sydney
                                 */
                                city: string;
                                country?: string;
                                /**
                                 * @description Country code
                                 * @example AU
                                 */
                                countryCode: string;
                                /**
                                 * @description Address formatted.
                                 * @example 13/91 Fisher Rd, Dee Why NSW 2099, Australia
                                 */
                                formattedAddress: string;
                                /**
                                 * @description Post code
                                 * @example 2099
                                 */
                                postcode: string;
                                /**
                                 * @description State
                                 * @example NSW
                                 */
                                state: string;
                            }[];
                        };
                        /**
                         * @description Indicates the connection status, available only for SERVER_SCOPE.
                         * @example active
                         * @enum {string}
                         */
                        status?: "active" | "pending" | "invalid" | "pre-init";
                        /**
                         * GetConnectionLinks
                         * @description Object containing links to resources.
                         */
                        links: {
                            /**
                             * @description Accounts reference url.
                             * @example https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
                             */
                            accounts?: string;
                            /**
                             * @description Connection self reference url.
                             * @example https://au-api.basiq.io/users/cd6fbd92-0b12-43ba-a3c1-286dd5f4f396/connections/29523951
                             */
                            self: string;
                            /**
                             * @description Transactions reference url.
                             * @example https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
                             */
                            transactions?: string;
                            /**
                             * @description User reference url.
                             * @example https://au-api.basiq.io/users/cd6fbd92
                             */
                            user: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error status response code indicates that the request has not been applied because it lacks valid authentication credentials for the target resource. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example unauthorized-access
                             * @enum {string}
                             */
                            code: "unauthorized-access" | "invalid-authorization-token";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example You are not authorized to access this resource
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Unauthorized Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server is not ready to handle the request. */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                            /**
                             * @description Title of the error
                             * @example Service Unavailable
                             */
                            title?: string;
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example service-unavailable
                             */
                            code: Record<string, never>;
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Service Unavailable. Try again later.
                             */
                            detail?: string;
                        }[];
                    };
                };
            };
        };
    };
    deleteConnection: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier of the user. */
                userId: string;
                /** @description The identifier of the connection. */
                connectionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns an empty body if the delete succeeded. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server is not ready to handle the request. */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                            /**
                             * @description Title of the error
                             * @example Service Unavailable
                             */
                            title?: string;
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example service-unavailable
                             */
                            code: Record<string, never>;
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Service Unavailable. Try again later.
                             */
                            detail?: string;
                        }[];
                    };
                };
            };
        };
    };
    refreshConnection: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier of the user. */
                userId: string;
                /** @description The identifier of the connection. */
                connectionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns a created job resource, if the operation succeeded. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Type, always "job".
                         * @example job
                         */
                        type: string;
                        /**
                         * @description Job identification.
                         * @example 29523951
                         */
                        id: string;
                        /**
                         * ResourceLink
                         * @description Link object containing a link to the resource, self reference.
                         */
                        links: {
                            /**
                             * @description URL of the resource.
                             * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                             */
                            self: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server is not ready to handle the request. */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                            /**
                             * @description Title of the error
                             * @example Service Unavailable
                             */
                            title?: string;
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example service-unavailable
                             */
                            code: Record<string, never>;
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Service Unavailable. Try again later.
                             */
                            detail?: string;
                        }[];
                    };
                };
            };
        };
    };
    purgeConnectionData: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier of the user. */
                userId: string;
                /** @description The identifier of the connection. */
                connectionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns an empty body if the delete succeeded. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Error that access is forbidden and tied to the application logic, such as insufficient rights to a resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server can't find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server is not ready to handle the request. */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                            /**
                             * @description Title of the error
                             * @example Service Unavailable
                             */
                            title?: string;
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example service-unavailable
                             */
                            code: Record<string, never>;
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Service Unavailable. Try again later.
                             */
                            detail?: string;
                        }[];
                    };
                };
            };
        };
    };
    createStatement: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier of the user */
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    /** @description The identifier of the institution to which the statement relates (e.g., "AU01001"). **Note**: Sandbox institutions (AU00000) do not support file uploads. */
                    institutionId: string;
                    /**
                     * Format: binary
                     * @description The official PDF bank statement or CSV file to be uploaded. CSV files must conform to the file specification provided by Basiq.
                     */
                    statement: string;
                };
            };
        };
        responses: {
            /** @description Job resource created successfully */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description The type of resource, always "job".
                         * @example job
                         */
                        type: string;
                        /**
                         * @description The unique identifier of the job.
                         * @example 61723
                         */
                        id: string;
                        /**
                         * ResourceLink
                         * @description Link object containing a link to the resource, self reference.
                         */
                        links: {
                            /**
                             * @description URL of the resource.
                             * @example https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
                             */
                            self: string;
                        };
                    };
                };
            };
            /** @description Bad request due to missing or invalid parameters */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Forbidden access due to insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example forbidden-access
                             * @enum {string}
                             */
                            code: "forbidden-access" | "no-production-access" | "access-denied";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Access to this resource is forbidden.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Forbidden Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Service unavailable */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                            /**
                             * @description Title of the error
                             * @example Service Unavailable
                             */
                            title?: string;
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example service-unavailable
                             */
                            code: Record<string, never>;
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Service Unavailable. Try again later.
                             */
                            detail?: string;
                        }[];
                    };
                };
            };
        };
    };
    getConnectors: {
        parameters: {
            query?: {
                /** @description Filter parameter can be used to filter connector list by connector property. This parameter should contain a comma-separated list of filter statements.</br>
                 *     A filter statement is composed of the entity name (in this case, it is always 'connector'), the property name (e.g., 'stage'), the filter operator (e.g., 'eq'), and the quoted string value in parentheses (e.g., "('live')").</br>
                 *     The following list of regular expressions describes acceptable filter statements:</br>
                 *     â€¢ (connector).(id).(eq)\(('[A-Z][A-Z][0-9]{5}')\)</br>
                 *     â€¢ (connector).(method).(eq)\(('web'||'open-banking'|'pdf'|'csv')\)</br>
                 *     â€¢ (connector).(status).(eq|ne)\(('operational'|'degraded-performance'|'partial-outage'|'major-outage'|'under-maintenance')\)</br>
                 *     â€¢ (connector).(status).(in)\(([\w\W]+)\)</br>
                 *     â€¢ (connector).(stage).(eq|ne)\(('live'|'beta'|'alpha')\)</br>
                 *     â€¢ (connector).(stage).(in)\(([\w\W]+)\)</br>
                 *     â€¢ (connector).(scopes).(in|eq|ne)\(([\w\W]+)\)</br>
                 *     â€¢ (connector).(institution).(country).(eq|ne)\(('Australia'|'New Zealand')\)</br>
                 *     â€¢ (connector).(institution).(country).(in)\(([\w\W]+)\)</br>
                 *     â€¢ (connector).(institution).(tier).(eq|ne)\(('1'|'2'|'3'|'4')\)</br>
                 *     â€¢ (connector).(institution).(tier).(in)\(([\W\d]+)\)</br>
                 *     â€¢ (connector).(institution).(type).(eq|ne)\(('Bank'|'Bank (Foreign)'|'Test Bank'|'Credit Union'|'Financial Services'|'Superannuation')\)</br>
                 *     â€¢ (connector).(authorization).(type).(eq|ne)\(('user'|'user-mfa'|'user-mfa-intermittent'|'other'|'token')\)</br>
                 *     â€¢ (connector).(authorization).(type).(in)\(([\w\W]+)\)</br>
                 *     â€¢ (connector).(connectorEngine).(eq|ne)\(('chrome'|'node')\)</br>
                 *     Multiple filter definitions should be separated with a comma (,).</br>
                 *     For example, this filter statement will keep only live tier 1 and tier 2 institutions: filter=connector.stage.eq('live'),connector.institution.tier.in('1','2')</br> */
                filter?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns data of single connector. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Type identifies response data format
                         * @example list
                         */
                        type: string;
                        /**
                         * Format: int64
                         * @description TotalCount contains total count of connectors
                         * @example 328
                         */
                        totalCount: number;
                        /** @description Data contains list of connectors */
                        data: {
                            /**
                             * @description Resource type identifier. It is always "connector" for this model.
                             *     connector ConnectorEntityType
                             * @example connector
                             * @enum {string}
                             */
                            type: "connector";
                            /**
                             * @description Institution ID
                             * @example AU00000
                             */
                            id: string;
                            /**
                             * @description Current Connector method
                             * @example web
                             * @enum {string}
                             */
                            method: "web" | "open-banking" | "csv" | "pdf";
                            /**
                             * @description Current Connector stage
                             * @example beta
                             */
                            stage: string;
                            /** @description FeatureCondition type that describes an feature status for institution */
                            status: string;
                            /** @description ConnectorInstitutionResource connector Institution  resource type */
                            institution: {
                                /**
                                 * @description Institution type identifier
                                 *     Bank BankInstitutionType  BankInstitutionType institution type identifier for Banks
                                 *     Bank (Foreign) BankForeignInstitutionType BankForeignInstitutionType institution type identifier for Foreign banks
                                 *     Test Bank TestBankInstitutionType  TestBankInstitutionType institution type identifier for Test banks
                                 *     Credit Union CreditUnionInstitutionType  CreditUnionInstitutionType institution type identifier for Credit union institutions
                                 *     Financial Services FinancialServicesInstitutionType FinancialServicesInstitutionType institution type identifier for Financial service institutions
                                 *     Superannuation SuperannuationInstitutionType SuperannuationInstitutionType institution type identifier for Superannuation institutions
                                 *     Building Society BuildingSociety  BuildingSociety institution type identifier for Building Society institutions
                                 *     Government Government  Government institution type identifier for Government institutions
                                 * @example Bank
                                 * @enum {string}
                                 */
                                type: "Bank" | "Bank (Foreign)" | "Test Bank" | "Credit Union" | "Financial Services" | "Superannuation" | "Building Society" | "Government";
                                /**
                                 * @description Institution name
                                 * @example Hooli Bank
                                 */
                                name: string;
                                /**
                                 * @description Institution short name
                                 * @example Hooli
                                 */
                                shortName: string;
                                /**
                                 * @description Institution tier identifier
                                 *     1 TierOne  TierOne tier identifier for tier1 institution
                                 *     2 TierTwo  TierTwo tier identifier for tier2 institution
                                 *     3 TierThree  TierThree tier identifier for tier3 institution
                                 *     4 TierFour  TierFour tier identifier for tier4 institution
                                 * @example 1
                                 * @enum {string}
                                 */
                                tier: "1" | "2" | "3" | "4";
                                /**
                                 * @description Institution country name
                                 * @example Australia
                                 */
                                country: string;
                                /**
                                 * @description A link for Data Holder (where available) to a page explaining CDR data sharing process.
                                 *
                                 * @example https://example.com/banking/help-support/open-banking.html
                                 */
                                cdrFAQ?: string;
                                /**
                                 * @description The email address for CDR-related inquiries.
                                 * @example openbanking.dataholdersupport@example.com.au
                                 */
                                cdrEmail?: string;
                                /**
                                 * @description The URL to the CDR policy document detailing the institution's data practices and consumer rights.
                                 * @example https://www.example.com.au/CDRpolicy
                                 */
                                cdrPolicy?: string;
                                /**
                                 * @description A unique identifier assigned to the CDR institution by the CDR program.
                                 * @example DHBNK000111
                                 */
                                cdrProviderNumber?: string;
                                /**
                                 * @description ABN for the Data Holder ( only available in openbanking ).
                                 * @example 87087651111
                                 */
                                abn?: string;
                                /**
                                 * @description ACN for the Data Holder ( only available in openbanking ).
                                 * @example 087651111
                                 */
                                acn?: string;
                                /** @description Institution logo resource type */
                                logo: {
                                    /** @description Colors contains institution colors type */
                                    colors?: {
                                        /** @description Primary primary institution color */
                                        primary?: string;
                                    };
                                    /** @description institution logo resource links */
                                    links: {
                                        /**
                                         * @description URL to full size logo
                                         * @example https://example.com/AU00000-full.svg
                                         */
                                        full: string;
                                        /**
                                         * @description Square formatted logo URL
                                         * @example https://example.com/AU00000.svg
                                         */
                                        square: string;
                                    };
                                    /**
                                     * @description Resource type identifier.
                                     *     image ImageResourceType
                                     * @example image
                                     * @enum {string}
                                     */
                                    type: "image";
                                };
                            };
                            /** @description Connector scopes array */
                            scopes: string[];
                            authorization: {
                                /**
                                 * @description Authorization type identifier
                                 *     user AuthorizationUser  AuthorizationUser "User" authorization type identifier
                                 *     token AuthorizationToken AuthorizationToken "Token" authorization type identifier
                                 *     other AuthorizationOther  AuthorizationOther "Other" authorization type identifier
                                 *     user-mfa AuthorizationUserMfa  AuthorizationUserMfa "UserMfa" authorization type identifier
                                 *     user-mfa-intermittent AuthorizationUserMfaIntermittent AuthorizationUserMfaIntermittent "UserMfaIntermittent" authorization type identifier
                                 * @example user
                                 * @enum {string}
                                 */
                                type: "user" | "token" | "other" | "user-mfa" | "user-mfa-intermittent";
                                meta?: {
                                    /**
                                     * @description URL to institution forgotten password page
                                     * @example https://example.com/forgotten-password
                                     */
                                    forgotten_password_url?: string;
                                    /**
                                     * @description Login ID field caption that should be shown on UI
                                     * @example User name
                                     */
                                    login_id_caption?: string;
                                    /**
                                     * @description Password field caption that should be shown on UI
                                     * @example Password
                                     */
                                    password_caption?: string;
                                    /**
                                     * @description Secondary loginID caption that should be shown on UI
                                     * @example Secondary login id
                                     */
                                    secondary_login_id_caption?: string;
                                    /**
                                     * @description Security code caption that should be shown on UI
                                     * @example Security code
                                     */
                                    security_code_caption?: string;
                                };
                            };
                            /** @description InstitutionPerformanceStats response type for institution performance stats */
                            stats: {
                                /** @description AverageDurationMs average connector duration in milliseconds per segments.
                                 *     When durations are not known for institution this field will be `null`. */
                                averageDurationMs?: {
                                    /**
                                     * Format: int64
                                     * @description Connector average duration in milliseconds of <b>fetch accounts</b> step for institution
                                     */
                                    retrieveAccounts?: number;
                                    /**
                                     * Format: int64
                                     * @description Connector average duration in milliseconds of <b>fetch metadata</b> step for institution
                                     */
                                    retrieveMeta?: number;
                                    /**
                                     * Format: int64
                                     * @description Connector average duration in milliseconds of <b>fetch transactions</b> step for institution
                                     */
                                    retrieveTransactions?: number;
                                    /**
                                     * Format: int64
                                     * @description Total connector average duration in milliseconds
                                     */
                                    total?: number;
                                    /**
                                     * Format: int64
                                     * @description Connector average duration in milliseconds of <b>verifiy credentials</b> step for institution
                                     */
                                    verifyCredentials?: number;
                                };
                            };
                            /** @description ResourceLinks contains resource links */
                            links?: {
                                /** @description URL to resource itself */
                                self: string;
                            };
                        }[];
                        /** @description ResourceLinks contains resource links */
                        links: {
                            /** @description URL to resource itself */
                            self: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Returns error that indicates unauthorized access. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example unauthorized-access
                             * @enum {string}
                             */
                            code: "unauthorized-access" | "invalid-authorization-token";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example You are not authorized to access this resource
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Unauthorized Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server cannot find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
        };
    };
    getConnector: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Connector ID */
                connectorId: string;
                /** @description Connector method */
                method: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns data of single connector. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Resource type identifier. It is always "connector" for this model.
                         *     connector ConnectorEntityType
                         * @example connector
                         * @enum {string}
                         */
                        type: "connector";
                        /**
                         * @description Institution ID
                         * @example AU00000
                         */
                        id: string;
                        /**
                         * @description Current Connector method
                         * @example web
                         * @enum {string}
                         */
                        method: "web" | "open-banking" | "csv" | "pdf";
                        /**
                         * @description Current Connector stage
                         * @example beta
                         */
                        stage: string;
                        /** @description FeatureCondition type that describes an feature status for institution */
                        status: string;
                        /** @description ConnectorInstitutionResource connector Institution  resource type */
                        institution: {
                            /**
                             * @description Institution type identifier
                             *     Bank BankInstitutionType  BankInstitutionType institution type identifier for Banks
                             *     Bank (Foreign) BankForeignInstitutionType BankForeignInstitutionType institution type identifier for Foreign banks
                             *     Test Bank TestBankInstitutionType  TestBankInstitutionType institution type identifier for Test banks
                             *     Credit Union CreditUnionInstitutionType  CreditUnionInstitutionType institution type identifier for Credit union institutions
                             *     Financial Services FinancialServicesInstitutionType FinancialServicesInstitutionType institution type identifier for Financial service institutions
                             *     Superannuation SuperannuationInstitutionType SuperannuationInstitutionType institution type identifier for Superannuation institutions
                             *     Building Society BuildingSociety  BuildingSociety institution type identifier for Building Society institutions
                             *     Government Government  Government institution type identifier for Government institutions
                             * @example Bank
                             * @enum {string}
                             */
                            type: "Bank" | "Bank (Foreign)" | "Test Bank" | "Credit Union" | "Financial Services" | "Superannuation" | "Building Society" | "Government";
                            /**
                             * @description Institution name
                             * @example Hooli Bank
                             */
                            name: string;
                            /**
                             * @description Institution short name
                             * @example Hooli
                             */
                            shortName: string;
                            /**
                             * @description Institution tier identifier
                             *     1 TierOne  TierOne tier identifier for tier1 institution
                             *     2 TierTwo  TierTwo tier identifier for tier2 institution
                             *     3 TierThree  TierThree tier identifier for tier3 institution
                             *     4 TierFour  TierFour tier identifier for tier4 institution
                             * @example 1
                             * @enum {string}
                             */
                            tier: "1" | "2" | "3" | "4";
                            /**
                             * @description Institution country name
                             * @example Australia
                             */
                            country: string;
                            /**
                             * @description A link for Data Holder (where available) to a page explaining CDR data sharing process.
                             *
                             * @example https://example.com/banking/help-support/open-banking.html
                             */
                            cdrFAQ?: string;
                            /**
                             * @description The email address for CDR-related inquiries.
                             * @example openbanking.dataholdersupport@example.com.au
                             */
                            cdrEmail?: string;
                            /**
                             * @description The URL to the CDR policy document detailing the institution's data practices and consumer rights.
                             * @example https://www.example.com.au/CDRpolicy
                             */
                            cdrPolicy?: string;
                            /**
                             * @description A unique identifier assigned to the CDR institution by the CDR program.
                             * @example DHBNK000111
                             */
                            cdrProviderNumber?: string;
                            /**
                             * @description ABN for the Data Holder ( only available in openbanking ).
                             * @example 87087651111
                             */
                            abn?: string;
                            /**
                             * @description ACN for the Data Holder ( only available in openbanking ).
                             * @example 087651111
                             */
                            acn?: string;
                            /** @description Institution logo resource type */
                            logo: {
                                /** @description Colors contains institution colors type */
                                colors?: {
                                    /** @description Primary primary institution color */
                                    primary?: string;
                                };
                                /** @description institution logo resource links */
                                links: {
                                    /**
                                     * @description URL to full size logo
                                     * @example https://example.com/AU00000-full.svg
                                     */
                                    full: string;
                                    /**
                                     * @description Square formatted logo URL
                                     * @example https://example.com/AU00000.svg
                                     */
                                    square: string;
                                };
                                /**
                                 * @description Resource type identifier.
                                 *     image ImageResourceType
                                 * @example image
                                 * @enum {string}
                                 */
                                type: "image";
                            };
                        };
                        /** @description Connector scopes array */
                        scopes: string[];
                        authorization: {
                            /**
                             * @description Authorization type identifier
                             *     user AuthorizationUser  AuthorizationUser "User" authorization type identifier
                             *     token AuthorizationToken AuthorizationToken "Token" authorization type identifier
                             *     other AuthorizationOther  AuthorizationOther "Other" authorization type identifier
                             *     user-mfa AuthorizationUserMfa  AuthorizationUserMfa "UserMfa" authorization type identifier
                             *     user-mfa-intermittent AuthorizationUserMfaIntermittent AuthorizationUserMfaIntermittent "UserMfaIntermittent" authorization type identifier
                             * @example user
                             * @enum {string}
                             */
                            type: "user" | "token" | "other" | "user-mfa" | "user-mfa-intermittent";
                            meta?: {
                                /**
                                 * @description URL to institution forgotten password page
                                 * @example https://example.com/forgotten-password
                                 */
                                forgotten_password_url?: string;
                                /**
                                 * @description Login ID field caption that should be shown on UI
                                 * @example User name
                                 */
                                login_id_caption?: string;
                                /**
                                 * @description Password field caption that should be shown on UI
                                 * @example Password
                                 */
                                password_caption?: string;
                                /**
                                 * @description Secondary loginID caption that should be shown on UI
                                 * @example Secondary login id
                                 */
                                secondary_login_id_caption?: string;
                                /**
                                 * @description Security code caption that should be shown on UI
                                 * @example Security code
                                 */
                                security_code_caption?: string;
                            };
                        };
                        /** @description InstitutionPerformanceStats response type for institution performance stats */
                        stats: {
                            /** @description AverageDurationMs average connector duration in milliseconds per segments.
                             *     When durations are not known for institution this field will be `null`. */
                            averageDurationMs?: {
                                /**
                                 * Format: int64
                                 * @description Connector average duration in milliseconds of <b>fetch accounts</b> step for institution
                                 */
                                retrieveAccounts?: number;
                                /**
                                 * Format: int64
                                 * @description Connector average duration in milliseconds of <b>fetch metadata</b> step for institution
                                 */
                                retrieveMeta?: number;
                                /**
                                 * Format: int64
                                 * @description Connector average duration in milliseconds of <b>fetch transactions</b> step for institution
                                 */
                                retrieveTransactions?: number;
                                /**
                                 * Format: int64
                                 * @description Total connector average duration in milliseconds
                                 */
                                total?: number;
                                /**
                                 * Format: int64
                                 * @description Connector average duration in milliseconds of <b>verifiy credentials</b> step for institution
                                 */
                                verifyCredentials?: number;
                            };
                        };
                        /** @description ResourceLinks contains resource links */
                        links?: {
                            /** @description URL to resource itself */
                            self: string;
                        };
                    };
                };
            };
            /** @description Returns error that server cannot or will not process the request due to something that is perceived to be a client error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example parameter-not-valid
                             * @enum {string}
                             */
                            code: "parameter-not-supplied" | "parameter-not-valid" | "unsupported-accept" | "invalid-content" | "institution-not-supported" | "invalid-credentials";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example The provided filter parameter is in invalid format or unsupported.
                             */
                            detail?: string;
                            /**
                             * Source
                             * @description An object containing references to the source of the error.
                             */
                            source?: {
                                /**
                                 * @description String indicating which URI query parameter caused the error.
                                 * @example userId
                                 */
                                parameter?: string;
                                /**
                                 * @description Location to the object or attribute that the error relates to.
                                 * @example users/userId
                                 */
                                pointer?: string;
                            };
                            /**
                             * @description Title of the error
                             * @example Parameter not valid.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                    };
                };
            };
            /** @description Returns error that indicates unauthorized access. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example unauthorized-access
                             * @enum {string}
                             */
                            code: "unauthorized-access" | "invalid-authorization-token";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example You are not authorized to access this resource
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Unauthorized Access
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error indicating that server cannot find requested resource. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example resource-not-found
                             * @enum {string}
                             */
                            code: "resource-not-found";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Resource not found.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Requested resource is not found.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
            /** @description Returns error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @description Unique identifier for this particular occurrence of the problem.
                         * @example ac5ah5i
                         */
                        correlationId: string;
                        /** @description Error data. */
                        data: {
                            /**
                             * @description Application-specific error code, expressed as a string value.
                             * @example internal-server-error
                             * @enum {string}
                             */
                            code: "internal-server-error";
                            /**
                             * @description Human-readable explanation specific to this occurrence of the problem.
                             * @example Internal Server error. Contact support.
                             */
                            detail?: string;
                            /**
                             * @description Title of the error
                             * @example Internal Server error.
                             */
                            title?: string;
                            /**
                             * @description Type of the response, always "error"
                             * @example error
                             */
                            type: string;
                        }[];
                        /**
                         * @description Always "list".
                         * @example list
                         */
                        type: string;
                    };
                };
            };
        };
    };
}
